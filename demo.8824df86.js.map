{"version":3,"sources":["../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/AssertionError.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Collection.js","../node_modules/ol/has.js","../node_modules/ol/asserts.js","../node_modules/ol/transform.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/ol/math.js","../node_modules/ol/color.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/render/EventType.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/string.js","../node_modules/ol/coordinate.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/render/Event.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/render/canvas.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileState.js","../node_modules/ol/TileQueue.js","../node_modules/ol/ViewHint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/easing.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/View.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/KeyCode.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/size.js","../node_modules/ol/Map.js","../node_modules/ol/source/Source.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/ImageState.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/Tile.js","../node_modules/ol/ImageBase.js","../node_modules/ol/Image.js","../node_modules/ol/ImageTile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/net.js","../node_modules/ol/source/BingMaps.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/CartoDB.js","../node_modules/ol/Feature.js","../node_modules/rbush/rbush.min.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/source/Cluster.js","../node_modules/ol/DataTile.js","../node_modules/ol/source/DataTile.js","../node_modules/@petamoriken/float16/browser/float16.js","../node_modules/xml-utils/get-attribute.js","../node_modules/xml-utils/index-of-match.js","../node_modules/xml-utils/index-of-match-end.js","../node_modules/xml-utils/count-substring.js","../node_modules/xml-utils/find-tag-by-name.js","../node_modules/xml-utils/find-tags-by-name.js","../node_modules/geotiff/dist-module/globals.js","../node_modules/geotiff/dist-module/rgb.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","../node_modules/geotiff/dist-module/compression/index.js","../node_modules/geotiff/dist-module/resample.js","../node_modules/geotiff/dist-module/geotiffimage.js","../node_modules/geotiff/dist-module/dataview64.js","../node_modules/geotiff/dist-module/dataslice.js","../node_modules/geotiff/dist-module/pool.js","../node_modules/geotiff/dist-module/source/httputils.js","../node_modules/geotiff/dist-module/source/basesource.js","../node_modules/yallist/iterator.js","../node_modules/yallist/yallist.js","../node_modules/lru-cache/index.js","../node_modules/geotiff/dist-module/utils.js","../node_modules/geotiff/dist-module/source/blockedsource.js","../node_modules/geotiff/dist-module/source/client/base.js","../node_modules/geotiff/dist-module/source/client/fetch.js","../node_modules/geotiff/dist-module/source/client/xhr.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/geotiff/dist-module/source/client/http.js","../node_modules/geotiff/dist-module/source/remote.js","../node_modules/geotiff/dist-module/source/arraybuffer.js","../node_modules/geotiff/dist-module/source/filereader.js","../node_modules/geotiff/dist-module/source/file.js","../node_modules/geotiff/dist-module/geotiffwriter.js","../node_modules/geotiff/dist-module/logging.js","../node_modules/geotiff/dist-module/geotiff.js","../node_modules/ol/source/GeoTIFF.js","../node_modules/ol/source/Zoomify.js","../node_modules/ol/format/IIIFInfo.js","../node_modules/ol/source/IIIF.js","../node_modules/ol/reproj/Image.js","../node_modules/ol/source/Image.js","../node_modules/ol/uri.js","../node_modules/ol/source/ImageArcGISRest.js","../node_modules/ol/ImageCanvas.js","../node_modules/ol/source/ImageCanvas.js","../node_modules/ol/source/ImageMapGuide.js","../node_modules/ol/source/ImageStatic.js","../node_modules/ol/source/wms.js","../node_modules/ol/source/ImageWMS.js","../node_modules/ol/source/OSM.js","../node_modules/ol/layer/BaseImage.js","../node_modules/ol/renderer/canvas/ImageLayer.js","../node_modules/ol/layer/Image.js","../node_modules/ol/source/Raster.js","../node_modules/ol/source/Stamen.js","../node_modules/ol/source/TileArcGISRest.js","../node_modules/ol/source/TileDebug.js","../node_modules/ol/source/TileJSON.js","../node_modules/ol/source/TileWMS.js","../node_modules/ol/source/UTFGrid.js","../node_modules/ol/VectorTile.js","../node_modules/ol/VectorRenderTile.js","../node_modules/ol/source/VectorTile.js","../node_modules/ol/tilegrid/WMTS.js","../node_modules/ol/source/WMTS.js","../node_modules/ol/source.js","../rollup/maplibregl.js","../src/MapLibreLayer.js","demo.js","../node_modules/geotiff/dist-module/predictor.js","../node_modules/geotiff/dist-module/compression/basedecoder.js","../node_modules/pako/dist/pako.esm.mjs","../node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["BaseEvent","constructor","type","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","evt","PROPERTYCHANGE","Disposable","disposed","dispose","disposeInternal","binarySearch","haystack","needle","comparator","mid","cmp","numberSafeCompareFunction","low","high","length","found","a","b","linearFindNearest","arr","direction","n","i","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","remove","obj","indexOf","splice","equals","arr1","arr2","len1","stableSort","compareFnc","index","value","sort","isSorted","func","strict","compare","every","currentVal","res","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","toPromise","getter","err","Promise","reject","resolve","promiseGetter","clear","object","property","isEmpty","Target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","abstract","Error","uidCounter_","getUid","ol_uid","String","VERSION","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","messages","AssertionError","code","message","name","ADD","REMOVE","Property","LENGTH","CollectionEvent","element","Collection","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","assert","assertion","errorCode","tmp_","create","reset","transform","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","setFromArray","coordinate","x","y","rotate","angle","cos","Math","sin","scale","makeScale","translate","dx","dy","compose","dx1","dy1","sx","sy","dx2","dy2","composeCssTransform","toString","invert","makeInverse","det","determinant","mat","transformStringDiv","transformString","join","node","document","createElement","style","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","createOrUpdate","min","max","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","abs","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getEnlargedArea","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","getIntersection","intersection","intersects","getMargin","getSize","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","width","height","l","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","isFinite","clamp","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","maxRow","maxEl","r","absValue","j","coef","k","m","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","pow","round","ceil","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cache","cacheSize","s","fromStringInternal_","asArray","g","exec","hasAlpha","parseInt","substr","startsWith","normalize","split","map","Number","isStringColor","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","getKey","setSize","maxCacheSize","shared","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","BaseLayer","background_","background","properties","LayerProperty","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","RenderEventType","layerStatesArray","layerState","some","arrayLayerState","createRenderer","hasRenderer","inView","viewState","zoom","padNumber","number","precision","numberString","decimal","compareVersions","v1","v2","s1","s2","n1","n2","add","delta","closestOnCircle","circle","getRadius","sqrt","closestOnSegment","segment","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","deg","sec","hdms","charAt","format","template","replace","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","worldsAway","getWorldsAway","sourceExtentWidth","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","iconImageCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","context","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","clearRect","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","offsetX","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","label","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","GroupEvent","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","IDLE","LOADING","LOADED","EMPTY","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","log","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","unitByCode","fromCode","METERS_PER_UNIT","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","transforms","destination","sourceCode","destinationCode","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getType","coords","jj","getCoordinates","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","addProjections","projections","projectionLike","getProj","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","clearProj","clearTransformFuncs","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","toLonLat","lonLat","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","transformWithProjections","userProjection","setUserProjection","clearUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","console","warn","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","coord","transformed","sourceExtent","addCommon","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","resolutions","cappedMaxRes","capped","z","createSnapToPower","power","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","createSnapToN","theta","createSnapToZero","easeIn","easeOut","inAndOut","linear","upAndDown","transform2D","anchor","anchorX","anchorY","tmpTransform","createTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","NaN","intersectsCoordinate","computeExtent","simplify","intersectsExtent","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry","layout","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","multiArrayMaxSquaredDelta","endss","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","simplifyLineString","highQuality","simplifiedFlatCoordinates","radialDistance","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","quantizeArray","quantizeMultiArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","linearRingss","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","inflateEnds","prevEndIndex","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","circular","sphereRadius","sphereOffset","fromExtent","fromCircle","sides","arrayLength","makeRegular","startAngle","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","addCoordinate","currentResolution","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","centerNone","smoothResolutionConstraint","projExtent","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","rotationNone","coordinatesEqual","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","rotateOptions","attribution","attributionOptions","ACTIVE","Interaction","setActive","getActive","InteractionProperty","mapBrowserEvent","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","targetElement","getTargetElement","activeElement","focusWithTabindex","hasAttribute","always","click","mouseActionButton","never","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","update","scaleCoordinate","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","top","getOverlayContainer","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getBoundingClientRect","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","num","hasArea","toSize","removeLayerMapProperty","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","interpolate","viewResolver","viewRejector","viewPromise_","getInterpolate","refresh","setAttributions","setState","attributionLike","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","ImageState","renderIfReadyAndVisible","loadImage","image","imageState","pixelContext","createPixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","Tile","interimTile","transition_","transition","transitionStarts_","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","ImageBase","getImage","getPixelRatio","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","listenImage","setImage","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ctx","fillStyle","fillRect","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","u2","closePath","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","strokeStyle","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","layerExtent","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","toTransformString","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","getCacheKeyForTileKey","substring","lastIndexOf","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","tmpTileCoord","DECIMALS","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","nullTileUrlFunction","expandUrl","url","urls","startCharCode","stopCharCode","fromCharCode","stop","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","jsonp","errback","callbackParam","script","cleanup","async","timer","head","ResponseError","response","status","ClientError","client","getJSON","XMLHttpRequest","JSON","parse","responseText","open","setRequestHeader","send","resolveUrl","base","URL","href","originalXHR","overrideXHR","xhr","restoreXHR","quadKey","digits","mask","TOS_ATTRIBUTION","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","requestJSONP","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","epsg4326Extent","XYZ","CartoDB","account_","account","mapId_","config_","config","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","handleInitResponse_","handleInitError_","tilesUrl","cdn_url","https","layergroupid","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","styles","RBush","maxEntries","rbush_","RBush_","items_","insert","extents","items","getAll","getInExtent","search","forEach_","forEachInExtent","toJSON","concat","rbush","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","withCredentials","loadFeaturesXhr","success","failure","responseType","onload","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","dataProjection","addFeatures","setWithCredentials","xhrWithCredentials","VectorSourceEvent","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","Cluster","interpolationRatio","geometryFunction","createCustomCluster_","createCluster","boundRefresh_","updateDistance","setDistance","setMinDistance","getMinDistance","cluster","mapDistance","clustered","neighbors","neighbor","searchCenter","DataTile","data_","error_","size_","getError","DataTileSource","bandCount","setTileSizes","sourceLoader","fieldTagNames","fieldTags","fieldTagTypes","arrayFields","BitsPerSample","ExtraSamples","SampleFormat","StripByteCounts","StripOffsets","StripRowCounts","TileByteCounts","TileOffsets","SubIFDs","fieldTypeNames","fieldTypes","photometricInterpretations","WhiteIsZero","BlackIsZero","RGB","Palette","TransparencyMask","CMYK","YCbCr","CIELab","ICCLab","ExtraSamplesValues","Unspecified","Assocalpha","Unassalpha","LercParameters","Version","AddCompression","LercAddCompression","None","Deflate","geoKeyNames","geoKeys","fromWhiteIsZero","raster","rgbRaster","Uint8Array","fromBlackIsZero","fromPalette","colorMap","greenOffset","blueOffset","mapIndex","fromCMYK","cmykRaster","fromYCbCr","yCbCrRaster","Uint8ClampedArray","cb","cr","Xn","Yn","Zn","fromCIELab","cieLabRaster","bundleURL","getBundleURLCached","getBundleURL","getBaseURL","exports","require","loadBundlesLazy","bundles","LazyPromise","loadBundles","loadBundle","bundleLoaders","registerBundleLoader","module","register","bundle","bundleLoader","resolved","executor","promise","onSuccess","onError","registry","addDecoder","cases","importFn","getDecoder","fileDirectory","Compression","default","copyNewSize","samplesPerPixel","resampleNearest","valueArrays","inWidth","inHeight","outWidth","outHeight","relX","relY","newArray","cy","cx","resampleBilinear","rawY","yl","yh","rawX","tx","xl","xh","ll","hl","lh","hh","resample","method","resampleNearestInterleaved","valueArray","samples","resampleBilinearInterleaved","resampleInterleaved","sum","arrayForType","bitsPerSample","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","needsNormalization","normalizeArray","inBuffer","planarConfiguration","tileWidth","tileHeight","DataView","samplesToTransfer","outArray","bitMask","repeat","pixelBitSkip","bitsPerLine","lineBitOffset","pixelBitOffset","bitOffset","outIndex","byteOffset","innerBitOffset","getUint8","getUint16","raw","getUint32","GeoTIFFImage","dataView","littleEndian","isTiled","PlanarConfiguration","getFileDirectory","getGeoKeys","ImageWidth","ImageLength","getSamplesPerPixel","SamplesPerPixel","getTileWidth","TileWidth","getTileHeight","TileLength","RowsPerStrip","getBlockWidth","getBlockHeight","getBytesPerPixel","bytes","getSampleByteSize","RangeError","getReaderForSample","sampleIndex","getInt8","getInt16","getInt32","getFloat16","getFloat32","getFloat64","getSampleFormat","getBitsPerSample","getArrayForSample","sample","poolOrDecoder","signal","numTilesPerRow","numTilesPerCol","byteCount","fetch","request","sampleFormat","imageWindow","interleave","resampleMethod","minXTile","maxXTile","minYTile","maxYTile","windowWidth","bytesPerPixel","srcSampleOffsets","sampleReaders","promises","yTile","xTile","si","getTileOrStrip","blockHeight","firstLine","firstCol","lastLine","lastCol","reader","ymax","xmax","pixelOffset","windowCoordinate","resampled","wnd","pool","fillValue","numPixels","fill","_readRaster","enableAlpha","pi","PhotometricInterpretation","readRasters","subOptions","ColorMap","red","green","blue","getTiePoints","ModelTiepoint","tiePoints","getGDALMetadata","metadata","GDAL_METADATA","string","findTagsByName","getAttribute","inner","getGDALNoData","GDAL_NODATA","modelTransformation","ModelTransformation","referenceImage","modelPixelScale","ModelPixelScale","refResX","refResY","refResZ","pixelIsArea","GTRasterTypeGeoKey","getBoundingBox","DataView64","arrayBuffer","_dataView","getUint64","combined","isSafeInteger","getInt64","isNegative","carrying","byte","DataSlice","sliceOffset","bigTiff","_sliceOffset","_littleEndian","_bigTiff","byteLength","covers","sliceTop","readUint8","readInt8","readUint16","readInt16","readUint32","readInt32","readFloat32","readFloat64","readUint64","readInt64","readOffset","defaultPoolSize","hardwareConcurrency","Pool","createWorker","workers","_awaitingDecoder","messageId","worker","idle","decoder","find","candidate","random","onMessage","decoded","postMessage","destroy","terminate","CRLFCRLF","itemsToObject","fromEntries","parseHeaders","line","kv","str","trim","parseContentType","rawContentType","rawParams","params","param","parseContentRange","rawContentRange","total","parseByteRanges","responseArrayBuffer","boundary","TextDecoder","startBoundary","endBoundary","innerText","endOfHeaders","headers","startOfData","fileSize","BaseSource","slices","fetchSlice","Yallist","MAX","Symbol","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","TypeError","lc","stale","maxAge","noDisposeOnSet","updateAgeOnGet","mL","allowStale","mA","lC","hit","rforEach","thisp","walker","tail","forEachStep","next","toArray","dump","isStale","v","dumpLru","has","del","Entry","expiresAt","prune","doUse","unshiftNode","diff","delete","chunk","iterable","results","lengthOfIterable","chunked","ci","endsWith","expectedEnding","oldObj","newObj","times","numTimes","toArrayRecursively","headerValue","unit","wait","milliseconds","zip","A","from","B","AbortError","captureStackTrace","CustomAggregateError","errors","AggregateError","Block","BlockGroup","blockIds","BlockedSource","blockSize","blockCache","blockRequests","blockIdsToFetch","Set","cachedBlocks","missingBlockIds","current","blockId","fetchBlocks","block","cachedBlock","allSettled","retriedBlockRequests","rejected","reason","aborted","requiredBlocks","readSliceData","groups","groupBlocks","groupRequests","groupIndex","blockRequest","blockOffset","o","sortedBlockIds","lastBlockId","blocks","blockIdLow","blockIdHigh","sliceData","ArrayBuffer","sliceView","topDelta","usedBlockLength","blockInnerOffset","rangeInnerOffset","blockView","BaseResponse","getHeader","headerName","BaseClient","credentials","FetchResponse","FetchClient","XHRResponse","getResponseHeader","XHRClient","constructRequest","entries","onabort","abort","HttpResponse","dataPromise","HttpClient","parsedUrl","urlMod","httpApi","protocol","http","resolveData","Buffer","RemoteSource","maxRanges","allowFullFile","_fileSize","fetchSlices","Range","ok","byteRanges","others","maybeWrapInBlockedSource","makeFetchSource","blockOptions","makeXHRSource","makeHttpSource","makeRemoteSource","forceXHR","clientOptions","ArrayBufferSource","makeBufferSource","FileReaderSource","file","blob","FileReader","readAsArrayBuffer","makeFileReaderSource","closeAsync","fd","fs","close","openAsync","path","flags","mode","readAsync","read","bytesRead","FileSource","openRequest","alloc","makeFileSource","tagName2Code","geoKeyName2Code","name2code","typeName2byte","numBytesInIfd","_binBE","nextZero","oincr","readUshort","buff","p","readShort","ui8","i16","readInt","i32","readUint","ui32","readASCII","readFloat","fl32","readDouble","fl64","writeUshort","writeUint","writeASCII","writeDouble","_writeIFD","bin","_offset","ifd","eoff","tag","typeName","typeNum","dlen","toff","encodeIfds","ifds","ifdo","noffs","encodeImage","prfx","convertToTids","metadataDefaults","writeGeotiff","numBands","flattenedValues","rowIndex","columnIndex","bandIndex","GeographicTypeGeoKey","GeogCitationGeoKey","GTModelTypeGeoKey","GeoAsciiParams","geoAsciiParams","GeoKeyDirectory","geoKey","KeyID","Count","TIFFTagLocation","valueOffset","encodedMetadata","DummyLogger","debug","info","timeEnd","LOGGER","setLogger","logger","getFieldTypeLength","fieldType","BYTE","ASCII","SBYTE","UNDEFINED","SHORT","SSHORT","LONG","SLONG","FLOAT","IFD","RATIONAL","SRATIONAL","DOUBLE","LONG8","SLONG8","IFD8","parseGeoKeyDirectory","rawGeoKeyDirectory","geoKeyDirectory","location","subarray","dataSlice","readMethod","fieldTypeLength","ImageFileDirectory","nextIFDByteOffset","GeoTIFFImageIndexError","GeoTIFFBase","resX","resY","firstImage","usedImage","imageCount","getImageCount","imgBBox","oX","oY","rX","rY","usedBBox","allImages","SubfileType","subfileType","NewSubfileType","newSubfileType","imgResX","imgResY","imageResX","imageResY","GeoTIFF","firstIFDOffset","ifdRequests","ghostValues","fallbackSize","entrySize","offsetSize","getSlice","numDirEntries","byteSize","entryCount","fieldTag","typeCount","fieldValues","actualOffset","parseFileDirectoryAt","requestIFD","previousIfd","hasNext","detectionString","heuristicAreaSize","metadataSize","fullString","headerData","BOM","magicNumber","MultiGeoTIFF","mainFile","overviewFiles","imageFiles","fileDirectoriesPerFile","fileDirectoriesPerFileParsing","requests","parseFileDirectoriesPerFile","visited","relativeIndex","imageFile","imageCounts","fromUrl","fromSource","fromArrayBuffer","fromFile","fromBlob","fromUrls","mainUrl","overviewUrls","writeArrayBuffer","isMask","readRGB","preference","interpretation","interpretations","geotiffGlobals","STATISTICS_MAXIMUM","STATISTICS_MINIMUM","workerPool","getWorkerPool","_","ImageHeight","ProjectedCSTypeGeoKey","getCachedProjection","unitsFromCode","ProjLinearUnitsGeoKey","GeogAngularUnitsGeoKey","getImagesForTIFF","tiff","getImagesForSource","tiffFromBlob","overviews","tiffFromUrls","tiffFromUrl","assertEqual","expected","got","rejector","getMinForDataType","getMaxForDataType","GeoTIFFSource","sourceInfo_","numSources","sourceOptions_","sourceOptions","sourceImagery_","sourceMasks_","resolutionFactors_","samplesPerPixel_","nodataValues_","metadata_","normalize_","addAlpha_","convertToRGB_","convertToRGB","configure_","commonRenderTileSizes","commonSourceTileSizes","nodataValues","sourceCount","sourceIndex","images","masks","sourceOrigin","sourceTileSizes","renderTileSizes","sourceResolutions","imageIndex","nodataValue","wantedSamples","bands","level","imageResolutions","sourceTileSize","aspectRatio","resolutionFactor","scaledSourceResolutions","sourceImagery","firstSource","outer","nodata","loadTile_","sourceInfo","pixelBounds","bandNumber","readOptions","maskIndex","composeTile_","sourceSamples","addAlpha","pixelCount","dataLength","dataIndex","pixelIndex","transparent","gain","bias","stats","sourceValue","nodataIsNaN","CustomTile","zoomifyImage_","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileIndex","localContext","ZoomifyTileClass","testTileUrl","Versions","VERSION1","VERSION2","VERSION3","IIIF_PROFILE_VALUES","supports","formats","qualities","COMPLIANCE_VERSION1","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","generateVersion1Options","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","scale_factors","tile_width","tile_height","generateVersion2Options","additionalProfile","profile","profileSupports","profileFormats","profileQualities","scaleFactors","generateVersion3Options","extraFormats","preferredFormat","preferredFormats","acc","extraFeatures","extraQualities","versionFunctions","IIIFInfo","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","identifier","version","getComplianceLevelFromProfile","complianceLevel","getTileSourceOptions","preferredOptions","imageOptions","quality","formatPercentage","percentage","toLocaleString","maximumFractionDigits","IIIF","partialOptions","baseUrl","supportsListedSizes","supportsListedTiles","isInteger","supportsArbitraryTiling","LN2","maxScaleFactor","ignoredSizesIndex","IiifTileClass","regionParam","sizeParam","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","regionWidth","regionHeight","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","ImageSourceEvent","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","idx","getImageInternal","handleImageChange","defaultImageLoadFunction","appendParams","uri","keyParams","encodeURIComponent","qs","ImageArcGISRest","params_","imageSize_","renderedRevision_","ratio_","getParams","halfWidth","halfHeight","imageResolution","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvas","handleLoad_","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","getScale","baseParams","dpi","mcsW","mcsH","devW","devH","mpp","Static","imageExtent_","imageExtent","imageSize","getImageExtent","extentWidth","extentHeight","targetWidth","targetHeight","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","v13_","updateV13_","serverType_","serverType","getFeatureInfoUrl","projectionObj","sourceProjectionObj","getLegendUrl","mpu","pixelSize","viewExtent","requestWidth","requestHeight","requestExtent","ATTRIBUTION","OSM","BaseImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imageMapWidth","imageMapHeight","imagePixelRatio","clipped","dw","dh","previousAlpha","ImageLayer","hasImageData","ImageData","newImageData","imageData","createImageData","createMinion","operation","workerHasImageData","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","arrays","pixels","lines","lib","Worker","Blob","createObjectURL","createFauxWorker","minion","terminated","Processor","threads","_imageOps","_onWorkerMessage","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","job","_resolveJob","RasterEventType","BEFOREOPERATIONS","AFTEROPERATIONS","RasterSourceEvent","RasterSource","processor_","operationType_","operationType","threads_","layers_","createLayers","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttribution","setOperation","updateFrameState_","allSourcesReady_","processSources_","imageDatas","onWorkerComplete_","putImageData","sharedContext","createLayer","layerOrSource","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","ProviderConfig","Stamen","provider","providerConfig","layerConfig","TileArcGISRest","getKeyForParams_","tileExtent","TileDebug","strokeRect","textAlign","textBaseline","strokeText","fillText","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","gridExtent","attributionExtent","TileWMS","bufferSize","preemptive","preemptive_","grid_","keys_","jsonp_","xRelative","yRelative","forDataAtCoordinate","loadInternal_","handleError_","json","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","VectorTile","features_","onLoad","setFeatures","VectorRenderTile","getSourceTiles","context_","executorGroups","declutterExecutorGroups","loadingSourceTiles","hitDetectionImageData","replayState_","sourceTiles","errorTileKeys","wantedResolution","hasContext","getReplayState","dirty","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedTileZ","defaultLoadFunction","sourceTileCache","tileGrids_","sourceTile","tileFeatures","usedSourceTiles","cacheKey","bufferExtent","sourceZ","sourceTileCoord","sourceTileState","listenChange","sourceTileKey","coordKey","empty","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","createFromCapabilitiesMatrixSet","matrixSet","matrixLimits","switchOriginXY","elt","matrixAvailable","elt_ml","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","optionsFromCapabilities","wmtsCap","tileMatrixSets","findIndex","supportedCRS","proj1","proj2","matrixSetObj","projConfig","switchXY","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","encodings","sourcesFromTileGrid","factory","sourceCache","tileGridExtent","wantedSources","MapLibreLayer","maplibreOptions","maplibreMap","maplibregl","attributionControl","interactive","trackResize","applyOpacity_","getCanvas","jumpTo","maplibreCanvas","isConnected","sameSize","resize","redraw","getContainer","decodeRowAcc","decodeRowFloatingPoint","bytesPerSample","wc","copy","applyPredictor","predictor","BaseDecoder","decodeBlock","Predictor","Z_FIXED$1","Z_BINARY","Z_TEXT","Z_UNKNOWN$1","zero$1","buf","STORED_BLOCK","STATIC_TREES","DYN_TREES","MIN_MATCH$1","MAX_MATCH$1","LENGTH_CODES$1","LITERALS$1","L_CODES$1","D_CODES$1","BL_CODES$1","HEAP_SIZE$1","MAX_BITS$1","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","DIST_CODE_LEN","static_ltree","static_dtree","_dist_code","_length_code","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","bi_flush","gen_bitlen","desc","stree","extra","bits","xbits","bl_count","heap","heap_max","opt_len","static_len","gen_codes","next_code","tr_static_init","init_block","dyn_ltree","dyn_dtree","bl_tree","sym_next","bi_windup","smaller","depth","_n2","_m2","pqdownheap","heap_len","compress_block","ltree","dtree","sym_buf","build_tree","scan_tree","curlen","prevlen","nextlen","max_count","min_count","send_tree","build_bl_tree","max_blindex","l_desc","d_desc","bl_desc","send_all_trees","lcodes","dcodes","blcodes","rank","detect_data_type","block_mask","static_init_done","_tr_init$1","_tr_stored_block$1","stored_len","_tr_align$1","_tr_flush_block$1","opt_lenb","static_lenb","strm","data_type","_tr_tally$1","sym_end","_tr_init_1","_tr_stored_block_1","_tr_flush_block_1","_tr_tally_1","_tr_align_1","trees","_tr_init","_tr_stored_block","_tr_flush_block","_tr_tally","_tr_align","adler32","adler","adler32_1","makeTable","table","crcTable","crc32","crc","crc32_1","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MEM_LEVEL","MAX_WBITS$1","DEF_MEM_LEVEL","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","GZIP_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","msg","zero","slide_hash","wsize","w_size","hash_size","HASH_ZLIB","hash_shift","hash_mask","HASH","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","window_size","ins_h","deflate_stored","flush","have","min_block","pending_buf_size","used","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","deflate_slow","max_insert","prev_match","match_available","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","lm_init","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateSetHeader","deflateInit2","windowBits","memLevel","deflateInit","deflate$2","old_flush","header","level_flags","hcrc","comment","os","beg","gzhead_extra","bstate","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflateInit_1","deflateInit2_1","deflateReset_1","deflateResetKeep_1","deflateSetHeader_1","deflate_2$1","deflateEnd_1","deflateSetDictionary_1","deflateInfo","deflate_1$2","deflate","_has","flattenChunks","common","STR_APPLY_UIA_OK","__","_utf8len","q","string2buf","TextEncoder","encode","m_pos","str_len","buf_len","buf2binstring","buf2string","utf16buf","c_len","utf8border","strings","ZStream","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","chunkSize","opt","gzip","ended","dict","_dict_set","deflate$1","deflator","deflateRaw$1","gzip$1","flush_mode","_flush_mode","onData","onEnd","Deflate_1$1","deflate_2","deflateRaw_1$1","gzip_1$1","constants$1","deflate_1$1","deflateRaw","constants","BAD$1","TYPE$1","inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","dolen","dodist","sane","MAXBITS","ENOUGH_LENS$1","ENOUGH_DISTS$1","CODES$1","LENS$1","DISTS$1","lbase","lext","dbase","dext","inflate_table","lens","lens_index","codes","table_index","work","opts","incr","sym","root","drop","huff","offs","here_bits","here_op","here_val","inftrees","CODES","LENS","DISTS","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","FLAGS","TIME","OS","EXLEN","EXTRA","NAME","COMMENT","HCRC","DICTID","DICT","TYPE","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","DONE","BAD","MEM","SYNC","ENOUGH_LENS","ENOUGH_DISTS","MAX_WBITS","DEF_WBITS","zswap32","InflateState","havedict","wbits","ncode","nlen","ndist","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","inflateInit","lenfix","distfix","virgin","fixedtables","updatewindow","inflate$2","put","last_bits","last_op","last_val","hbuf","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateReset_1","inflateReset2_1","inflateResetKeep_1","inflateInit_1","inflateInit2_1","inflate_2$1","inflateEnd_1","inflateGetHeader_1","inflateSetDictionary_1","inflateInfo","inflate_1$2","inflate","GZheader","gzheader","Inflate$1","to","inflate$1","inflator","inflateRaw$1","last_avail_out","next_out_utf8","utf8str","Inflate_1$1","inflate_2","inflateRaw_1$1","ungzip$1","inflate_1$1","Inflate","inflateRaw","ungzip","Deflate_1","deflate_1","deflateRaw_1","gzip_1","Inflate_1","inflate_1","inflateRaw_1","ungzip_1","constants_1","pako","charset","getElementsByTagName"],"mappings":"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,GAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,SAAA,GAAA,EAAA,GAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,SAAA,GAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,IAAA,GAAA,IAAA,IAAA,KAAA,GAAA,KAAA,IAAA,KAAA,IAAA,KAAA,GAAA,EAAA,EAAA,GAAA,KAAA,GAAA,OAAA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,MAAA,CAAA,KAAA,MAAA,EAAA,EAAA,IAAA,KAAA,MAAA,EAAA,EAAA,KAAA,SAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,SAAA,GAAA,EAAA,GAAA,IAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,MAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,IAAA,CAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,OAAA,GAAA,EAAA,EAAA,IAAA,IAAA,EAAA,GAAA,KAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,EAAA,SAAA,GAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,GAAA,EAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,MAAA,KAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,IAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,SAAA,GAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,IAAA,GAAA,EAAA,GAAA,GAAA,OAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,OAAA,EAAA,OAAA,EAAA,SAAA,GAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,GAAA,EAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,MAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,CAAA,MAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,OAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,MAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,OAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA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AA,EAAA,OAAA,EAAA,IAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,QAAA,GAAA,GAAA,IAAA,EAAA,OAAA,EAAA,QAAA,GAAA,MAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,MAAA,GAAA,KAAA,IAAA,SAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,GAAA,GAAA,OAAA,EAAA,SAAA,GAAA,EAAA,GAAA,IAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,GAAA,GAAA,OAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,OAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,SAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,MAAA,IAAA,GAAA,MAAA,MAAA,aAAA,EAAA,KAAA,EAAA,MAAA,EAAA,sBAAA,IAAA,EAAA,IAAA,YAAA,GAAA,SAAA,GAAA,GAAA,OAAA,KAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,EAAA,GAAA,OAAA,EAAA,MAAA,EAAA,EAAA,QAAA,GAAA,MAAA,GAAA,aAAA,GAAA,EAAA,SAAA,GAAA,MAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,KAAA,EAAA,GAAA,IAAA,IAAA,OAAA,EAAA,GAAA,eAAA,GAAA,CAAA,KAAA,CAAA,YAAA,MAAA,GAAA,IAAA,GAAA,CAAA,kBAAA,IAAA,GAAA,GAAA,cAAA,sBAAA,IAAA,GAAA,CAAA,MAAA,IAAA,GAAA,CAAA,gBAAA,IAAA,GAAA,GAAA,aAAA,kBAAA,eAAA,IAAA,GAAA,GAAA,aAAA,iBAAA,cAAA,IAAA,GAAA,GAAA,aAAA,gBAAA,iBAAA,IAAA,GAAA,GAAA,aAAA,mBAAA,mBAAA,IAAA,GAAA,GAAA,aAAA,qBAAA,0BAAA,IAAA,GAAA,GAAA,aAAA,4BAAA,qBAAA,IAAA,GAAA,GAAA,aAAA,uBAAA,yBAAA,IAAA,GAAA,GAAA,aAAA,2BAAA,sBAAA,IAAA,GAAA,GAAA,aAAA,wBAAA,sBAAA,IAAA,GAAA,GAAA,aAAA,wBAAA,wBAAA,IAAA,GAAA,GAAA,aAAA,4BAAA,OAAA,IAAA,GAAA,KAAA,GAAA,oBAAA,aAAA,aAAA,MAAA,SAAA,KAAA,IAAA,EAAA,IAAA,GAAA,GAAA,OAAA,IAAA,eAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,QAAA,KAAA,MAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,KAAA,GAAA,UAAA,GAAA,UAAA,GAAA,OAAA,KAAA,KAAA,KAAA,IAAA,GAAA,GAAA,GAAA,SAAA,KAAA,IAAA,EAAA,IAAA,GAAA,GAAA,OAAA,IAAA,eeAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAAA,EAAA,GAAA,MAAA,EAAA,GAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,IAAA,GAAA,GAAA,IAAA,eAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,KAAA,KAAA,KAAA,WAAA,IAAA,EAAA,EAAA,IAAA,GAAA,GAAA,IAAA,eAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,MAAA,WAAA,IAAA,GAAA,gBAAA,GAAA,CAAA,KAAA,CAAA,YAAA,IAAA,GAAA,CAAA,MAAA,IAAA,GAAA,CAAA,iBAAA,IAAA,GAAA,GAAA,cAAA,mBAAA,iBAAA,IAAA,GAAA,GAAA,cAAA,mBAAA,oBAAA,IAAA,GAAA,GAAA,cAAA,sBAAA,gBAAA,IAAA,GAAA,GAAA,cAAA,kBAAA,kBAAA,IAAA,GAAA,GAAA,cAAA,uBAAA,SAAA,GAAA,GAAA,MAAA,EAAA,OAAA,GAAA,EAAA,GAAA,GAAA,GAAA,GAAA,aAAA,kBAAA,EAAA,IAAA,WAAA,EAAA,aAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,MAAA,IAAA,+CAAA,EAAA,mkDAAA,GAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,EAAA,EAAA,MAAA,EAAA,OAAA,EAAA,EAAA,EAAA,OAAA,EAAA,OAAA,MAAA,IAAA,WAAA,uDAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,IAAA,EAAA,MAAA,IAAA,MAAA,sDAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,MAAA,IAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,MAAA,GAAA,YAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,GAAA,OAAA,GAAA,GAAA,KAAA,EAAA,GAAA,QAAA,OAAA,IAAA,GAAA,CAAA,MAAA,KAAA,MAAA,OAAA,KAAA,QAAA,IAAA,WAAA,KAAA,OAAA,YAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,YAAA,EAAA,GAAA,GAAA,KAAA,EAAA,EAAA,GAAA,OAAA,GAAA,GAAA,KAAA,EAAA,GAAA,QAAA,EAAA,GAAA,EAAA,KAAA,KAAA,IAAA,GAAA,KAAA,KAAA,aAAA,kBAAA,IAAA,WAAA,EAAA,QAAA,EAAA,QAAA,OAAA,IAAA,GAAA,CAAA,MAAA,KAAA,MAAA,OAAA,KAAA,QAAA,IAAA,WAAA,KAAA,OAAA,YAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,SAAA,GAAA,GAAA,MAAA,EAAA,GAAA,EAAA,EAAA,YAAA,IAAA,EAAA,EAAA,MAAA,EAAA,MAAA,OAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,CAAA,MAAA,EAAA,OAAA,IAAA,GAAA,KAAA,IAAA,GAAA,KAAA,IAAA,GAAA,EAAA,MAAA,IAAA,qCAAA,KAAA,MAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EAAA,EAAA,eaAAA,IAAA,GAAA,YAAA,IAAA,IAAA,GAAA,CAAA,MAAA,IAAA,GAAA,CAAA,mCAAA,IAAA,GAAA,GAAA,gBAAA,qCAAA,gCAAA,IAAA,GAAA,GAAA,gBAAA,kCAAA,yBAAA,IAAA,GAAA,GAAA,gBAAA,2BAAA,yBAAA,IAAA,GAAA,GAAA,gBAAA,2BAAA,4BAAA,IAAA,GAAA,GAAA,gBAAA,8BAAA,yBAAA,IAAA,GAAA,GAAA,gaAAA,EAAA,YAAA,EAAA,YAAA,EAAA,WAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,KAAA,EAAA,aAAA,EAAA,YAAA,EAAA,YAAA,EAAA,WAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,KAAA,EAAA,SAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,WAAA,IAAA,GAAA,OAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,SAAA,GAAA,EAAA,GAAA,OAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,CAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,WAAA,IAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,GAAA,EAAA,IAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAAA,GAAA,GAAA,EAAA,EAAA,WAAA,IAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,KAAA,KAAA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,SAAA,GAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,OAAA,IAAA,GAAA,IAAA,KAAA,IAAA,IAAA,GAAA,EAAA,EAAA,OAAA,IAAA,IAAA,GAAA,EAAA,EAAA,OAAA,IAAA,IAAA,GAAA,EAAA,EAAA,OAAA,IAAA,IAAA,GAAA,EAAA,EAAA,IAAA,SAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAAA,SAAA,GAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,SAAA,GAAA,EAAA,GAAA,OAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAAA,GAAA,GAAA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,EAAA,GAAA,IAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,OAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,KAAA,KAAA,EAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,MAAA,EAAA,OAAA,SAAA,GAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,EAAA,EAAA,KAAA,MAAA,KAAA,KAAA,MAAA,KAAA,KAAA,SAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,KAAA,KAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,KAAA,MAAA,EAAA,EAAA,EAAA,EAAA,IAAA,KAAA,IAAA,EAAA,KAAA,MAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,CAAA,IAAA,GAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,IAAA,KAAA,EAAA,EAAA,GAAA,GAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,IAAA,SAAA,GAAA,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AAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,IAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,MAAA,CAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,OAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,EAAA,IAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,KAAA,IAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,IAAA,GAAA,MAAA,IAAA,IAAA,EAAA,GAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,MAAA,K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AAA,OAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,OAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,KAAA,IAAA,KAAA,KAAA,IAAA,EAAA,IAAA,GAAA,KAAA,IAAA,EAAA,KAAA,IAAA,GAAA,K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,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,QAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,IAAA,GAAA,EAAA,KAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,MAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA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A,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,KAAA,IAAA,GAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,KAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,IAAA,SAAA,GAAA,GAAA,OAAA,EAAA,IAAA,GAAA,SAAA,GAAA,GAAA,IAAA,EAAA,KAAA,IAAA,EAAA,KAAA,GAAA,KAAA,EAAA,GAAA,IAAA,KAAA,KAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,OAAA,KAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,QAAA,KAAA,EAAA,GAAA,GAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,UAAA,GAAA,eAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,eAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,kBAAA,GAAA,oBAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,QAAA,GAAA,YAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,QAAA,GAAA,iBAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,QAAA,EAAA,KAAA,GAAA,GAAA,EAAA,OAAA,CAAA,GAAA,EAAA,aAAA,eAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,SAAA,eAAA,GAAA,oBAAA,IAAA,IAAA,EAAA,QAAA,EAAA,aAAA,EAAA,EAAA,IAAA,EAAA,mBAAA,UAAA,GAAA,eAAA,IAAA,EAAA,IAAA,EAAA,OAAA,QAAA,cAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,SAAA,OAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,MAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,KAAA,KAAA,IAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,MAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,IAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,GAAA,IAAA,IAAA,GAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,IAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,GAAA,GAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,QAAA,EAAA,KAAA,GAAA,SAAA,GAAA,GAAA,IAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAA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","file":"demo.8824df86.js","sourceRoot":"../examples","sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.1.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    requestJSONP(\n      url,\n      this.handleImageryMetadataResponse.bind(this),\n      undefined,\n      'jsonp'\n    );\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(\n                tileCoord[0],\n                tileCoord[1],\n                tileCoord[2],\n                quadKeyTileCoord\n              );\n              let url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions(\n        function (frameState) {\n          const attributions = [];\n          const viewState = frameState.viewState;\n          const tileGrid = this.getTileGrid();\n          const z = tileGrid.getZForResolution(\n            viewState.resolution,\n            this.zDirection\n          );\n          const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n            viewState.center,\n            z\n          );\n          const zoom = tileCoord[0];\n          resource.imageryProviders.map(function (imageryProvider) {\n            let intersecting = false;\n            const coverageAreas = imageryProvider.coverageAreas;\n            for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n              const coverageArea = coverageAreas[i];\n              if (\n                zoom >= coverageArea.zoomMin &&\n                zoom <= coverageArea.zoomMax\n              ) {\n                const bbox = coverageArea.bbox;\n                const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                const extent = applyTransform(epsg4326Extent, transform);\n                if (intersects(extent, frameState.extent)) {\n                  intersecting = true;\n                  break;\n                }\n              }\n            }\n            if (intersecting) {\n              attributions.push(imageryProvider.attribution);\n            }\n          });\n\n          attributions.push(TOS_ATTRIBUTION);\n          return attributions;\n        }.bind(this)\n      );\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/CartoDB\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * https://carto.com/developers/maps-api/guides/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See https://carto.com/developers/maps-api/guides/named-maps/\n * for more detail.\n * @property {string} [account] Username as used to access public Carto dashboard at https://{username}.carto.com/.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nclass CartoDB extends XYZ {\n  /**\n   * @param {Options} options CartoDB options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      transition: options.transition,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  getConfig() {\n    return this.config_;\n  }\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  updateConfig(config) {\n    Object.assign(this.config_, config);\n    this.initializeMap_();\n  }\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  setConfig(config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  }\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  initializeMap_() {\n    const paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener(\n      'load',\n      this.handleInitResponse_.bind(this, paramHash)\n    );\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  }\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  handleInitResponse_(paramHash, event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.setState('error');\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState('ready');\n    } else {\n      this.setState('error');\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  handleInitError_(event) {\n    this.setState('error');\n  }\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  applyTemplate_(data) {\n    const tilesUrl =\n      'https://' +\n      data.cdn_url.https +\n      '/' +\n      this.account_ +\n      '/api/v1/map/' +\n      data.layergroupid +\n      '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  }\n}\n\nexport default CartoDB;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/Cluster\n */\n\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport {add as addCoordinate, scale as scaleCoordinate} from '../coordinate.js';\nimport {assert} from '../asserts.js';\nimport {\n  buffer,\n  createEmpty,\n  createOrUpdateFromCoordinate,\n  getCenter,\n} from '../extent.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nclass Cluster extends VectorSource {\n  /**\n   * @param {Options} options Cluster options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.minDistance = options.minDistance || 0;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.interpolationRatio = 0;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction =\n      options.geometryFunction ||\n      function (feature) {\n        const geometry = /** @type {Point} */ (feature.getGeometry());\n        assert(geometry.getType() == 'Point', 10); // The default `geometryFunction` can only handle `Point` geometries\n        return geometry;\n      };\n\n    /**\n     * @type {function(Point, Array<Feature>):Feature}\n     * @private\n     */\n    this.createCustomCluster_ = options.createCluster;\n\n    /**\n     * @type {VectorSource|null}\n     * @protected\n     */\n    this.source = null;\n\n    /**\n     * @private\n     */\n    this.boundRefresh_ = this.refresh.bind(this);\n\n    this.updateDistance(this.distance, this.minDistance);\n    this.setSource(options.source || null);\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    this.features.length = 0;\n    super.clear(fast);\n  }\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  getDistance() {\n    return this.distance;\n  }\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource|null} Source.\n   * @api\n   */\n  getSource() {\n    return this.source;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.resolution = resolution;\n      this.refresh();\n    }\n  }\n\n  /**\n   * Set the distance within which features will be clusterd together.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  setDistance(distance) {\n    this.updateDistance(distance, this.minDistance);\n  }\n\n  /**\n   * Set the minimum distance between clusters. Will be capped at the\n   * configured distance.\n   * @param {number} minDistance The minimum distance in pixels.\n   * @api\n   */\n  setMinDistance(minDistance) {\n    this.updateDistance(this.distance, minDistance);\n  }\n\n  /**\n   * The configured minimum distance between clusters.\n   * @return {number} The minimum distance in pixels.\n   * @api\n   */\n  getMinDistance() {\n    return this.minDistance;\n  }\n\n  /**\n   * Replace the wrapped source.\n   * @param {VectorSource|null} source The new source for this instance.\n   * @api\n   */\n  setSource(source) {\n    if (this.source) {\n      this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.source = source;\n    if (source) {\n      source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle the source changing.\n   */\n  refresh() {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n\n  /**\n   * Update the distances and refresh the source if necessary.\n   * @param {number} distance The new distance.\n   * @param {number} minDistance The new minimum distance.\n   */\n  updateDistance(distance, minDistance) {\n    const ratio =\n      distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n    const changed =\n      distance !== this.distance || this.interpolationRatio !== ratio;\n    this.distance = distance;\n    this.minDistance = minDistance;\n    this.interpolationRatio = ratio;\n    if (changed) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  cluster() {\n    if (this.resolution === undefined || !this.source) {\n      return;\n    }\n    const extent = createEmpty();\n    const mapDistance = this.distance * this.resolution;\n    const features = this.source.getFeatures();\n\n    /** @type {Object<string, true>} */\n    const clustered = {};\n\n    for (let i = 0, ii = features.length; i < ii; i++) {\n      const feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        const geometry = this.geometryFunction(feature);\n        if (geometry) {\n          const coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          const neighbors = this.source\n            .getFeaturesInExtent(extent)\n            .filter(function (neighbor) {\n              const uid = getUid(neighbor);\n              if (uid in clustered) {\n                return false;\n              }\n              clustered[uid] = true;\n              return true;\n            });\n          this.features.push(this.createCluster(neighbors, extent));\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  createCluster(features, extent) {\n    const centroid = [0, 0];\n    for (let i = features.length - 1; i >= 0; --i) {\n      const geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n    const searchCenter = getCenter(extent);\n    const ratio = this.interpolationRatio;\n    const geometry = new Point([\n      centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n      centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n    ]);\n    if (this.createCustomCluster_) {\n      return this.createCustomCluster_(geometry, features);\n    } else {\n      return new Feature({\n        geometry,\n        features,\n      });\n    }\n  }\n}\n\nexport default Cluster;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * Data that can be used with a DataTile.  For increased browser compatibility, use\n * Uint8Array instead of Uint8ClampedArray where possible.\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} Data\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size}\n     * @private\n     */\n    this.size_ = options.size || [256, 256];\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/source/DataTile\n */\nimport DataTile from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\nimport {toPromise} from '../functions.js';\nimport {toSize} from '../size.js';\n\n/**\n * Data tile loading function.  The function is called with z, x, and y tile coordinates and\n * returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @typedef {function(number, number, number) : (import(\"../DataTile.js\").Data|Promise<import(\"../DataTile.js\").Data>)} Loader\n */\n\n/**\n * @typedef {Object} Options\n * @property {Loader} [loader] Data loader.  Called with z, x, and y tile coordinates.\n * Returns {@link import(\"../DataTile.js\").Data data} for a tile or a promise for the same.\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The pixel width and height of the source tiles.\n * This may be different than the rendered pixel size if a `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around data tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported data should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Tile projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"./Source.js\").State} [state] The source state.\n * @property {boolean} [wrapX=false] Render tiles beyond the antimeridian.\n * @property {number} [transition] Transition time when fading in new tiles (in miliseconds).\n * @property {number} [bandCount=4] Number of bands represented in the data.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * A source for typed array data tiles.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass DataTileSource extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    const projection =\n      options.projection === undefined ? 'EPSG:3857' : options.projection;\n\n    let tileGrid = options.tileGrid;\n    if (tileGrid === undefined && projection) {\n      tileGrid = createXYZ({\n        extent: extentFromProjection(projection),\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize,\n      });\n    }\n\n    super({\n      cacheSize: 0.1, // don't cache on the source\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: projection,\n      tileGrid: tileGrid,\n      opaque: options.opaque,\n      state: options.state,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {import('../size.js').Size|null}\n     */\n    this.tileSize_ = options.tileSize ? toSize(options.tileSize) : null;\n\n    /**\n     * @private\n     * @type {Array<import('../size.js').Size>|null}\n     */\n    this.tileSizes_ = null;\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n    /**\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    this.handleTileChange_ = this.handleTileChange_.bind(this);\n\n    /**\n     * @type {number}\n     */\n    this.bandCount = options.bandCount === undefined ? 4 : options.bandCount; // assume RGBA if undefined\n  }\n\n  /**\n   * Set the source tile sizes.  The length of the array is expected to match the number of\n   * levels in the tile grid.\n   * @protected\n   * @param {Array<import('../size.js').Size>} tileSizes An array of tile sizes.\n   */\n  setTileSizes(tileSizes) {\n    this.tileSizes_ = tileSizes;\n  }\n\n  /**\n   * Get the source tile size at the given zoom level.  This may be different than the rendered tile\n   * size.\n   * @protected\n   * @param {number} z Tile zoom level.\n   * @return {import('../size.js').Size} The source tile size.\n   */\n  getTileSize(z) {\n    if (this.tileSizes_) {\n      return this.tileSizes_[z];\n    }\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    const tileGrid = this.getTileGrid();\n    return tileGrid ? toSize(tileGrid.getTileSize(z)) : [256, 256];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return this.gutter_;\n  }\n\n  /**\n   * @param {Loader} loader The data loader.\n   * @protected\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!DataTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const size = this.getTileSize(z);\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    }\n\n    const sourceLoader = this.loader_;\n\n    function loader() {\n      return toPromise(function () {\n        return sourceLoader(z, x, y);\n      });\n    }\n\n    const options = Object.assign(\n      {\n        tileCoord: [z, x, y],\n        loader: loader,\n        size: size,\n      },\n      this.tileOptions\n    );\n\n    const tile = new DataTile(options);\n    tile.key = this.getKey();\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   */\n  handleTileChange_(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n}\n\nexport default DataTileSource;\n","/*! @petamoriken/float16 v3.6.6 | MIT License - https://github.com/petamoriken/float16 */\n\nconst float16 = (function (exports) {\n  'use strict';\n\n  const THIS_IS_NOT_AN_OBJECT = \"This is not an object\";\n  const THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT = \"This is not a Float16Array object\";\n  const THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY =\n    \"This constructor is not a subclass of Float16Array\";\n  const THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT =\n    \"The constructor property value is not an object\";\n  const SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT =\n    \"Species constructor didn't return TypedArray object\";\n  const DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH =\n    \"Derived constructor created TypedArray object which was too small length\";\n  const ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER =\n    \"Attempting to access detached ArrayBuffer\";\n  const CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT =\n    \"Cannot convert undefined or null to object\";\n  const CANNOT_MIX_BIGINT_AND_OTHER_TYPES =\n    \"Cannot mix BigInt and other types, use explicit conversions\";\n  const ITERATOR_PROPERTY_IS_NOT_CALLABLE = \"@@iterator property is not callable\";\n  const REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE =\n    \"Reduce of empty array with no initial value\";\n  const OFFSET_IS_OUT_OF_BOUNDS = \"Offset is out of bounds\";\n\n  function uncurryThis(target) {\n    return (thisArg, ...args) => {\n      return ReflectApply(target, thisArg, args);\n    };\n  }\n  function uncurryThisGetter(target, key) {\n    return uncurryThis(\n      ReflectGetOwnPropertyDescriptor(\n        target,\n        key\n      ).get\n    );\n  }\n  const {\n    apply: ReflectApply,\n    construct: ReflectConstruct,\n    defineProperty: ReflectDefineProperty,\n    get: ReflectGet,\n    getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor,\n    getPrototypeOf: ReflectGetPrototypeOf,\n    has: ReflectHas,\n    ownKeys: ReflectOwnKeys,\n    set: ReflectSet,\n    setPrototypeOf: ReflectSetPrototypeOf,\n  } = Reflect;\n  const NativeProxy = Proxy;\n  const {\n    MAX_SAFE_INTEGER: MAX_SAFE_INTEGER,\n    isFinite: NumberIsFinite,\n    isNaN: NumberIsNaN,\n  } = Number;\n  const {\n    iterator: SymbolIterator,\n    species: SymbolSpecies,\n    toStringTag: SymbolToStringTag,\n    for: SymbolFor,\n  } = Symbol;\n  const NativeObject = Object;\n  const {\n    create: ObjectCreate,\n    defineProperty: ObjectDefineProperty,\n    freeze: ObjectFreeze,\n    is: ObjectIs,\n  } = NativeObject;\n  const ObjectPrototype = NativeObject.prototype;\n  const ObjectPrototype__lookupGetter__ =  (ObjectPrototype).__lookupGetter__\n    ? uncurryThis( (ObjectPrototype).__lookupGetter__)\n    : (object, key) => {\n      if (object == null) {\n        throw NativeTypeError(\n          CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n        );\n      }\n      let target = NativeObject(object);\n      do {\n        const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n        if (descriptor !== undefined) {\n          if (ObjectHasOwn(descriptor, \"get\")) {\n            return descriptor.get;\n          }\n          return;\n        }\n      } while ((target = ReflectGetPrototypeOf(target)) !== null);\n    };\n  const ObjectHasOwn =  (NativeObject).hasOwn ||\n    uncurryThis(ObjectPrototype.hasOwnProperty);\n  const NativeArray = Array;\n  const ArrayIsArray = NativeArray.isArray;\n  const ArrayPrototype = NativeArray.prototype;\n  const ArrayPrototypeJoin = uncurryThis(ArrayPrototype.join);\n  const ArrayPrototypePush = uncurryThis(ArrayPrototype.push);\n  const ArrayPrototypeToLocaleString = uncurryThis(\n    ArrayPrototype.toLocaleString\n  );\n  const NativeArrayPrototypeSymbolIterator = ArrayPrototype[SymbolIterator];\n  const ArrayPrototypeSymbolIterator = uncurryThis(NativeArrayPrototypeSymbolIterator);\n  const MathTrunc = Math.trunc;\n  const NativeArrayBuffer = ArrayBuffer;\n  const ArrayBufferIsView = NativeArrayBuffer.isView;\n  const ArrayBufferPrototype = NativeArrayBuffer.prototype;\n  const ArrayBufferPrototypeSlice = uncurryThis(ArrayBufferPrototype.slice);\n  const ArrayBufferPrototypeGetByteLength = uncurryThisGetter(ArrayBufferPrototype, \"byteLength\");\n  const NativeSharedArrayBuffer = typeof SharedArrayBuffer !== \"undefined\" ? SharedArrayBuffer : null;\n  const SharedArrayBufferPrototypeGetByteLength = NativeSharedArrayBuffer\n    && uncurryThisGetter(NativeSharedArrayBuffer.prototype, \"byteLength\");\n  const TypedArray = ReflectGetPrototypeOf(Uint8Array);\n  const TypedArrayFrom = TypedArray.from;\n  const TypedArrayPrototype = TypedArray.prototype;\n  const NativeTypedArrayPrototypeSymbolIterator = TypedArrayPrototype[SymbolIterator];\n  const TypedArrayPrototypeKeys = uncurryThis(TypedArrayPrototype.keys);\n  const TypedArrayPrototypeValues = uncurryThis(\n    TypedArrayPrototype.values\n  );\n  const TypedArrayPrototypeEntries = uncurryThis(\n    TypedArrayPrototype.entries\n  );\n  const TypedArrayPrototypeSet = uncurryThis(TypedArrayPrototype.set);\n  const TypedArrayPrototypeReverse = uncurryThis(\n    TypedArrayPrototype.reverse\n  );\n  const TypedArrayPrototypeFill = uncurryThis(TypedArrayPrototype.fill);\n  const TypedArrayPrototypeCopyWithin = uncurryThis(\n    TypedArrayPrototype.copyWithin\n  );\n  const TypedArrayPrototypeSort = uncurryThis(TypedArrayPrototype.sort);\n  const TypedArrayPrototypeSlice = uncurryThis(TypedArrayPrototype.slice);\n  const TypedArrayPrototypeSubarray = uncurryThis(\n    TypedArrayPrototype.subarray\n  );\n  const TypedArrayPrototypeGetBuffer = uncurryThisGetter(\n    TypedArrayPrototype,\n    \"buffer\"\n  );\n  const TypedArrayPrototypeGetByteOffset = uncurryThisGetter(\n    TypedArrayPrototype,\n    \"byteOffset\"\n  );\n  const TypedArrayPrototypeGetLength = uncurryThisGetter(\n    TypedArrayPrototype,\n    \"length\"\n  );\n  const TypedArrayPrototypeGetSymbolToStringTag = uncurryThisGetter(\n    TypedArrayPrototype,\n    SymbolToStringTag\n  );\n  const NativeUint16Array = Uint16Array;\n  const Uint16ArrayFrom = (...args) => {\n    return ReflectApply(TypedArrayFrom, NativeUint16Array, args);\n  };\n  const NativeUint32Array = Uint32Array;\n  const NativeFloat32Array = Float32Array;\n  const ArrayIteratorPrototype = ReflectGetPrototypeOf([][SymbolIterator]());\n  const ArrayIteratorPrototypeNext = uncurryThis(ArrayIteratorPrototype.next);\n  const GeneratorPrototypeNext = uncurryThis((function* () {})().next);\n  const IteratorPrototype = ReflectGetPrototypeOf(ArrayIteratorPrototype);\n  const DataViewPrototype = DataView.prototype;\n  const DataViewPrototypeGetUint16 = uncurryThis(\n    DataViewPrototype.getUint16\n  );\n  const DataViewPrototypeSetUint16 = uncurryThis(\n    DataViewPrototype.setUint16\n  );\n  const NativeTypeError = TypeError;\n  const NativeRangeError = RangeError;\n  const NativeWeakSet = WeakSet;\n  const WeakSetPrototype = NativeWeakSet.prototype;\n  const WeakSetPrototypeAdd = uncurryThis(WeakSetPrototype.add);\n  const WeakSetPrototypeHas = uncurryThis(WeakSetPrototype.has);\n  const NativeWeakMap = WeakMap;\n  const WeakMapPrototype = NativeWeakMap.prototype;\n  const WeakMapPrototypeGet = uncurryThis(WeakMapPrototype.get);\n  const WeakMapPrototypeHas = uncurryThis(WeakMapPrototype.has);\n  const WeakMapPrototypeSet = uncurryThis(WeakMapPrototype.set);\n\n  const arrayIterators = new NativeWeakMap();\n  const SafeIteratorPrototype = ObjectCreate(null, {\n    next: {\n      value: function next() {\n        const arrayIterator = WeakMapPrototypeGet(arrayIterators, this);\n        return ArrayIteratorPrototypeNext(arrayIterator);\n      },\n    },\n    [SymbolIterator]: {\n      value: function values() {\n        return this;\n      },\n    },\n  });\n  function safeIfNeeded(array) {\n    if (array[SymbolIterator] === NativeArrayPrototypeSymbolIterator) {\n      return array;\n    }\n    const safe = ObjectCreate(SafeIteratorPrototype);\n    WeakMapPrototypeSet(arrayIterators, safe, ArrayPrototypeSymbolIterator(array));\n    return safe;\n  }\n  const generators = new NativeWeakMap();\n  const DummyArrayIteratorPrototype = ObjectCreate(IteratorPrototype, {\n    next: {\n      value: function next() {\n        const generator = WeakMapPrototypeGet(generators, this);\n        return GeneratorPrototypeNext(generator);\n      },\n      writable: true,\n      configurable: true,\n    },\n  });\n  for (const key of ReflectOwnKeys(ArrayIteratorPrototype)) {\n    if (key === \"next\") {\n      continue;\n    }\n    ObjectDefineProperty(DummyArrayIteratorPrototype, key, ReflectGetOwnPropertyDescriptor(ArrayIteratorPrototype, key));\n  }\n  function wrap(generator) {\n    const dummy = ObjectCreate(DummyArrayIteratorPrototype);\n    WeakMapPrototypeSet(generators, dummy, generator);\n    return dummy;\n  }\n\n  function isObject(value) {\n    return (value !== null && typeof value === \"object\") ||\n      typeof value === \"function\";\n  }\n  function isObjectLike(value) {\n    return value !== null && typeof value === \"object\";\n  }\n  function isNativeTypedArray(value) {\n    return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n  }\n  function isNativeBigIntTypedArray(value) {\n    const typedArrayName = TypedArrayPrototypeGetSymbolToStringTag(value);\n    return typedArrayName === \"BigInt64Array\" ||\n      typedArrayName === \"BigUint64Array\";\n  }\n  function isArrayBuffer(value) {\n    try {\n      ArrayBufferPrototypeGetByteLength( (value));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  function isSharedArrayBuffer(value) {\n    if (NativeSharedArrayBuffer === null) {\n      return false;\n    }\n    try {\n      SharedArrayBufferPrototypeGetByteLength( (value));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  function isOrdinaryArray(value) {\n    if (!ArrayIsArray(value)) {\n      return false;\n    }\n    if (value[SymbolIterator] === NativeArrayPrototypeSymbolIterator) {\n      return true;\n    }\n    const iterator = value[SymbolIterator]();\n    return iterator[SymbolToStringTag] === \"Array Iterator\";\n  }\n  function isOrdinaryNativeTypedArray(value) {\n    if (!isNativeTypedArray(value)) {\n      return false;\n    }\n    if (value[SymbolIterator] === NativeTypedArrayPrototypeSymbolIterator) {\n      return true;\n    }\n    const iterator = value[SymbolIterator]();\n    return iterator[SymbolToStringTag] === \"Array Iterator\";\n  }\n  function isCanonicalIntegerIndexString(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    const number = +value;\n    if (value !== number + \"\") {\n      return false;\n    }\n    if (!NumberIsFinite(number)) {\n      return false;\n    }\n    return number === MathTrunc(number);\n  }\n\n  const brand = SymbolFor(\"__Float16Array__\");\n  function hasFloat16ArrayBrand(target) {\n    if (!isObjectLike(target)) {\n      return false;\n    }\n    const prototype = ReflectGetPrototypeOf(target);\n    if (!isObjectLike(prototype)) {\n      return false;\n    }\n    const constructor = prototype.constructor;\n    if (constructor === undefined) {\n      return false;\n    }\n    if (!isObject(constructor)) {\n      throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n    }\n    return ReflectHas(constructor, brand);\n  }\n\n  const buffer = new NativeArrayBuffer(4);\n  const floatView = new NativeFloat32Array(buffer);\n  const uint32View = new NativeUint32Array(buffer);\n  const baseTable = new NativeUint32Array(512);\n  const shiftTable = new NativeUint32Array(512);\n  for (let i = 0; i < 256; ++i) {\n    const e = i - 127;\n    if (e < -27) {\n      baseTable[i]         = 0x0000;\n      baseTable[i | 0x100] = 0x8000;\n      shiftTable[i]         = 24;\n      shiftTable[i | 0x100] = 24;\n    } else if (e < -14) {\n      baseTable[i]         =  0x0400 >> (-e - 14);\n      baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n      shiftTable[i]         = -e - 1;\n      shiftTable[i | 0x100] = -e - 1;\n    } else if (e <= 15) {\n      baseTable[i]         =  (e + 15) << 10;\n      baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n      shiftTable[i]         = 13;\n      shiftTable[i | 0x100] = 13;\n    } else if (e < 128) {\n      baseTable[i]         = 0x7c00;\n      baseTable[i | 0x100] = 0xfc00;\n      shiftTable[i]         = 24;\n      shiftTable[i | 0x100] = 24;\n    } else {\n      baseTable[i]         = 0x7c00;\n      baseTable[i | 0x100] = 0xfc00;\n      shiftTable[i]         = 13;\n      shiftTable[i | 0x100] = 13;\n    }\n  }\n  function roundToFloat16Bits(num) {\n    floatView[0] =  (num);\n    const f = uint32View[0];\n    const e = (f >> 23) & 0x1ff;\n    return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n  }\n  const mantissaTable = new NativeUint32Array(2048);\n  const exponentTable = new NativeUint32Array(64);\n  const offsetTable = new NativeUint32Array(64);\n  for (let i = 1; i < 1024; ++i) {\n    let m = i << 13;\n    let e = 0;\n    while((m & 0x00800000) === 0) {\n      m <<= 1;\n      e -= 0x00800000;\n    }\n    m &= ~0x00800000;\n    e += 0x38800000;\n    mantissaTable[i] = m | e;\n  }\n  for (let i = 1024; i < 2048; ++i) {\n    mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n  }\n  for (let i = 1; i < 31; ++i) {\n    exponentTable[i] = i << 23;\n  }\n  exponentTable[31] = 0x47800000;\n  exponentTable[32] = 0x80000000;\n  for (let i = 33; i < 63; ++i) {\n    exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n  }\n  exponentTable[63] = 0xc7800000;\n  for (let i = 1; i < 64; ++i) {\n    if (i !== 32) {\n      offsetTable[i] = 1024;\n    }\n  }\n  function convertToNumber(float16bits) {\n    const m = float16bits >> 10;\n    uint32View[0] = mantissaTable[offsetTable[m] + (float16bits & 0x3ff)] + exponentTable[m];\n    return floatView[0];\n  }\n\n  function ToIntegerOrInfinity(target) {\n    const number = +target;\n    if (NumberIsNaN(number) || number === 0) {\n      return 0;\n    }\n    return MathTrunc(number);\n  }\n  function ToLength(target) {\n    const length = ToIntegerOrInfinity(target);\n    if (length < 0) {\n      return 0;\n    }\n    return length < MAX_SAFE_INTEGER\n      ? length\n      : MAX_SAFE_INTEGER;\n  }\n  function SpeciesConstructor(target, defaultConstructor) {\n    if (!isObject(target)) {\n      throw NativeTypeError(THIS_IS_NOT_AN_OBJECT);\n    }\n    const constructor = target.constructor;\n    if (constructor === undefined) {\n      return defaultConstructor;\n    }\n    if (!isObject(constructor)) {\n      throw NativeTypeError(THE_CONSTRUCTOR_PROPERTY_VALUE_IS_NOT_AN_OBJECT);\n    }\n    const species = constructor[SymbolSpecies];\n    if (species == null) {\n      return defaultConstructor;\n    }\n    return species;\n  }\n  function IsDetachedBuffer(buffer) {\n    if (isSharedArrayBuffer(buffer)) {\n      return false;\n    }\n    try {\n      ArrayBufferPrototypeSlice(buffer, 0, 0);\n      return false;\n    } catch (e) {}\n    return true;\n  }\n  function defaultCompare(x, y) {\n    const isXNaN = NumberIsNaN(x);\n    const isYNaN = NumberIsNaN(y);\n    if (isXNaN && isYNaN) {\n      return 0;\n    }\n    if (isXNaN) {\n      return 1;\n    }\n    if (isYNaN) {\n      return -1;\n    }\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    if (x === 0 && y === 0) {\n      const isXPlusZero = ObjectIs(x, 0);\n      const isYPlusZero = ObjectIs(y, 0);\n      if (!isXPlusZero && isYPlusZero) {\n        return -1;\n      }\n      if (isXPlusZero && !isYPlusZero) {\n        return 1;\n      }\n    }\n    return 0;\n  }\n\n  const BYTES_PER_ELEMENT = 2;\n  const float16bitsArrays = new NativeWeakMap();\n  function isFloat16Array(target) {\n    return WeakMapPrototypeHas(float16bitsArrays, target) ||\n      (!ArrayBufferIsView(target) && hasFloat16ArrayBrand(target));\n  }\n  function assertFloat16Array(target) {\n    if (!isFloat16Array(target)) {\n      throw NativeTypeError(THIS_IS_NOT_A_FLOAT16ARRAY_OBJECT);\n    }\n  }\n  function assertSpeciesTypedArray(target, count) {\n    const isTargetFloat16Array = isFloat16Array(target);\n    const isTargetTypedArray = isNativeTypedArray(target);\n    if (!isTargetFloat16Array && !isTargetTypedArray) {\n      throw NativeTypeError(SPECIES_CONSTRUCTOR_DIDNT_RETURN_TYPEDARRAY_OBJECT);\n    }\n    if (typeof count === \"number\") {\n      let length;\n      if (isTargetFloat16Array) {\n        const float16bitsArray = getFloat16BitsArray(target);\n        length = TypedArrayPrototypeGetLength(float16bitsArray);\n      } else {\n        length = TypedArrayPrototypeGetLength(target);\n      }\n      if (length < count) {\n        throw NativeTypeError(\n          DERIVED_CONSTRUCTOR_CREATED_TYPEDARRAY_OBJECT_WHICH_WAS_TOO_SMALL_LENGTH\n        );\n      }\n    }\n    if (isNativeBigIntTypedArray(target)) {\n      throw NativeTypeError(CANNOT_MIX_BIGINT_AND_OTHER_TYPES);\n    }\n  }\n  function getFloat16BitsArray(float16) {\n    const float16bitsArray = WeakMapPrototypeGet(float16bitsArrays, float16);\n    if (float16bitsArray !== undefined) {\n      const buffer = TypedArrayPrototypeGetBuffer(float16bitsArray);\n      if (IsDetachedBuffer(buffer)) {\n        throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n      }\n      return float16bitsArray;\n    }\n    const buffer =  (float16).buffer;\n    if (IsDetachedBuffer(buffer)) {\n      throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n    }\n    const cloned = ReflectConstruct(Float16Array, [\n      buffer,\n       (float16).byteOffset,\n       (float16).length,\n    ], float16.constructor);\n    return WeakMapPrototypeGet(float16bitsArrays, cloned);\n  }\n  function copyToArray(float16bitsArray) {\n    const length = TypedArrayPrototypeGetLength(float16bitsArray);\n    const array = [];\n    for (let i = 0; i < length; ++i) {\n      array[i] = convertToNumber(float16bitsArray[i]);\n    }\n    return array;\n  }\n  const TypedArrayPrototypeGetters = new NativeWeakSet();\n  for (const key of ReflectOwnKeys(TypedArrayPrototype)) {\n    if (key === SymbolToStringTag) {\n      continue;\n    }\n    const descriptor = ReflectGetOwnPropertyDescriptor(TypedArrayPrototype, key);\n    if (ObjectHasOwn(descriptor, \"get\") && typeof descriptor.get === \"function\") {\n      WeakSetPrototypeAdd(TypedArrayPrototypeGetters, descriptor.get);\n    }\n  }\n  const handler = ObjectFreeze( ({\n    get(target, key, receiver) {\n      if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n        return convertToNumber(ReflectGet(target, key));\n      }\n      if (WeakSetPrototypeHas(TypedArrayPrototypeGetters, ObjectPrototype__lookupGetter__(target, key))) {\n        return ReflectGet(target, key);\n      }\n      return ReflectGet(target, key, receiver);\n    },\n    set(target, key, value, receiver) {\n      if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n        return ReflectSet(target, key, roundToFloat16Bits(value));\n      }\n      return ReflectSet(target, key, value, receiver);\n    },\n    getOwnPropertyDescriptor(target, key) {\n      if (isCanonicalIntegerIndexString(key) && ObjectHasOwn(target, key)) {\n        const descriptor = ReflectGetOwnPropertyDescriptor(target, key);\n        descriptor.value = convertToNumber(descriptor.value);\n        return descriptor;\n      }\n      return ReflectGetOwnPropertyDescriptor(target, key);\n    },\n    defineProperty(target, key, descriptor) {\n      if (\n        isCanonicalIntegerIndexString(key) &&\n        ObjectHasOwn(target, key) &&\n        ObjectHasOwn(descriptor, \"value\")\n      ) {\n        descriptor.value = roundToFloat16Bits(descriptor.value);\n        return ReflectDefineProperty(target, key, descriptor);\n      }\n      return ReflectDefineProperty(target, key, descriptor);\n    },\n  }));\n  class Float16Array {\n    constructor(input, _byteOffset, _length) {\n      let float16bitsArray;\n      if (isFloat16Array(input)) {\n        float16bitsArray = ReflectConstruct(NativeUint16Array, [getFloat16BitsArray(input)], new.target);\n      } else if (isObject(input) && !isArrayBuffer(input)) {\n        let list;\n        let length;\n        if (isNativeTypedArray(input)) {\n          list = input;\n          length = TypedArrayPrototypeGetLength(input);\n          const buffer = TypedArrayPrototypeGetBuffer(input);\n          const BufferConstructor = !isSharedArrayBuffer(buffer)\n            ?  (SpeciesConstructor(\n              buffer,\n              NativeArrayBuffer\n            ))\n            : NativeArrayBuffer;\n          if (IsDetachedBuffer(buffer)) {\n            throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n          }\n          if (isNativeBigIntTypedArray(input)) {\n            throw NativeTypeError(CANNOT_MIX_BIGINT_AND_OTHER_TYPES);\n          }\n          const data = new BufferConstructor(\n            length * BYTES_PER_ELEMENT\n          );\n          float16bitsArray = ReflectConstruct(NativeUint16Array, [data], new.target);\n        } else {\n          const iterator = input[SymbolIterator];\n          if (iterator != null && typeof iterator !== \"function\") {\n            throw NativeTypeError(ITERATOR_PROPERTY_IS_NOT_CALLABLE);\n          }\n          if (iterator != null) {\n            if (isOrdinaryArray(input)) {\n              list = input;\n              length = input.length;\n            } else {\n              list = [...  (input)];\n              length = list.length;\n            }\n          } else {\n            list =  (input);\n            length = ToLength(list.length);\n          }\n          float16bitsArray = ReflectConstruct(NativeUint16Array, [length], new.target);\n        }\n        for (let i = 0; i < length; ++i) {\n          float16bitsArray[i] = roundToFloat16Bits(list[i]);\n        }\n      } else {\n        float16bitsArray = ReflectConstruct(NativeUint16Array, arguments, new.target);\n      }\n      const proxy =  (new NativeProxy(float16bitsArray, handler));\n      WeakMapPrototypeSet(float16bitsArrays, proxy, float16bitsArray);\n      return proxy;\n    }\n    static from(src, ...opts) {\n      const Constructor = this;\n      if (!ReflectHas(Constructor, brand)) {\n        throw NativeTypeError(\n          THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY\n        );\n      }\n      if (Constructor === Float16Array) {\n        if (isFloat16Array(src) && opts.length === 0) {\n          const float16bitsArray = getFloat16BitsArray(src);\n          const uint16 = new NativeUint16Array(\n            TypedArrayPrototypeGetBuffer(float16bitsArray),\n            TypedArrayPrototypeGetByteOffset(float16bitsArray),\n            TypedArrayPrototypeGetLength(float16bitsArray)\n          );\n          return new Float16Array(\n            TypedArrayPrototypeGetBuffer(TypedArrayPrototypeSlice(uint16))\n          );\n        }\n        if (opts.length === 0) {\n          return new Float16Array(\n            TypedArrayPrototypeGetBuffer(\n              Uint16ArrayFrom(src, roundToFloat16Bits)\n            )\n          );\n        }\n        const mapFunc = opts[0];\n        const thisArg = opts[1];\n        return new Float16Array(\n          TypedArrayPrototypeGetBuffer(\n            Uint16ArrayFrom(src, function (val, ...args) {\n              return roundToFloat16Bits(\n                ReflectApply(mapFunc, this, [val, ...safeIfNeeded(args)])\n              );\n            }, thisArg)\n          )\n        );\n      }\n      let list;\n      let length;\n      const iterator = src[SymbolIterator];\n      if (iterator != null && typeof iterator !== \"function\") {\n        throw NativeTypeError(ITERATOR_PROPERTY_IS_NOT_CALLABLE);\n      }\n      if (iterator != null) {\n        if (isOrdinaryArray(src)) {\n          list = src;\n          length = src.length;\n        } else if (isOrdinaryNativeTypedArray(src)) {\n          list = src;\n          length = TypedArrayPrototypeGetLength(src);\n        } else {\n          list = [...src];\n          length = list.length;\n        }\n      } else {\n        if (src == null) {\n          throw NativeTypeError(\n            CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n          );\n        }\n        list = NativeObject(src);\n        length = ToLength(list.length);\n      }\n      const array = new Constructor(length);\n      if (opts.length === 0) {\n        for (let i = 0; i < length; ++i) {\n          array[i] =  (list[i]);\n        }\n      } else {\n        const mapFunc = opts[0];\n        const thisArg = opts[1];\n        for (let i = 0; i < length; ++i) {\n          array[i] = ReflectApply(mapFunc, thisArg, [list[i], i]);\n        }\n      }\n      return array;\n    }\n    static of(...items) {\n      const Constructor = this;\n      if (!ReflectHas(Constructor, brand)) {\n        throw NativeTypeError(\n          THIS_CONSTRUCTOR_IS_NOT_A_SUBCLASS_OF_FLOAT16ARRAY\n        );\n      }\n      const length = items.length;\n      if (Constructor === Float16Array) {\n        const proxy = new Float16Array(length);\n        const float16bitsArray = getFloat16BitsArray(proxy);\n        for (let i = 0; i < length; ++i) {\n          float16bitsArray[i] = roundToFloat16Bits(items[i]);\n        }\n        return proxy;\n      }\n      const array = new Constructor(length);\n      for (let i = 0; i < length; ++i) {\n        array[i] = items[i];\n      }\n      return array;\n    }\n    keys() {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      return TypedArrayPrototypeKeys(float16bitsArray);\n    }\n    values() {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      return wrap((function* () {\n        for (const val of TypedArrayPrototypeValues(float16bitsArray)) {\n          yield convertToNumber(val);\n        }\n      })());\n    }\n    entries() {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      return wrap((function* () {\n        for (const [i, val] of TypedArrayPrototypeEntries(float16bitsArray)) {\n          yield  ([i, convertToNumber(val)]);\n        }\n      })());\n    }\n    at(index) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const relativeIndex = ToIntegerOrInfinity(index);\n      const k = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n      if (k < 0 || k >= length) {\n        return;\n      }\n      return convertToNumber(float16bitsArray[k]);\n    }\n    map(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const thisArg = opts[0];\n      const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n      if (Constructor === Float16Array) {\n        const proxy = new Float16Array(length);\n        const array = getFloat16BitsArray(proxy);\n        for (let i = 0; i < length; ++i) {\n          const val = convertToNumber(float16bitsArray[i]);\n          array[i] = roundToFloat16Bits(\n            ReflectApply(callback, thisArg, [val, i, this])\n          );\n        }\n        return proxy;\n      }\n      const array = new Constructor(length);\n      assertSpeciesTypedArray(array, length);\n      for (let i = 0; i < length; ++i) {\n        const val = convertToNumber(float16bitsArray[i]);\n        array[i] = ReflectApply(callback, thisArg, [val, i, this]);\n      }\n      return  (array);\n    }\n    filter(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const thisArg = opts[0];\n      const kept = [];\n      for (let i = 0; i < length; ++i) {\n        const val = convertToNumber(float16bitsArray[i]);\n        if (ReflectApply(callback, thisArg, [val, i, this])) {\n          ArrayPrototypePush(kept, val);\n        }\n      }\n      const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n      const array = new Constructor(kept);\n      assertSpeciesTypedArray(array);\n      return  (array);\n    }\n    reduce(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      if (length === 0 && opts.length === 0) {\n        throw NativeTypeError(REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE);\n      }\n      let accumulator, start;\n      if (opts.length === 0) {\n        accumulator = convertToNumber(float16bitsArray[0]);\n        start = 1;\n      } else {\n        accumulator = opts[0];\n        start = 0;\n      }\n      for (let i = start; i < length; ++i) {\n        accumulator = callback(\n          accumulator,\n          convertToNumber(float16bitsArray[i]),\n          i,\n          this\n        );\n      }\n      return accumulator;\n    }\n    reduceRight(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      if (length === 0 && opts.length === 0) {\n        throw NativeTypeError(REDUCE_OF_EMPTY_ARRAY_WITH_NO_INITIAL_VALUE);\n      }\n      let accumulator, start;\n      if (opts.length === 0) {\n        accumulator = convertToNumber(float16bitsArray[length - 1]);\n        start = length - 2;\n      } else {\n        accumulator = opts[0];\n        start = length - 1;\n      }\n      for (let i = start; i >= 0; --i) {\n        accumulator = callback(\n          accumulator,\n          convertToNumber(float16bitsArray[i]),\n          i,\n          this\n        );\n      }\n      return accumulator;\n    }\n    forEach(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const thisArg = opts[0];\n      for (let i = 0; i < length; ++i) {\n        ReflectApply(callback, thisArg, [\n          convertToNumber(float16bitsArray[i]),\n          i,\n          this,\n        ]);\n      }\n    }\n    find(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const thisArg = opts[0];\n      for (let i = 0; i < length; ++i) {\n        const value = convertToNumber(float16bitsArray[i]);\n        if (ReflectApply(callback, thisArg, [value, i, this])) {\n          return value;\n        }\n      }\n    }\n    findIndex(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const thisArg = opts[0];\n      for (let i = 0; i < length; ++i) {\n        const value = convertToNumber(float16bitsArray[i]);\n        if (ReflectApply(callback, thisArg, [value, i, this])) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    findLast(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const thisArg = opts[0];\n      for (let i = length - 1; i >= 0; --i) {\n        const value = convertToNumber(float16bitsArray[i]);\n        if (ReflectApply(callback, thisArg, [value, i, this])) {\n          return value;\n        }\n      }\n    }\n    findLastIndex(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const thisArg = opts[0];\n      for (let i = length - 1; i >= 0; --i) {\n        const value = convertToNumber(float16bitsArray[i]);\n        if (ReflectApply(callback, thisArg, [value, i, this])) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    every(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const thisArg = opts[0];\n      for (let i = 0; i < length; ++i) {\n        if (\n          !ReflectApply(callback, thisArg, [\n            convertToNumber(float16bitsArray[i]),\n            i,\n            this,\n          ])\n        ) {\n          return false;\n        }\n      }\n      return true;\n    }\n    some(callback, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const thisArg = opts[0];\n      for (let i = 0; i < length; ++i) {\n        if (\n          ReflectApply(callback, thisArg, [\n            convertToNumber(float16bitsArray[i]),\n            i,\n            this,\n          ])\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n    set(input, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const targetOffset = ToIntegerOrInfinity(opts[0]);\n      if (targetOffset < 0) {\n        throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n      }\n      if (input == null) {\n        throw NativeTypeError(\n          CANNOT_CONVERT_UNDEFINED_OR_NULL_TO_OBJECT\n        );\n      }\n      if (isNativeBigIntTypedArray(input)) {\n        throw NativeTypeError(\n          CANNOT_MIX_BIGINT_AND_OTHER_TYPES\n        );\n      }\n      if (isFloat16Array(input)) {\n        return TypedArrayPrototypeSet(\n          getFloat16BitsArray(this),\n          getFloat16BitsArray(input),\n          targetOffset\n        );\n      }\n      if (isNativeTypedArray(input)) {\n        const buffer = TypedArrayPrototypeGetBuffer(input);\n        if (IsDetachedBuffer(buffer)) {\n          throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n        }\n      }\n      const targetLength = TypedArrayPrototypeGetLength(float16bitsArray);\n      const src = NativeObject(input);\n      const srcLength = ToLength(src.length);\n      if (targetOffset === Infinity || srcLength + targetOffset > targetLength) {\n        throw NativeRangeError(OFFSET_IS_OUT_OF_BOUNDS);\n      }\n      for (let i = 0; i < srcLength; ++i) {\n        float16bitsArray[i + targetOffset] = roundToFloat16Bits(src[i]);\n      }\n    }\n    reverse() {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      TypedArrayPrototypeReverse(float16bitsArray);\n      return this;\n    }\n    fill(value, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      TypedArrayPrototypeFill(\n        float16bitsArray,\n        roundToFloat16Bits(value),\n        ...safeIfNeeded(opts)\n      );\n      return this;\n    }\n    copyWithin(target, start, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      TypedArrayPrototypeCopyWithin(float16bitsArray, target, start, ...safeIfNeeded(opts));\n      return this;\n    }\n    sort(compareFn) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const sortCompare = compareFn !== undefined ? compareFn : defaultCompare;\n      TypedArrayPrototypeSort(float16bitsArray, (x, y) => {\n        return sortCompare(convertToNumber(x), convertToNumber(y));\n      });\n      return this;\n    }\n    slice(start, end) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n      if (Constructor === Float16Array) {\n        const uint16 = new NativeUint16Array(\n          TypedArrayPrototypeGetBuffer(float16bitsArray),\n          TypedArrayPrototypeGetByteOffset(float16bitsArray),\n          TypedArrayPrototypeGetLength(float16bitsArray)\n        );\n        return new Float16Array(\n          TypedArrayPrototypeGetBuffer(\n            TypedArrayPrototypeSlice(uint16, start, end)\n          )\n        );\n      }\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      const relativeStart = ToIntegerOrInfinity(start);\n      const relativeEnd = end === undefined ? length : ToIntegerOrInfinity(end);\n      let k;\n      if (relativeStart === -Infinity) {\n        k = 0;\n      } else if (relativeStart < 0) {\n        k = length + relativeStart > 0 ? length + relativeStart : 0;\n      } else {\n        k = length < relativeStart ? length : relativeStart;\n      }\n      let final;\n      if (relativeEnd === -Infinity) {\n        final = 0;\n      } else if (relativeEnd < 0) {\n        final = length + relativeEnd > 0 ? length + relativeEnd : 0;\n      } else {\n        final = length < relativeEnd ? length : relativeEnd;\n      }\n      const count = final - k > 0 ? final - k : 0;\n      const array = new Constructor(count);\n      assertSpeciesTypedArray(array, count);\n      if (count === 0) {\n        return array;\n      }\n      const buffer = TypedArrayPrototypeGetBuffer(float16bitsArray);\n      if (IsDetachedBuffer(buffer)) {\n        throw NativeTypeError(ATTEMPTING_TO_ACCESS_DETACHED_ARRAYBUFFER);\n      }\n      let n = 0;\n      while (k < final) {\n        array[n] = convertToNumber(float16bitsArray[k]);\n        ++k;\n        ++n;\n      }\n      return  (array);\n    }\n    subarray(begin, end) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const Constructor = SpeciesConstructor(float16bitsArray, Float16Array);\n      const uint16 = new NativeUint16Array(\n        TypedArrayPrototypeGetBuffer(float16bitsArray),\n        TypedArrayPrototypeGetByteOffset(float16bitsArray),\n        TypedArrayPrototypeGetLength(float16bitsArray)\n      );\n      const uint16Subarray = TypedArrayPrototypeSubarray(uint16, begin, end);\n      const array = new Constructor(\n        TypedArrayPrototypeGetBuffer(uint16Subarray),\n        TypedArrayPrototypeGetByteOffset(uint16Subarray),\n        TypedArrayPrototypeGetLength(uint16Subarray)\n      );\n      assertSpeciesTypedArray(array);\n      return  (array);\n    }\n    indexOf(element, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      let from = ToIntegerOrInfinity(opts[0]);\n      if (from === Infinity) {\n        return -1;\n      }\n      if (from < 0) {\n        from += length;\n        if (from < 0) {\n          from = 0;\n        }\n      }\n      for (let i = from; i < length; ++i) {\n        if (\n          ObjectHasOwn(float16bitsArray, i) &&\n          convertToNumber(float16bitsArray[i]) === element\n        ) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    lastIndexOf(element, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      let from = opts.length >= 1 ? ToIntegerOrInfinity(opts[0]) : length - 1;\n      if (from === -Infinity) {\n        return -1;\n      }\n      if (from >= 0) {\n        from = from < length - 1 ? from : length - 1;\n      } else {\n        from += length;\n      }\n      for (let i = from; i >= 0; --i) {\n        if (\n          ObjectHasOwn(float16bitsArray, i) &&\n          convertToNumber(float16bitsArray[i]) === element\n        ) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    includes(element, ...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const length = TypedArrayPrototypeGetLength(float16bitsArray);\n      let from = ToIntegerOrInfinity(opts[0]);\n      if (from === Infinity) {\n        return false;\n      }\n      if (from < 0) {\n        from += length;\n        if (from < 0) {\n          from = 0;\n        }\n      }\n      const isNaN = NumberIsNaN(element);\n      for (let i = from; i < length; ++i) {\n        const value = convertToNumber(float16bitsArray[i]);\n        if (isNaN && NumberIsNaN(value)) {\n          return true;\n        }\n        if (value === element) {\n          return true;\n        }\n      }\n      return false;\n    }\n    join(separator) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const array = copyToArray(float16bitsArray);\n      return ArrayPrototypeJoin(array, separator);\n    }\n    toLocaleString(...opts) {\n      assertFloat16Array(this);\n      const float16bitsArray = getFloat16BitsArray(this);\n      const array = copyToArray(float16bitsArray);\n      return ArrayPrototypeToLocaleString(array, ...safeIfNeeded(opts));\n    }\n    get [SymbolToStringTag]() {\n      if (isFloat16Array(this)) {\n        return  (\"Float16Array\");\n      }\n    }\n  }\n  ObjectDefineProperty(Float16Array, \"BYTES_PER_ELEMENT\", {\n    value: BYTES_PER_ELEMENT,\n  });\n  ObjectDefineProperty(Float16Array, brand, {});\n  ReflectSetPrototypeOf(Float16Array, TypedArray);\n  const Float16ArrayPrototype = Float16Array.prototype;\n  ObjectDefineProperty(Float16ArrayPrototype, \"BYTES_PER_ELEMENT\", {\n    value: BYTES_PER_ELEMENT,\n  });\n  ObjectDefineProperty(Float16ArrayPrototype, SymbolIterator, {\n    value: Float16ArrayPrototype.values,\n    writable: true,\n    configurable: true,\n  });\n  ReflectSetPrototypeOf(Float16ArrayPrototype, TypedArrayPrototype);\n\n  function isTypedArray(target) {\n    return isNativeTypedArray(target) || isFloat16Array(target);\n  }\n\n  function getFloat16(dataView, byteOffset, ...opts) {\n    return convertToNumber(\n      DataViewPrototypeGetUint16(dataView, byteOffset, ...safeIfNeeded(opts))\n    );\n  }\n  function setFloat16(dataView, byteOffset, value, ...opts) {\n    return DataViewPrototypeSetUint16(\n      dataView,\n      byteOffset,\n      roundToFloat16Bits(value),\n      ...safeIfNeeded(opts)\n    );\n  }\n\n  function hfround(x) {\n    const number = +x;\n    if (!NumberIsFinite(number) || number === 0) {\n      return number;\n    }\n    const x16 = roundToFloat16Bits(number);\n    return convertToNumber(x16);\n  }\n\n  exports.Float16Array = Float16Array;\n  exports.getFloat16 = getFloat16;\n  exports.hfround = hfround;\n  exports.isFloat16Array = isFloat16Array;\n  exports.isTypedArray = isTypedArray;\n  exports.setFloat16 = setFloat16;\n\n  Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: 'Module' } });\n\n  return exports;\n\n})({});\n","function getAttribute(tag, attributeName, options) {\n  const debug = (options && options.debug) || false;\n  if (debug) console.log(\"getting \" + attributeName + \" in \" + tag);\n\n  const xml = typeof tag === \"object\" ? tag.outer : tag;\n\n  const pattern = `${attributeName}\\\\=\"\\([^\"]*\\)\"`;\n  if (debug) console.log(\"pattern:\", pattern);\n\n  const re = new RegExp(pattern);\n  const match = re.exec(xml);\n  if (debug) console.log(\"match:\", match);\n  if (match) return match[1];\n}\n\nmodule.exports = getAttribute;\nmodule.exports.default = getAttribute;\n","function indexOfMatch(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index;\n  else return -1;\n}\n\nmodule.exports = indexOfMatch;\nmodule.exports.default = indexOfMatch;\n","function indexOfMatchEnd(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index + match[0].length - 1;\n  else return -1;\n}\n\nmodule.exports = indexOfMatchEnd;\nmodule.exports.default = indexOfMatchEnd;\n","function countSubstring(string, substring) {\n  const pattern = new RegExp(substring, \"g\");\n  const match = string.match(pattern);\n  return match ? match.length : 0;\n}\n\nmodule.exports = countSubstring;\nmodule.exports.default = countSubstring;\n","const indexOfMatch = require(\"./index-of-match.js\");\nconst indexOfMatchEnd = require(\"./index-of-match-end.js\");\nconst countSubstring = require(\"./count-substring.js\");\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = (options && options.debug) || false;\n  const nested = !(options && typeof options.nested === false);\n\n  const startIndex = (options && options.startIndex) || 0;\n\n  if (debug) console.log(\"[xml-utils] starting findTagByName with\", tagName, \" and \", options);\n\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\>\\/]`, startIndex);\n  if (debug) console.log(\"[xml-utils] start:\", start);\n  if (start === -1) return undefined;\n\n  const afterStart = xml.slice(start + tagName.length);\n\n  let relativeEnd = indexOfMatchEnd(afterStart, \"^[^<]*[ /]>\", 0);\n\n  const selfClosing = relativeEnd !== -1 && afterStart[relativeEnd - 1] === \"/\";\n  if (debug) console.log(\"[xml-utils] selfClosing:\", selfClosing);\n\n  if (selfClosing === false) {\n    // check if tag has subtags with the same name\n    if (nested) {\n      let startIndex = 0;\n      let openings = 1;\n      let closings = 0;\n      while ((relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", startIndex)) !== -1) {\n        const clip = afterStart.substring(startIndex, relativeEnd + 1);\n        openings += countSubstring(clip, \"<\" + tagName);\n        closings += countSubstring(clip, \"/\" + tagName + \">\");\n        // we can't have more openings than closings\n        if (closings >= openings) break;\n        startIndex = relativeEnd;\n      }\n    } else {\n      relativeEnd = indexOfMatchEnd(afterStart, \"[ /]\" + tagName + \">\", 0);\n    }\n  }\n\n  const end = start + tagName.length + relativeEnd + 1;\n  if (debug) console.log(\"[xml-utils] end:\", end);\n  if (end === -1) return undefined;\n\n  const outer = xml.slice(start, end);\n  // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  let inner;\n  if (selfClosing) {\n    inner = null;\n  } else {\n    inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n  }\n\n  return { inner, outer, start, end };\n}\n\nmodule.exports = findTagByName;\nmodule.exports.default = findTagByName;\n","const findTagByName = require(\"./find-tag-by-name.js\");\n\nfunction findTagsByName(xml, tagName, options) {\n  const tags = [];\n  const debug = (options && options.debug) || false;\n  const nested = options && typeof options.nested === \"boolean\" ? options.nested : true;\n  let startIndex = (options && options.startIndex) || 0;\n  let tag;\n  while ((tag = findTagByName(xml, tagName, { debug, startIndex }))) {\n    if (nested) {\n      startIndex = tag.start + 1 + tagName.length;\n    } else {\n      startIndex = tag.end;\n    }\n    tags.push(tag);\n  }\n  if (debug) console.log(\"findTagsByName found\", tags.length, \"tags\");\n  return tags;\n}\n\nmodule.exports = findTagsByName;\nmodule.exports.default = findTagsByName;\n","export const fieldTagNames = {\n  // TIFF Baseline\n  0x013B: 'Artist',\n  0x0102: 'BitsPerSample',\n  0x0109: 'CellLength',\n  0x0108: 'CellWidth',\n  0x0140: 'ColorMap',\n  0x0103: 'Compression',\n  0x8298: 'Copyright',\n  0x0132: 'DateTime',\n  0x0152: 'ExtraSamples',\n  0x010A: 'FillOrder',\n  0x0121: 'FreeByteCounts',\n  0x0120: 'FreeOffsets',\n  0x0123: 'GrayResponseCurve',\n  0x0122: 'GrayResponseUnit',\n  0x013C: 'HostComputer',\n  0x010E: 'ImageDescription',\n  0x0101: 'ImageLength',\n  0x0100: 'ImageWidth',\n  0x010F: 'Make',\n  0x0119: 'MaxSampleValue',\n  0x0118: 'MinSampleValue',\n  0x0110: 'Model',\n  0x00FE: 'NewSubfileType',\n  0x0112: 'Orientation',\n  0x0106: 'PhotometricInterpretation',\n  0x011C: 'PlanarConfiguration',\n  0x0128: 'ResolutionUnit',\n  0x0116: 'RowsPerStrip',\n  0x0115: 'SamplesPerPixel',\n  0x0131: 'Software',\n  0x0117: 'StripByteCounts',\n  0x0111: 'StripOffsets',\n  0x00FF: 'SubfileType',\n  0x0107: 'Threshholding',\n  0x011A: 'XResolution',\n  0x011B: 'YResolution',\n\n  // TIFF Extended\n  0x0146: 'BadFaxLines',\n  0x0147: 'CleanFaxData',\n  0x0157: 'ClipPath',\n  0x0148: 'ConsecutiveBadFaxLines',\n  0x01B1: 'Decode',\n  0x01B2: 'DefaultImageColor',\n  0x010D: 'DocumentName',\n  0x0150: 'DotRange',\n  0x0141: 'HalftoneHints',\n  0x015A: 'Indexed',\n  0x015B: 'JPEGTables',\n  0x011D: 'PageName',\n  0x0129: 'PageNumber',\n  0x013D: 'Predictor',\n  0x013F: 'PrimaryChromaticities',\n  0x0214: 'ReferenceBlackWhite',\n  0x0153: 'SampleFormat',\n  0x0154: 'SMinSampleValue',\n  0x0155: 'SMaxSampleValue',\n  0x022F: 'StripRowCounts',\n  0x014A: 'SubIFDs',\n  0x0124: 'T4Options',\n  0x0125: 'T6Options',\n  0x0145: 'TileByteCounts',\n  0x0143: 'TileLength',\n  0x0144: 'TileOffsets',\n  0x0142: 'TileWidth',\n  0x012D: 'TransferFunction',\n  0x013E: 'WhitePoint',\n  0x0158: 'XClipPathUnits',\n  0x011E: 'XPosition',\n  0x0211: 'YCbCrCoefficients',\n  0x0213: 'YCbCrPositioning',\n  0x0212: 'YCbCrSubSampling',\n  0x0159: 'YClipPathUnits',\n  0x011F: 'YPosition',\n\n  // EXIF\n  0x9202: 'ApertureValue',\n  0xA001: 'ColorSpace',\n  0x9004: 'DateTimeDigitized',\n  0x9003: 'DateTimeOriginal',\n  0x8769: 'Exif IFD',\n  0x9000: 'ExifVersion',\n  0x829A: 'ExposureTime',\n  0xA300: 'FileSource',\n  0x9209: 'Flash',\n  0xA000: 'FlashpixVersion',\n  0x829D: 'FNumber',\n  0xA420: 'ImageUniqueID',\n  0x9208: 'LightSource',\n  0x927C: 'MakerNote',\n  0x9201: 'ShutterSpeedValue',\n  0x9286: 'UserComment',\n\n  // IPTC\n  0x83BB: 'IPTC',\n\n  // ICC\n  0x8773: 'ICC Profile',\n\n  // XMP\n  0x02BC: 'XMP',\n\n  // GDAL\n  0xA480: 'GDAL_METADATA',\n  0xA481: 'GDAL_NODATA',\n\n  // Photoshop\n  0x8649: 'Photoshop',\n\n  // GeoTiff\n  0x830E: 'ModelPixelScale',\n  0x8482: 'ModelTiepoint',\n  0x85D8: 'ModelTransformation',\n  0x87AF: 'GeoKeyDirectory',\n  0x87B0: 'GeoDoubleParams',\n  0x87B1: 'GeoAsciiParams',\n\n  // LERC\n  0xC5F2: 'LercParameters',\n};\n\nexport const fieldTags = {};\nfor (const key in fieldTagNames) {\n  if (fieldTagNames.hasOwnProperty(key)) {\n    fieldTags[fieldTagNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const fieldTagTypes = {\n  256: 'SHORT',\n  257: 'SHORT',\n  258: 'SHORT',\n  259: 'SHORT',\n  262: 'SHORT',\n  273: 'LONG',\n  274: 'SHORT',\n  277: 'SHORT',\n  278: 'LONG',\n  279: 'LONG',\n  282: 'RATIONAL',\n  283: 'RATIONAL',\n  284: 'SHORT',\n  286: 'SHORT',\n  287: 'RATIONAL',\n  296: 'SHORT',\n  297: 'SHORT',\n  305: 'ASCII',\n  306: 'ASCII',\n  338: 'SHORT',\n  339: 'SHORT',\n  513: 'LONG',\n  514: 'LONG',\n  1024: 'SHORT',\n  1025: 'SHORT',\n  2048: 'SHORT',\n  2049: 'ASCII',\n  3072: 'SHORT',\n  3073: 'ASCII',\n  33550: 'DOUBLE',\n  33922: 'DOUBLE',\n  34665: 'LONG',\n  34735: 'SHORT',\n  34737: 'ASCII',\n  42113: 'ASCII',\n};\n\nexport const arrayFields = [\n  fieldTags.BitsPerSample,\n  fieldTags.ExtraSamples,\n  fieldTags.SampleFormat,\n  fieldTags.StripByteCounts,\n  fieldTags.StripOffsets,\n  fieldTags.StripRowCounts,\n  fieldTags.TileByteCounts,\n  fieldTags.TileOffsets,\n  fieldTags.SubIFDs,\n];\n\nexport const fieldTypeNames = {\n  0x0001: 'BYTE',\n  0x0002: 'ASCII',\n  0x0003: 'SHORT',\n  0x0004: 'LONG',\n  0x0005: 'RATIONAL',\n  0x0006: 'SBYTE',\n  0x0007: 'UNDEFINED',\n  0x0008: 'SSHORT',\n  0x0009: 'SLONG',\n  0x000A: 'SRATIONAL',\n  0x000B: 'FLOAT',\n  0x000C: 'DOUBLE',\n  // IFD offset, suggested by https://owl.phy.queensu.ca/~phil/exiftool/standards.html\n  0x000D: 'IFD',\n  // introduced by BigTIFF\n  0x0010: 'LONG8',\n  0x0011: 'SLONG8',\n  0x0012: 'IFD8',\n};\n\nexport const fieldTypes = {};\nfor (const key in fieldTypeNames) {\n  if (fieldTypeNames.hasOwnProperty(key)) {\n    fieldTypes[fieldTypeNames[key]] = parseInt(key, 10);\n  }\n}\n\nexport const photometricInterpretations = {\n  WhiteIsZero: 0,\n  BlackIsZero: 1,\n  RGB: 2,\n  Palette: 3,\n  TransparencyMask: 4,\n  CMYK: 5,\n  YCbCr: 6,\n\n  CIELab: 8,\n  ICCLab: 9,\n};\n\nexport const ExtraSamplesValues = {\n  Unspecified: 0,\n  Assocalpha: 1,\n  Unassalpha: 2,\n};\n\nexport const LercParameters = {\n  Version: 0,\n  AddCompression: 1,\n};\n\nexport const LercAddCompression = {\n  None: 0,\n  Deflate: 1,\n};\n\nexport const geoKeyNames = {\n  1024: 'GTModelTypeGeoKey',\n  1025: 'GTRasterTypeGeoKey',\n  1026: 'GTCitationGeoKey',\n  2048: 'GeographicTypeGeoKey',\n  2049: 'GeogCitationGeoKey',\n  2050: 'GeogGeodeticDatumGeoKey',\n  2051: 'GeogPrimeMeridianGeoKey',\n  2052: 'GeogLinearUnitsGeoKey',\n  2053: 'GeogLinearUnitSizeGeoKey',\n  2054: 'GeogAngularUnitsGeoKey',\n  2055: 'GeogAngularUnitSizeGeoKey',\n  2056: 'GeogEllipsoidGeoKey',\n  2057: 'GeogSemiMajorAxisGeoKey',\n  2058: 'GeogSemiMinorAxisGeoKey',\n  2059: 'GeogInvFlatteningGeoKey',\n  2060: 'GeogAzimuthUnitsGeoKey',\n  2061: 'GeogPrimeMeridianLongGeoKey',\n  2062: 'GeogTOWGS84GeoKey',\n  3072: 'ProjectedCSTypeGeoKey',\n  3073: 'PCSCitationGeoKey',\n  3074: 'ProjectionGeoKey',\n  3075: 'ProjCoordTransGeoKey',\n  3076: 'ProjLinearUnitsGeoKey',\n  3077: 'ProjLinearUnitSizeGeoKey',\n  3078: 'ProjStdParallel1GeoKey',\n  3079: 'ProjStdParallel2GeoKey',\n  3080: 'ProjNatOriginLongGeoKey',\n  3081: 'ProjNatOriginLatGeoKey',\n  3082: 'ProjFalseEastingGeoKey',\n  3083: 'ProjFalseNorthingGeoKey',\n  3084: 'ProjFalseOriginLongGeoKey',\n  3085: 'ProjFalseOriginLatGeoKey',\n  3086: 'ProjFalseOriginEastingGeoKey',\n  3087: 'ProjFalseOriginNorthingGeoKey',\n  3088: 'ProjCenterLongGeoKey',\n  3089: 'ProjCenterLatGeoKey',\n  3090: 'ProjCenterEastingGeoKey',\n  3091: 'ProjCenterNorthingGeoKey',\n  3092: 'ProjScaleAtNatOriginGeoKey',\n  3093: 'ProjScaleAtCenterGeoKey',\n  3094: 'ProjAzimuthAngleGeoKey',\n  3095: 'ProjStraightVertPoleLongGeoKey',\n  3096: 'ProjRectifiedGridAngleGeoKey',\n  4096: 'VerticalCSTypeGeoKey',\n  4097: 'VerticalCitationGeoKey',\n  4098: 'VerticalDatumGeoKey',\n  4099: 'VerticalUnitsGeoKey',\n};\n\nexport const geoKeys = {};\nfor (const key in geoKeyNames) {\n  if (geoKeyNames.hasOwnProperty(key)) {\n    geoKeys[geoKeyNames[key]] = parseInt(key, 10);\n  }\n}\n","export function fromWhiteIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = 256 - (raster[i] / max * 256);\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromBlackIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = raster[i] / max * 256;\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromPalette(raster, colorMap) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  const greenOffset = colorMap.length / 3;\n  const blueOffset = colorMap.length / 3 * 2;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    const mapIndex = raster[i];\n    rgbRaster[j] = colorMap[mapIndex] / 65536 * 256;\n    rgbRaster[j + 1] = colorMap[mapIndex + greenOffset] / 65536 * 256;\n    rgbRaster[j + 2] = colorMap[mapIndex + blueOffset] / 65536 * 256;\n  }\n  return rgbRaster;\n}\n\nexport function fromCMYK(cmykRaster) {\n  const { width, height } = cmykRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  for (let i = 0, j = 0; i < cmykRaster.length; i += 4, j += 3) {\n    const c = cmykRaster[i];\n    const m = cmykRaster[i + 1];\n    const y = cmykRaster[i + 2];\n    const k = cmykRaster[i + 3];\n\n    rgbRaster[j] = 255 * ((255 - c) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 1] = 255 * ((255 - m) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 2] = 255 * ((255 - y) / 256) * ((255 - k) / 256);\n  }\n  return rgbRaster;\n}\n\nexport function fromYCbCr(yCbCrRaster) {\n  const { width, height } = yCbCrRaster;\n  const rgbRaster = new Uint8ClampedArray(width * height * 3);\n  for (let i = 0, j = 0; i < yCbCrRaster.length; i += 3, j += 3) {\n    const y = yCbCrRaster[i];\n    const cb = yCbCrRaster[i + 1];\n    const cr = yCbCrRaster[i + 2];\n\n    rgbRaster[j] = (y + (1.40200 * (cr - 0x80)));\n    rgbRaster[j + 1] = (y - (0.34414 * (cb - 0x80)) - (0.71414 * (cr - 0x80)));\n    rgbRaster[j + 2] = (y + (1.77200 * (cb - 0x80)));\n  }\n  return rgbRaster;\n}\n\nconst Xn = 0.95047;\nconst Yn = 1.00000;\nconst Zn = 1.08883;\n\n// from https://github.com/antimatter15/rgb-lab/blob/master/color.js\n\nexport function fromCIELab(cieLabRaster) {\n  const { width, height } = cieLabRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n\n  for (let i = 0, j = 0; i < cieLabRaster.length; i += 3, j += 3) {\n    const L = cieLabRaster[i + 0];\n    const a_ = cieLabRaster[i + 1] << 24 >> 24; // conversion from uint8 to int8\n    const b_ = cieLabRaster[i + 2] << 24 >> 24; // same\n\n    let y = (L + 16) / 116;\n    let x = (a_ / 500) + y;\n    let z = y - (b_ / 200);\n    let r;\n    let g;\n    let b;\n\n    x = Xn * ((x * x * x > 0.008856) ? x * x * x : (x - (16 / 116)) / 7.787);\n    y = Yn * ((y * y * y > 0.008856) ? y * y * y : (y - (16 / 116)) / 7.787);\n    z = Zn * ((z * z * z > 0.008856) ? z * z * z : (z - (16 / 116)) / 7.787);\n\n    r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n    g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n    b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n    r = (r > 0.0031308) ? ((1.055 * (r ** (1 / 2.4))) - 0.055) : 12.92 * r;\n    g = (g > 0.0031308) ? ((1.055 * (g ** (1 / 2.4))) - 0.055) : 12.92 * g;\n    b = (b > 0.0031308) ? ((1.055 * (b ** (1 / 2.4))) - 0.055) : 12.92 * b;\n\n    rgbRaster[j] = Math.max(0, Math.min(1, r)) * 255;\n    rgbRaster[j + 1] = Math.max(0, Math.min(1, g)) * 255;\n    rgbRaster[j + 2] = Math.max(0, Math.min(1, b)) * 255;\n  }\n  return rgbRaster;\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","const registry = new Map();\n\nexport function addDecoder(cases, importFn) {\n  if (!Array.isArray(cases)) {\n    cases = [cases]; // eslint-disable-line no-param-reassign\n  }\n  cases.forEach((c) => registry.set(c, importFn));\n}\n\nexport async function getDecoder(fileDirectory) {\n  const importFn = registry.get(fileDirectory.Compression);\n  if (!importFn) {\n    throw new Error(`Unknown compression method identifier: ${fileDirectory.Compression}`);\n  }\n  const Decoder = await importFn();\n  return new Decoder(fileDirectory);\n}\n\n// Add default decoders to registry (end-user may override with other implementations)\naddDecoder([undefined, 1], () => import('./raw.js').then((m) => m.default));\naddDecoder(5, () => import('./lzw.js').then((m) => m.default));\naddDecoder(6, () => {\n  throw new Error('old style JPEG compression is not supported.');\n});\naddDecoder(7, () => import('./jpeg.js').then((m) => m.default));\naddDecoder([8, 32946], () => import('./deflate.js').then((m) => m.default));\naddDecoder(32773, () => import('./packbits.js').then((m) => m.default));\naddDecoder(34887, () => import('./lerc.js').then((m) => m.default));\naddDecoder(50001, () => import('./webimage.js').then((m) => m.default));\n","/**\n * @module resample\n */\n\nfunction copyNewSize(array, width, height, samplesPerPixel = 1) {\n  return new (Object.getPrototypeOf(array).constructor)(width * height * samplesPerPixel);\n}\n\n/**\n * Resample the input arrays using nearest neighbor value selection.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const cy = Math.min(Math.round(relY * y), inHeight - 1);\n      for (let x = 0; x < outWidth; ++x) {\n        const cx = Math.min(Math.round(relX * x), inWidth - 1);\n        const value = array[(cy * inWidth) + cx];\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n// simple linear interpolation, code from:\n// https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\nfunction lerp(v0, v1, t) {\n  return ((1 - t) * v0) + (t * v1);\n}\n\n/**\n * Resample the input arrays using bilinear interpolation.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const rawY = relY * y;\n\n      const yl = Math.floor(rawY);\n      const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n      for (let x = 0; x < outWidth; ++x) {\n        const rawX = relX * x;\n        const tx = rawX % 1;\n\n        const xl = Math.floor(rawX);\n        const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n        const ll = array[(yl * inWidth) + xl];\n        const hl = array[(yl * inWidth) + xh];\n        const lh = array[(yh * inWidth) + xl];\n        const hh = array[(yh * inWidth) + xh];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n/**\n * Resample the input arrays using the selected resampling method.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resample(valueArrays, inWidth, inHeight, outWidth, outHeight, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n\n/**\n * Resample the pixel interleaved input array using nearest neighbor value selection.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleNearestInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const cy = Math.min(Math.round(relY * y), inHeight - 1);\n    for (let x = 0; x < outWidth; ++x) {\n      const cx = Math.min(Math.round(relX * x), inWidth - 1);\n      for (let i = 0; i < samples; ++i) {\n        const value = valueArray[(cy * inWidth * samples) + (cx * samples) + i];\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using bilinear interpolation.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleBilinearInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const rawY = relY * y;\n\n    const yl = Math.floor(rawY);\n    const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n    for (let x = 0; x < outWidth; ++x) {\n      const rawX = relX * x;\n      const tx = rawX % 1;\n\n      const xl = Math.floor(rawX);\n      const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n      for (let i = 0; i < samples; ++i) {\n        const ll = valueArray[(yl * inWidth * samples) + (xl * samples) + i];\n        const hl = valueArray[(yl * inWidth * samples) + (xh * samples) + i];\n        const lh = valueArray[(yh * inWidth * samples) + (xl * samples) + i];\n        const hh = valueArray[(yh * inWidth * samples) + (xh * samples) + i];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using the selected resampling method.\n * @param {TypedArray} valueArray The input array to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                                 interleaved data\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray} The resampled rasters\n */\nexport function resampleInterleaved(valueArray, inWidth, inHeight, outWidth, outHeight, samples, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearestInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinearInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n","/** @module geotiffimage */\nimport { getFloat16 } from '@petamoriken/float16';\nimport getAttribute from 'xml-utils/get-attribute.js';\nimport findTagsByName from 'xml-utils/find-tags-by-name.js';\n\nimport { photometricInterpretations, ExtraSamplesValues } from './globals.js';\nimport { fromWhiteIsZero, fromBlackIsZero, fromPalette, fromCMYK, fromYCbCr, fromCIELab } from './rgb.js';\nimport { getDecoder } from './compression/index.js';\nimport { resample, resampleInterleaved } from './resample.js';\n\n/**\n * @typedef {Object} ReadRasterOptions\n * @property {Array<number>} [window=whole window] the subset to read data from in pixels.\n * @property {Array<number>} [bbox=whole image] the subset to read data from in\n *                                           geographical coordinates.\n * @property {Array<number>} [samples=all samples] the selection of samples to read from. Default is all samples.\n * @property {boolean} [interleave=false] whether the data shall be read\n *                                             in one single array or separate\n *                                             arrays.\n * @property {Pool} [pool=null] The optional decoder pool to use.\n * @property {number} [width] The desired width of the output. When the width is not the\n *                                 same as the images, resampling will be performed.\n * @property {number} [height] The desired height of the output. When the width is not the\n *                                  same as the images, resampling will be performed.\n * @property {string} [resampleMethod='nearest'] The desired resampling method.\n * @property {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                                       to be aborted\n * @property {number|number[]} [fillValue] The value to use for parts of the image\n *                                              outside of the images extent. When multiple\n *                                              samples are requested, an array of fill values\n *                                              can be passed.\n */\n\n/** @typedef {import(\"./geotiff.js\").TypedArray} TypedArray */\n\nfunction sum(array, start, end) {\n  let s = 0;\n  for (let i = start; i < end; ++i) {\n    s += array[i];\n  }\n  return s;\n}\n\nfunction arrayForType(format, bitsPerSample, size) {\n  switch (format) {\n    case 1: // unsigned integer data\n      if (bitsPerSample <= 8) {\n        return new Uint8Array(size);\n      } else if (bitsPerSample <= 16) {\n        return new Uint16Array(size);\n      } else if (bitsPerSample <= 32) {\n        return new Uint32Array(size);\n      }\n      break;\n    case 2: // twos complement signed integer data\n      if (bitsPerSample === 8) {\n        return new Int8Array(size);\n      } else if (bitsPerSample === 16) {\n        return new Int16Array(size);\n      } else if (bitsPerSample === 32) {\n        return new Int32Array(size);\n      }\n      break;\n    case 3: // floating point data\n      switch (bitsPerSample) {\n        case 16:\n        case 32:\n          return new Float32Array(size);\n        case 64:\n          return new Float64Array(size);\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  throw Error('Unsupported data format/bitsPerSample');\n}\n\nfunction needsNormalization(format, bitsPerSample) {\n  if ((format === 1 || format === 2) && bitsPerSample <= 32 && bitsPerSample % 8 === 0) {\n    return false;\n  } else if (format === 3 && (bitsPerSample === 16 || bitsPerSample === 32 || bitsPerSample === 64)) {\n    return false;\n  }\n  return true;\n}\n\nfunction normalizeArray(inBuffer, format, planarConfiguration, samplesPerPixel, bitsPerSample, tileWidth, tileHeight) {\n  // const inByteArray = new Uint8Array(inBuffer);\n  const view = new DataView(inBuffer);\n  const outSize = planarConfiguration === 2\n    ? tileHeight * tileWidth\n    : tileHeight * tileWidth * samplesPerPixel;\n  const samplesToTransfer = planarConfiguration === 2\n    ? 1 : samplesPerPixel;\n  const outArray = arrayForType(format, bitsPerSample, outSize);\n  // let pixel = 0;\n\n  const bitMask = parseInt('1'.repeat(bitsPerSample), 2);\n\n  if (format === 1) { // unsigned integer\n    // translation of https://github.com/OSGeo/gdal/blob/master/gdal/frmts/gtiff/geotiff.cpp#L7337\n    let pixelBitSkip;\n    // let sampleBitOffset = 0;\n    if (planarConfiguration === 1) {\n      pixelBitSkip = samplesPerPixel * bitsPerSample;\n      // sampleBitOffset = (samplesPerPixel - 1) * bitsPerSample;\n    } else {\n      pixelBitSkip = bitsPerSample;\n    }\n\n    // Bits per line rounds up to next byte boundary.\n    let bitsPerLine = tileWidth * pixelBitSkip;\n    if ((bitsPerLine & 7) !== 0) {\n      bitsPerLine = (bitsPerLine + 7) & (~7);\n    }\n\n    for (let y = 0; y < tileHeight; ++y) {\n      const lineBitOffset = y * bitsPerLine;\n      for (let x = 0; x < tileWidth; ++x) {\n        const pixelBitOffset = lineBitOffset + (x * samplesToTransfer * bitsPerSample);\n        for (let i = 0; i < samplesToTransfer; ++i) {\n          const bitOffset = pixelBitOffset + (i * bitsPerSample);\n          const outIndex = (((y * tileWidth) + x) * samplesToTransfer) + i;\n\n          const byteOffset = Math.floor(bitOffset / 8);\n          const innerBitOffset = bitOffset % 8;\n          if (innerBitOffset + bitsPerSample <= 8) {\n            outArray[outIndex] = (view.getUint8(byteOffset) >> (8 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 16) {\n            outArray[outIndex] = (view.getUint16(byteOffset) >> (16 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 24) {\n            const raw = (view.getUint16(byteOffset) << 8) | (view.getUint8(byteOffset + 2));\n            outArray[outIndex] = (raw >> (24 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else {\n            outArray[outIndex] = (view.getUint32(byteOffset) >> (32 - bitsPerSample) - innerBitOffset) & bitMask;\n          }\n\n          // let outWord = 0;\n          // for (let bit = 0; bit < bitsPerSample; ++bit) {\n          //   if (inByteArray[bitOffset >> 3]\n          //     & (0x80 >> (bitOffset & 7))) {\n          //     outWord |= (1 << (bitsPerSample - 1 - bit));\n          //   }\n          //   ++bitOffset;\n          // }\n\n          // outArray[outIndex] = outWord;\n          // outArray[pixel] = outWord;\n          // pixel += 1;\n        }\n        // bitOffset = bitOffset + pixelBitSkip - bitsPerSample;\n      }\n    }\n  } else if (format === 3) { // floating point\n    // Float16 is handled elsewhere\n    // normalize 16/24 bit floats to 32 bit floats in the array\n    // console.time();\n    // if (bitsPerSample === 16) {\n    //   for (let byte = 0, outIndex = 0; byte < inBuffer.byteLength; byte += 2, ++outIndex) {\n    //     outArray[outIndex] = getFloat16(view, byte);\n    //   }\n    // }\n    // console.timeEnd()\n  }\n\n  return outArray.buffer;\n}\n\n/**\n * GeoTIFF sub-file image.\n */\nclass GeoTIFFImage {\n  /**\n   * @constructor\n   * @param {Object} fileDirectory The parsed file directory\n   * @param {Object} geoKeys The parsed geo-keys\n   * @param {DataView} dataView The DataView for the underlying file.\n   * @param {Boolean} littleEndian Whether the file is encoded in little or big endian\n   * @param {Boolean} cache Whether or not decoded tiles shall be cached\n   * @param {Source} source The datasource to read from\n   */\n  constructor(fileDirectory, geoKeys, dataView, littleEndian, cache, source) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeys = geoKeys;\n    this.dataView = dataView;\n    this.littleEndian = littleEndian;\n    this.tiles = cache ? {} : null;\n    this.isTiled = !fileDirectory.StripOffsets;\n    const planarConfiguration = fileDirectory.PlanarConfiguration;\n    this.planarConfiguration = (typeof planarConfiguration === 'undefined') ? 1 : planarConfiguration;\n    if (this.planarConfiguration !== 1 && this.planarConfiguration !== 2) {\n      throw new Error('Invalid planar configuration.');\n    }\n\n    this.source = source;\n  }\n\n  /**\n   * Returns the associated parsed file directory.\n   * @returns {Object} the parsed file directory\n   */\n  getFileDirectory() {\n    return this.fileDirectory;\n  }\n\n  /**\n   * Returns the associated parsed geo keys.\n   * @returns {Object} the parsed geo keys\n   */\n  getGeoKeys() {\n    return this.geoKeys;\n  }\n\n  /**\n   * Returns the width of the image.\n   * @returns {Number} the width of the image\n   */\n  getWidth() {\n    return this.fileDirectory.ImageWidth;\n  }\n\n  /**\n   * Returns the height of the image.\n   * @returns {Number} the height of the image\n   */\n  getHeight() {\n    return this.fileDirectory.ImageLength;\n  }\n\n  /**\n   * Returns the number of samples per pixel.\n   * @returns {Number} the number of samples per pixel\n   */\n  getSamplesPerPixel() {\n    return typeof this.fileDirectory.SamplesPerPixel !== 'undefined'\n      ? this.fileDirectory.SamplesPerPixel : 1;\n  }\n\n  /**\n   * Returns the width of each tile.\n   * @returns {Number} the width of each tile\n   */\n  getTileWidth() {\n    return this.isTiled ? this.fileDirectory.TileWidth : this.getWidth();\n  }\n\n  /**\n   * Returns the height of each tile.\n   * @returns {Number} the height of each tile\n   */\n  getTileHeight() {\n    if (this.isTiled) {\n      return this.fileDirectory.TileLength;\n    }\n    if (typeof this.fileDirectory.RowsPerStrip !== 'undefined') {\n      return Math.min(this.fileDirectory.RowsPerStrip, this.getHeight());\n    }\n    return this.getHeight();\n  }\n\n  getBlockWidth() {\n    return this.getTileWidth();\n  }\n\n  getBlockHeight(y) {\n    if (this.isTiled || (y + 1) * this.getTileHeight() <= this.getHeight()) {\n      return this.getTileHeight();\n    } else {\n      return this.getHeight() - (y * this.getTileHeight());\n    }\n  }\n\n  /**\n   * Calculates the number of bytes for each pixel across all samples. Only full\n   * bytes are supported, an exception is thrown when this is not the case.\n   * @returns {Number} the bytes per pixel\n   */\n  getBytesPerPixel() {\n    let bytes = 0;\n    for (let i = 0; i < this.fileDirectory.BitsPerSample.length; ++i) {\n      bytes += this.getSampleByteSize(i);\n    }\n    return bytes;\n  }\n\n  getSampleByteSize(i) {\n    if (i >= this.fileDirectory.BitsPerSample.length) {\n      throw new RangeError(`Sample index ${i} is out of range.`);\n    }\n    return Math.ceil(this.fileDirectory.BitsPerSample[i] / 8);\n  }\n\n  getReaderForSample(sampleIndex) {\n    const format = this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n    const bitsPerSample = this.fileDirectory.BitsPerSample[sampleIndex];\n    switch (format) {\n      case 1: // unsigned integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getUint8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getUint16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getUint32;\n        }\n        break;\n      case 2: // twos complement signed integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getInt8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getInt16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getInt32;\n        }\n        break;\n      case 3:\n        switch (bitsPerSample) {\n          case 16:\n            return function (offset, littleEndian) {\n              return getFloat16(this, offset, littleEndian);\n            };\n          case 32:\n            return DataView.prototype.getFloat32;\n          case 64:\n            return DataView.prototype.getFloat64;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n    throw Error('Unsupported data format/bitsPerSample');\n  }\n\n  getSampleFormat(sampleIndex = 0) {\n    return this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n  }\n\n  getBitsPerSample(sampleIndex = 0) {\n    return this.fileDirectory.BitsPerSample[sampleIndex];\n  }\n\n  getArrayForSample(sampleIndex, size) {\n    const format = this.getSampleFormat(sampleIndex);\n    const bitsPerSample = this.getBitsPerSample(sampleIndex);\n    return arrayForType(format, bitsPerSample, size);\n  }\n\n  /**\n   * Returns the decoded strip or tile.\n   * @param {Number} x the strip or tile x-offset\n   * @param {Number} y the tile y-offset (0 for stripped images)\n   * @param {Number} sample the sample to get for separated samples\n   * @param {import(\"./geotiff\").Pool|AbstractDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise.<ArrayBuffer>}\n   */\n  async getTileOrStrip(x, y, sample, poolOrDecoder, signal) {\n    const numTilesPerRow = Math.ceil(this.getWidth() / this.getTileWidth());\n    const numTilesPerCol = Math.ceil(this.getHeight() / this.getTileHeight());\n    let index;\n    const { tiles } = this;\n    if (this.planarConfiguration === 1) {\n      index = (y * numTilesPerRow) + x;\n    } else if (this.planarConfiguration === 2) {\n      index = (sample * numTilesPerRow * numTilesPerCol) + (y * numTilesPerRow) + x;\n    }\n\n    let offset;\n    let byteCount;\n    if (this.isTiled) {\n      offset = this.fileDirectory.TileOffsets[index];\n      byteCount = this.fileDirectory.TileByteCounts[index];\n    } else {\n      offset = this.fileDirectory.StripOffsets[index];\n      byteCount = this.fileDirectory.StripByteCounts[index];\n    }\n    const slice = (await this.source.fetch([{ offset, length: byteCount }], signal))[0];\n\n    let request;\n    if (tiles === null || !tiles[index]) {\n    // resolve each request by potentially applying array normalization\n      request = (async () => {\n        let data = await poolOrDecoder.decode(this.fileDirectory, slice);\n        const sampleFormat = this.getSampleFormat();\n        const bitsPerSample = this.getBitsPerSample();\n        if (needsNormalization(sampleFormat, bitsPerSample)) {\n          data = normalizeArray(\n            data,\n            sampleFormat,\n            this.planarConfiguration,\n            this.getSamplesPerPixel(),\n            bitsPerSample,\n            this.getTileWidth(),\n            this.getBlockHeight(y),\n          );\n        }\n        return data;\n      })();\n\n      // set the cache\n      if (tiles !== null) {\n        tiles[index] = request;\n      }\n    } else {\n      // get from the cache\n      request = tiles[index];\n    }\n\n    // cache the tile request\n    return { x, y, sample, data: await request };\n  }\n\n  /**\n   * Internal read function.\n   * @private\n   * @param {Array} imageWindow The image window in pixel coordinates\n   * @param {Array} samples The selected samples (0-based indices)\n   * @param {TypedArray[]|TypedArray} valueArrays The array(s) to write into\n   * @param {Boolean} interleave Whether or not to write in an interleaved manner\n   * @param {import(\"./geotiff\").Pool|AbstractDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {number} width the width of window to be read into\n   * @param {number} height the height of window to be read into\n   * @param {number} resampleMethod the resampling method to be used when interpolating\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise<TypedArray[]>|Promise<TypedArray>}\n   */\n  async _readRaster(imageWindow, samples, valueArrays, interleave, poolOrDecoder, width,\n    height, resampleMethod, signal) {\n    const tileWidth = this.getTileWidth();\n    const tileHeight = this.getTileHeight();\n    const imageWidth = this.getWidth();\n    const imageHeight = this.getHeight();\n\n    const minXTile = Math.max(Math.floor(imageWindow[0] / tileWidth), 0);\n    const maxXTile = Math.min(\n      Math.ceil(imageWindow[2] / tileWidth),\n      Math.ceil(imageWidth / tileWidth),\n    );\n    const minYTile = Math.max(Math.floor(imageWindow[1] / tileHeight), 0);\n    const maxYTile = Math.min(\n      Math.ceil(imageWindow[3] / tileHeight),\n      Math.ceil(imageHeight / tileHeight),\n    );\n    const windowWidth = imageWindow[2] - imageWindow[0];\n\n    let bytesPerPixel = this.getBytesPerPixel();\n\n    const srcSampleOffsets = [];\n    const sampleReaders = [];\n    for (let i = 0; i < samples.length; ++i) {\n      if (this.planarConfiguration === 1) {\n        srcSampleOffsets.push(sum(this.fileDirectory.BitsPerSample, 0, samples[i]) / 8);\n      } else {\n        srcSampleOffsets.push(0);\n      }\n      sampleReaders.push(this.getReaderForSample(samples[i]));\n    }\n\n    const promises = [];\n    const { littleEndian } = this;\n\n    for (let yTile = minYTile; yTile < maxYTile; ++yTile) {\n      for (let xTile = minXTile; xTile < maxXTile; ++xTile) {\n        for (let sampleIndex = 0; sampleIndex < samples.length; ++sampleIndex) {\n          const si = sampleIndex;\n          const sample = samples[sampleIndex];\n          if (this.planarConfiguration === 2) {\n            bytesPerPixel = this.getSampleByteSize(sampleIndex);\n          }\n          const promise = this.getTileOrStrip(xTile, yTile, sample, poolOrDecoder, signal);\n          promises.push(promise);\n          promise.then((tile) => {\n            const buffer = tile.data;\n            const dataView = new DataView(buffer);\n            const blockHeight = this.getBlockHeight(tile.y);\n            const firstLine = tile.y * tileHeight;\n            const firstCol = tile.x * tileWidth;\n            const lastLine = firstLine + blockHeight;\n            const lastCol = (tile.x + 1) * tileWidth;\n            const reader = sampleReaders[si];\n\n            const ymax = Math.min(blockHeight, blockHeight - (lastLine - imageWindow[3]), imageHeight - firstLine);\n            const xmax = Math.min(tileWidth, tileWidth - (lastCol - imageWindow[2]), imageWidth - firstCol);\n\n            for (let y = Math.max(0, imageWindow[1] - firstLine); y < ymax; ++y) {\n              for (let x = Math.max(0, imageWindow[0] - firstCol); x < xmax; ++x) {\n                const pixelOffset = ((y * tileWidth) + x) * bytesPerPixel;\n                const value = reader.call(\n                  dataView, pixelOffset + srcSampleOffsets[si], littleEndian,\n                );\n                let windowCoordinate;\n                if (interleave) {\n                  windowCoordinate = ((y + firstLine - imageWindow[1]) * windowWidth * samples.length)\n                    + ((x + firstCol - imageWindow[0]) * samples.length)\n                    + si;\n                  valueArrays[windowCoordinate] = value;\n                } else {\n                  windowCoordinate = (\n                    (y + firstLine - imageWindow[1]) * windowWidth\n                  ) + x + firstCol - imageWindow[0];\n                  valueArrays[si][windowCoordinate] = value;\n                }\n              }\n            }\n          });\n        }\n      }\n    }\n    await Promise.all(promises);\n\n    if ((width && (imageWindow[2] - imageWindow[0]) !== width)\n        || (height && (imageWindow[3] - imageWindow[1]) !== height)) {\n      let resampled;\n      if (interleave) {\n        resampled = resampleInterleaved(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          samples.length,\n          resampleMethod,\n        );\n      } else {\n        resampled = resample(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          resampleMethod,\n        );\n      }\n      resampled.width = width;\n      resampled.height = height;\n      return resampled;\n    }\n\n    valueArrays.width = width || imageWindow[2] - imageWindow[0];\n    valueArrays.height = height || imageWindow[3] - imageWindow[1];\n\n    return valueArrays;\n  }\n\n  /**\n   * Reads raster data from the image. This function reads all selected samples\n   * into separate arrays of the correct type for that sample or into a single\n   * combined array when `interleave` is set. When provided, only a subset\n   * of the raster is read for each sample.\n   *\n   * @param {ReadRasterOptions} [options={}] optional parameters\n   * @returns {Promise.<(TypedArray|TypedArray[])>} the decoded arrays as a promise\n   */\n  async readRasters({\n    window: wnd, samples = [], interleave, pool = null,\n    width, height, resampleMethod, fillValue, signal,\n  } = {}) {\n    const imageWindow = wnd || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const imageWindowWidth = imageWindow[2] - imageWindow[0];\n    const imageWindowHeight = imageWindow[3] - imageWindow[1];\n    const numPixels = imageWindowWidth * imageWindowHeight;\n    const samplesPerPixel = this.getSamplesPerPixel();\n\n    if (!samples || !samples.length) {\n      for (let i = 0; i < samplesPerPixel; ++i) {\n        samples.push(i);\n      }\n    } else {\n      for (let i = 0; i < samples.length; ++i) {\n        if (samples[i] >= samplesPerPixel) {\n          return Promise.reject(new RangeError(`Invalid sample index '${samples[i]}'.`));\n        }\n      }\n    }\n    let valueArrays;\n    if (interleave) {\n      const format = this.fileDirectory.SampleFormat\n        ? Math.max.apply(null, this.fileDirectory.SampleFormat) : 1;\n      const bitsPerSample = Math.max.apply(null, this.fileDirectory.BitsPerSample);\n      valueArrays = arrayForType(format, bitsPerSample, numPixels * samples.length);\n      if (fillValue) {\n        valueArrays.fill(fillValue);\n      }\n    } else {\n      valueArrays = [];\n      for (let i = 0; i < samples.length; ++i) {\n        const valueArray = this.getArrayForSample(samples[i], numPixels);\n        if (Array.isArray(fillValue) && i < fillValue.length) {\n          valueArray.fill(fillValue[i]);\n        } else if (fillValue && !Array.isArray(fillValue)) {\n          valueArray.fill(fillValue);\n        }\n        valueArrays.push(valueArray);\n      }\n    }\n\n    const poolOrDecoder = pool || await getDecoder(this.fileDirectory);\n\n    const result = await this._readRaster(\n      imageWindow, samples, valueArrays, interleave, poolOrDecoder, width, height, resampleMethod, signal,\n    );\n    return result;\n  }\n\n  /**\n   * Reads raster data from the image as RGB. The result is always an\n   * interleaved typed array.\n   * Colorspaces other than RGB will be transformed to RGB, color maps expanded.\n   * When no other method is applicable, the first sample is used to produce a\n   * greayscale image.\n   * When provided, only a subset of the raster is read for each sample.\n   *\n   * @param {Object} [options] optional parameters\n   * @param {Array<number>} [options.window] the subset to read data from in pixels.\n   * @param {boolean} [options.interleave=true] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {import(\"./geotiff\").Pool} [options.pool=null] The optional decoder pool to use.\n   * @param {number} [options.width] The desired width of the output. When the width is no the\n   *                                 same as the images, resampling will be performed.\n   * @param {number} [options.height] The desired height of the output. When the width is no the\n   *                                  same as the images, resampling will be performed.\n   * @param {string} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {boolean} [options.enableAlpha=false] Enable reading alpha channel if present.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @returns {Promise<TypedArray|TypedArray[]>} the RGB array as a Promise\n   */\n  async readRGB({ window, interleave = true, pool = null, width, height,\n    resampleMethod, enableAlpha = false, signal } = {}) {\n    const imageWindow = window || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const pi = this.fileDirectory.PhotometricInterpretation;\n\n    if (pi === photometricInterpretations.RGB) {\n      let s = [0, 1, 2];\n      if ((!(this.fileDirectory.ExtraSamples === ExtraSamplesValues.Unspecified)) && enableAlpha) {\n        s = [];\n        for (let i = 0; i < this.fileDirectory.BitsPerSample.length; i += 1) {\n          s.push(i);\n        }\n      }\n      return this.readRasters({\n        window,\n        interleave,\n        samples: s,\n        pool,\n        width,\n        height,\n        resampleMethod,\n        signal,\n      });\n    }\n\n    let samples;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n      case photometricInterpretations.BlackIsZero:\n      case photometricInterpretations.Palette:\n        samples = [0];\n        break;\n      case photometricInterpretations.CMYK:\n        samples = [0, 1, 2, 3];\n        break;\n      case photometricInterpretations.YCbCr:\n      case photometricInterpretations.CIELab:\n        samples = [0, 1, 2];\n        break;\n      default:\n        throw new Error('Invalid or unsupported photometric interpretation.');\n    }\n\n    const subOptions = {\n      window: imageWindow,\n      interleave: true,\n      samples,\n      pool,\n      width,\n      height,\n      resampleMethod,\n      signal,\n    };\n    const { fileDirectory } = this;\n    const raster = await this.readRasters(subOptions);\n\n    const max = 2 ** this.fileDirectory.BitsPerSample[0];\n    let data;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n        data = fromWhiteIsZero(raster, max);\n        break;\n      case photometricInterpretations.BlackIsZero:\n        data = fromBlackIsZero(raster, max);\n        break;\n      case photometricInterpretations.Palette:\n        data = fromPalette(raster, fileDirectory.ColorMap);\n        break;\n      case photometricInterpretations.CMYK:\n        data = fromCMYK(raster);\n        break;\n      case photometricInterpretations.YCbCr:\n        data = fromYCbCr(raster);\n        break;\n      case photometricInterpretations.CIELab:\n        data = fromCIELab(raster);\n        break;\n      default:\n        throw new Error('Unsupported photometric interpretation.');\n    }\n\n    // if non-interleaved data is requested, we must split the channels\n    // into their respective arrays\n    if (!interleave) {\n      const red = new Uint8Array(data.length / 3);\n      const green = new Uint8Array(data.length / 3);\n      const blue = new Uint8Array(data.length / 3);\n      for (let i = 0, j = 0; i < data.length; i += 3, ++j) {\n        red[j] = data[i];\n        green[j] = data[i + 1];\n        blue[j] = data[i + 2];\n      }\n      data = [red, green, blue];\n    }\n\n    data.width = raster.width;\n    data.height = raster.height;\n    return data;\n  }\n\n  /**\n   * Returns an array of tiepoints.\n   * @returns {Object[]}\n   */\n  getTiePoints() {\n    if (!this.fileDirectory.ModelTiepoint) {\n      return [];\n    }\n\n    const tiePoints = [];\n    for (let i = 0; i < this.fileDirectory.ModelTiepoint.length; i += 6) {\n      tiePoints.push({\n        i: this.fileDirectory.ModelTiepoint[i],\n        j: this.fileDirectory.ModelTiepoint[i + 1],\n        k: this.fileDirectory.ModelTiepoint[i + 2],\n        x: this.fileDirectory.ModelTiepoint[i + 3],\n        y: this.fileDirectory.ModelTiepoint[i + 4],\n        z: this.fileDirectory.ModelTiepoint[i + 5],\n      });\n    }\n    return tiePoints;\n  }\n\n  /**\n   * Returns the parsed GDAL metadata items.\n   *\n   * If sample is passed to null, dataset-level metadata will be returned.\n   * Otherwise only metadata specific to the provided sample will be returned.\n   *\n   * @param {number} [sample=null] The sample index.\n   * @returns {Object}\n   */\n  getGDALMetadata(sample = null) {\n    const metadata = {};\n    if (!this.fileDirectory.GDAL_METADATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_METADATA;\n\n    let items = findTagsByName(string, 'Item');\n\n    if (sample === null) {\n      items = items.filter((item) => getAttribute(item, 'sample') === undefined);\n    } else {\n      items = items.filter((item) => Number(getAttribute(item, 'sample')) === sample);\n    }\n\n    for (let i = 0; i < items.length; ++i) {\n      const item = items[i];\n      metadata[getAttribute(item, 'name')] = item.inner;\n    }\n    return metadata;\n  }\n\n  /**\n   * Returns the GDAL nodata value\n   * @returns {number|null}\n   */\n  getGDALNoData() {\n    if (!this.fileDirectory.GDAL_NODATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_NODATA;\n    return Number(string.substring(0, string.length - 1));\n  }\n\n  /**\n   * Returns the image origin as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @returns {Array<number>} The origin as a vector\n   */\n  getOrigin() {\n    const tiePoints = this.fileDirectory.ModelTiepoint;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n    if (tiePoints && tiePoints.length === 6) {\n      return [\n        tiePoints[3],\n        tiePoints[4],\n        tiePoints[5],\n      ];\n    }\n    if (modelTransformation) {\n      return [\n        modelTransformation[3],\n        modelTransformation[7],\n        modelTransformation[11],\n      ];\n    }\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns the image resolution as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @param {GeoTIFFImage} [referenceImage=null] A reference image to calculate the resolution from\n   *                                             in cases when the current image does not have the\n   *                                             required tags on its own.\n   * @returns {Array<number>} The resolution as a vector\n   */\n  getResolution(referenceImage = null) {\n    const modelPixelScale = this.fileDirectory.ModelPixelScale;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n\n    if (modelPixelScale) {\n      return [\n        modelPixelScale[0],\n        -modelPixelScale[1],\n        modelPixelScale[2],\n      ];\n    }\n    if (modelTransformation) {\n      return [\n        modelTransformation[0],\n        modelTransformation[5],\n        modelTransformation[10],\n      ];\n    }\n\n    if (referenceImage) {\n      const [refResX, refResY, refResZ] = referenceImage.getResolution();\n      return [\n        refResX * referenceImage.getWidth() / this.getWidth(),\n        refResY * referenceImage.getHeight() / this.getHeight(),\n        refResZ * referenceImage.getWidth() / this.getWidth(),\n      ];\n    }\n\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns whether or not the pixels of the image depict an area (or point).\n   * @returns {Boolean} Whether the pixels are a point\n   */\n  pixelIsArea() {\n    return this.geoKeys.GTRasterTypeGeoKey === 1;\n  }\n\n  /**\n   * Returns the image bounding box as an array of 4 values: min-x, min-y,\n   * max-x and max-y. When the image has no affine transformation, then an\n   * exception is thrown.\n   * @returns {Array<number>} The bounding box\n   */\n  getBoundingBox() {\n    const origin = this.getOrigin();\n    const resolution = this.getResolution();\n\n    const x1 = origin[0];\n    const y1 = origin[1];\n\n    const x2 = x1 + (resolution[0] * this.getWidth());\n    const y2 = y1 + (resolution[1] * this.getHeight());\n\n    return [\n      Math.min(x1, x2),\n      Math.min(y1, y2),\n      Math.max(x1, x2),\n      Math.max(y1, y2),\n    ];\n  }\n}\n\nexport default GeoTIFFImage;\n","import { getFloat16 } from '@petamoriken/float16';\n\nexport default class DataView64 {\n  constructor(arrayBuffer) {\n    this._dataView = new DataView(arrayBuffer);\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  getUint64(offset, littleEndian) {\n    const left = this.getUint32(offset, littleEndian);\n    const right = this.getUint32(offset + 4, littleEndian);\n    let combined;\n    if (littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  getInt64(offset, littleEndian) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (littleEndian ? 7 : 0)) & 0x80) > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(offset + (littleEndian ? i : 7 - i));\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  getUint8(offset, littleEndian) {\n    return this._dataView.getUint8(offset, littleEndian);\n  }\n\n  getInt8(offset, littleEndian) {\n    return this._dataView.getInt8(offset, littleEndian);\n  }\n\n  getUint16(offset, littleEndian) {\n    return this._dataView.getUint16(offset, littleEndian);\n  }\n\n  getInt16(offset, littleEndian) {\n    return this._dataView.getInt16(offset, littleEndian);\n  }\n\n  getUint32(offset, littleEndian) {\n    return this._dataView.getUint32(offset, littleEndian);\n  }\n\n  getInt32(offset, littleEndian) {\n    return this._dataView.getInt32(offset, littleEndian);\n  }\n\n  getFloat16(offset, littleEndian) {\n    return getFloat16(this._dataView, offset, littleEndian);\n  }\n\n  getFloat32(offset, littleEndian) {\n    return this._dataView.getFloat32(offset, littleEndian);\n  }\n\n  getFloat64(offset, littleEndian) {\n    return this._dataView.getFloat64(offset, littleEndian);\n  }\n}\n","export default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n\n  get littleEndian() {\n    return this._littleEndian;\n  }\n\n  get bigTiff() {\n    return this._bigTiff;\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n\n  readUint8(offset) {\n    return this._dataView.getUint8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt8(offset) {\n    return this._dataView.getInt8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint16(offset) {\n    return this._dataView.getUint16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt16(offset) {\n    return this._dataView.getInt16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint32(offset) {\n    return this._dataView.getUint32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt32(offset) {\n    return this._dataView.getInt32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat32(offset) {\n    return this._dataView.getFloat32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat64(offset) {\n    return this._dataView.getFloat64(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n    if (this._littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80)\n      > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(\n        offset + (this._littleEndian ? i : 7 - i),\n      );\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n    return this.readUint32(offset);\n  }\n}\n","import { getDecoder } from './compression/index.js';\n\nconst defaultPoolSize = typeof navigator !== 'undefined' ? (navigator.hardwareConcurrency || 2) : 2;\n\n/**\n * @module pool\n */\n\n/**\n * Pool for workers to decode chunks of the images.\n */\nclass Pool {\n  /**\n   * @constructor\n   * @param {Number} [size] The size of the pool. Defaults to the number of CPUs\n   *                      available. When this parameter is `null` or 0, then the\n   *                      decoding will be done in the main thread.\n   * @param {function(): Worker} [createWorker] A function that creates the decoder worker.\n   * Defaults to a worker with all decoders that ship with geotiff.js. The `createWorker()`\n   * function is expected to return a `Worker` compatible with Web Workers. For code that\n   * runs in Node, [web-worker](https://www.npmjs.com/package/web-worker) is a good choice.\n   *\n   * A worker that uses a custom lzw decoder would look like this `my-custom-worker.js` file:\n   * ```js\n   * import { addDecoder, getDecoder } from 'geotiff';\n   * addDecoder(5, () => import ('./my-custom-lzw').then((m) => m.default));\n   * self.addEventListener('message', async (e) => {\n   *   const { id, fileDirectory, buffer } = e.data;\n   *   const decoder = await getDecoder(fileDirectory);\n   *   const decoded = await decoder.decode(fileDirectory, buffer);\n   *   self.postMessage({ decoded, id }, [decoded]);\n   * });\n   * ```\n   * The way the above code is built into a worker by the `createWorker()` function\n   * depends on the used bundler. For most bundlers, something like this will work:\n   * ```js\n   * function createWorker() {\n   *   return new Worker(new URL('./my-custom-worker.js', import.meta.url));\n   * }\n   * ```\n   */\n  constructor(size = defaultPoolSize, createWorker) {\n    this.workers = null;\n    this._awaitingDecoder = null;\n    this.size = size;\n    this.messageId = 0;\n    if (size) {\n      this._awaitingDecoder = createWorker ? Promise.resolve(createWorker) : new Promise((resolve) => {\n        import('./worker/decoder.js').then((module) => {\n          resolve(module.create);\n        });\n      });\n      this._awaitingDecoder.then((create) => {\n        this._awaitingDecoder = null;\n        this.workers = [];\n        for (let i = 0; i < size; i++) {\n          this.workers.push({ worker: create(), idle: true });\n        }\n      });\n    }\n  }\n\n  /**\n   * Decode the given block of bytes with the set compression method.\n   * @param {ArrayBuffer} buffer the array buffer of bytes to decode.\n   * @returns {Promise<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async decode(fileDirectory, buffer) {\n    if (this._awaitingDecoder) {\n      await this._awaitingDecoder;\n    }\n    return this.size === 0\n      ? getDecoder(fileDirectory).then((decoder) => decoder.decode(fileDirectory, buffer))\n      : new Promise((resolve) => {\n        const worker = this.workers.find((candidate) => candidate.idle)\n          || this.workers[Math.floor(Math.random() * this.size)];\n        worker.idle = false;\n        const id = this.messageId++;\n        const onMessage = (e) => {\n          if (e.data.id === id) {\n            worker.idle = true;\n            resolve(e.data.decoded);\n            worker.worker.removeEventListener('message', onMessage);\n          }\n        };\n        worker.worker.addEventListener('message', onMessage);\n        worker.worker.postMessage({ fileDirectory, buffer, id }, [buffer]);\n      });\n  }\n\n  destroy() {\n    if (this.workers) {\n      this.workers.forEach((worker) => {\n        worker.worker.terminate();\n      });\n      this.workers = null;\n    }\n  }\n}\n\nexport default Pool;\n","const CRLFCRLF = '\\r\\n\\r\\n';\n\n/*\n * Shim for 'Object.fromEntries'\n */\nfunction itemsToObject(items) {\n  if (typeof Object.fromEntries !== 'undefined') {\n    return Object.fromEntries(items);\n  }\n  const obj = {};\n  for (const [key, value] of items) {\n    obj[key.toLowerCase()] = value;\n  }\n  return obj;\n}\n\n/**\n * Parse HTTP headers from a given string.\n * @param {String} text the text to parse the headers from\n * @returns {Object} the parsed headers with lowercase keys\n */\nfunction parseHeaders(text) {\n  const items = text\n    .split('\\r\\n')\n    .map((line) => {\n      const kv = line.split(':').map((str) => str.trim());\n      kv[0] = kv[0].toLowerCase();\n      return kv;\n    });\n\n  return itemsToObject(items);\n}\n\n/**\n * Parse a 'Content-Type' header value to the content-type and parameters\n * @param {String} rawContentType the raw string to parse from\n * @returns {Object} the parsed content type with the fields: type and params\n */\nexport function parseContentType(rawContentType) {\n  const [type, ...rawParams] = rawContentType.split(';').map((s) => s.trim());\n  const paramsItems = rawParams.map((param) => param.split('='));\n  return { type, params: itemsToObject(paramsItems) };\n}\n\n/**\n * Parse a 'Content-Range' header value to its start, end, and total parts\n * @param {String} rawContentRange the raw string to parse from\n * @returns {Object} the parsed parts\n */\nexport function parseContentRange(rawContentRange) {\n  let start;\n  let end;\n  let total;\n\n  if (rawContentRange) {\n    [, start, end, total] = rawContentRange.match(/bytes (\\d+)-(\\d+)\\/(\\d+)/);\n    start = parseInt(start, 10);\n    end = parseInt(end, 10);\n    total = parseInt(total, 10);\n  }\n\n  return { start, end, total };\n}\n\n/**\n * Parses a list of byteranges from the given 'multipart/byteranges' HTTP response.\n * Each item in the list has the following properties:\n * - headers: the HTTP headers\n * - data: the sliced ArrayBuffer for that specific part\n * - offset: the offset of the byterange within its originating file\n * - length: the length of the byterange\n * @param {ArrayBuffer} responseArrayBuffer the response to be parsed and split\n * @param {String} boundary the boundary string used to split the sections\n * @returns {Object[]} the parsed byteranges\n */\nexport function parseByteRanges(responseArrayBuffer, boundary) {\n  let offset = null;\n  const decoder = new TextDecoder('ascii');\n  const out = [];\n\n  const startBoundary = `--${boundary}`;\n  const endBoundary = `${startBoundary}--`;\n\n  // search for the initial boundary, may be offset by some bytes\n  // TODO: more efficient to check for `--` in bytes directly\n  for (let i = 0; i < 10; ++i) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, i, startBoundary.length),\n    );\n    if (text === startBoundary) {\n      offset = i;\n    }\n  }\n\n  if (offset === null) {\n    throw new Error('Could not find initial boundary');\n  }\n\n  while (offset < responseArrayBuffer.byteLength) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, offset,\n        Math.min(startBoundary.length + 1024, responseArrayBuffer.byteLength - offset),\n      ),\n    );\n\n    // break if we arrived at the end\n    if (text.length === 0 || text.startsWith(endBoundary)) {\n      break;\n    }\n\n    // assert that we are actually dealing with a byterange and are at the correct offset\n    if (!text.startsWith(startBoundary)) {\n      throw new Error('Part does not start with boundary');\n    }\n\n    // get a substring from where we read the headers\n    const innerText = text.substr(startBoundary.length + 2);\n\n    if (innerText.length === 0) {\n      break;\n    }\n\n    // find the double linebreak that denotes the end of the headers\n    const endOfHeaders = innerText.indexOf(CRLFCRLF);\n\n    // parse the headers to get the content range size\n    const headers = parseHeaders(innerText.substr(0, endOfHeaders));\n    const { start, end, total } = parseContentRange(headers['content-range']);\n\n    // calculate the length of the slice and the next offset\n    const startOfData = offset + startBoundary.length + endOfHeaders + CRLFCRLF.length;\n    const length = parseInt(end, 10) + 1 - parseInt(start, 10);\n    out.push({\n      headers,\n      data: responseArrayBuffer.slice(startOfData, startOfData + length),\n      offset: start,\n      length,\n      fileSize: total,\n    });\n\n    offset = startOfData + length + 4;\n  }\n\n  return out;\n}\n","/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n\n  async close() {\n    // no-op by default\n  }\n}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","export function assign(target, source) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nexport function chunk(iterable, length) {\n  const results = [];\n  const lengthOfIterable = iterable.length;\n  for (let i = 0; i < lengthOfIterable; i += length) {\n    const chunked = [];\n    for (let ci = i; ci < i + length; ci++) {\n      chunked.push(iterable[ci]);\n    }\n    results.push(chunked);\n  }\n  return results;\n}\n\nexport function endsWith(string, expectedEnding) {\n  if (string.length < expectedEnding.length) {\n    return false;\n  }\n  const actualEnding = string.substr(string.length - expectedEnding.length);\n  return actualEnding === expectedEnding;\n}\n\nexport function forEach(iterable, func) {\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    func(iterable[i], i);\n  }\n}\n\nexport function invert(oldObj) {\n  const newObj = {};\n  for (const key in oldObj) {\n    if (oldObj.hasOwnProperty(key)) {\n      const value = oldObj[key];\n      newObj[value] = key;\n    }\n  }\n  return newObj;\n}\n\nexport function range(n) {\n  const results = [];\n  for (let i = 0; i < n; i++) {\n    results.push(i);\n  }\n  return results;\n}\n\nexport function times(numTimes, func) {\n  const results = [];\n  for (let i = 0; i < numTimes; i++) {\n    results.push(func(i));\n  }\n  return results;\n}\n\nexport function toArray(iterable) {\n  const results = [];\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    results.push(iterable[i]);\n  }\n  return results;\n}\n\nexport function toArrayRecursively(input) {\n  if (input.length) {\n    return toArray(input).map(toArrayRecursively);\n  }\n  return input;\n}\n\n// copied from https://github.com/academia-de-codigo/parse-content-range-header/blob/master/index.js\nexport function parseContentRange(headerValue) {\n  if (!headerValue) {\n    return null;\n  }\n\n  if (typeof headerValue !== 'string') {\n    throw new Error('invalid argument');\n  }\n\n  const parseInt = (number) => Number.parseInt(number, 10);\n\n  // Check for presence of unit\n  let matches = headerValue.match(/^(\\w*) /);\n  const unit = matches && matches[1];\n\n  // check for start-end/size header format\n  matches = headerValue.match(/(\\d+)-(\\d+)\\/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: parseInt(matches[1]),\n      last: parseInt(matches[2]),\n      length: matches[3] === '*' ? null : parseInt(matches[3]),\n    };\n  }\n\n  // check for size header format\n  matches = headerValue.match(/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: null,\n      last: null,\n      length: matches[1] === '*' ? null : parseInt(matches[1]),\n    };\n  }\n\n  return null;\n}\n\n/*\n * Promisified wrapper around 'setTimeout' to allow 'await'\n */\nexport async function wait(milliseconds) {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n\nexport function zip(a, b) {\n  const A = Array.isArray(a) ? a : Array.from(a);\n  const B = Array.isArray(b) ? b : Array.from(b);\n  return A.map((k, i) => [k, B[i]]);\n}\n\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class AbortError extends Error {\n  constructor(params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AbortError);\n    }\n\n    this.name = 'AbortError';\n  }\n}\n\nexport class CustomAggregateError extends Error {\n  constructor(errors, message) {\n    super(message);\n    this.errors = errors;\n    this.message = message;\n    this.name = 'AggregateError';\n  }\n}\n\nexport const AggregateError = CustomAggregateError;\n","import LRUCache from 'lru-cache';\nimport { BaseSource } from './basesource.js';\nimport { AbortError, AggregateError, wait, zip } from '../utils.js';\n\nclass Block {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {ArrayBuffer} [data]\n   */\n  constructor(offset, length, data = null) {\n    this.offset = offset;\n    this.length = length;\n    this.data = data;\n  }\n\n  /**\n   * @returns {number} the top byte border\n   */\n  get top() {\n    return this.offset + this.length;\n  }\n}\n\nclass BlockGroup {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {number[]} blockIds\n   */\n  constructor(offset, length, blockIds) {\n    this.offset = offset;\n    this.length = length;\n    this.blockIds = blockIds;\n  }\n}\n\nexport class BlockedSource extends BaseSource {\n  /**\n   *\n   * @param {Source} source The underlying source that shall be blocked and cached\n   * @param {object} options\n   */\n  constructor(source, { blockSize = 65536, cacheSize = 100 } = {}) {\n    super();\n    this.source = source;\n    this.blockSize = blockSize;\n\n    this.blockCache = new LRUCache({ max: cacheSize });\n\n    // mapping blockId -> Block instance\n    this.blockRequests = new Map();\n\n    // set of blockIds missing for the current requests\n    this.blockIdsToFetch = new Set();\n  }\n\n  get fileSize() {\n    return this.source.fileSize;\n  }\n\n  /**\n   *\n   * @param {basesource/Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    const cachedBlocks = new Map();\n    const blockRequests = new Map();\n    const missingBlockIds = new Set();\n\n    for (const { offset, length } of slices) {\n      let top = offset + length;\n\n      const { fileSize } = this;\n      if (fileSize !== null) {\n        top = Math.min(top, fileSize);\n      }\n\n      const firstBlockOffset = Math.floor(offset / this.blockSize) * this.blockSize;\n\n      // chunk the current slice into blocks\n      for (let current = firstBlockOffset; current < top; current += this.blockSize) {\n        // check if the block is cached, being requested or still missing\n        const blockId = Math.floor(current / this.blockSize);\n\n        if (this.blockCache.has(blockId)) {\n          cachedBlocks.set(blockId, this.blockCache.get(blockId));\n        } else if (this.blockRequests.has(blockId)) {\n          blockRequests.set(blockId, this.blockRequests.get(blockId));\n        } else if (this.blockIdsToFetch.has(blockId)) {\n          missingBlockIds.add(blockId);\n        } else {\n          this.blockIdsToFetch.add(blockId);\n          missingBlockIds.add(blockId);\n        }\n      }\n    }\n\n    // allow additional block requests to accumulate\n    await wait();\n    this.fetchBlocks(signal);\n\n    for (const blockId of missingBlockIds) {\n      const block = this.blockRequests.get(blockId);\n      const cachedBlock = this.blockCache.get(blockId);\n\n      if (block) {\n        blockRequests.set(blockId, block);\n      } else if (cachedBlock) {\n        cachedBlocks.set(blockId, cachedBlock);\n      } else {\n        throw new Error(`Block ${blockId} is not in the block requests`);\n      }\n    }\n\n    // actually await all pending requests\n    let results = await Promise.allSettled(Array.from(blockRequests.values()));\n\n    // perform retries if a block was interrupted by a previous signal\n    if (results.some((result) => result.status === 'rejected')) {\n      const retriedBlockRequests = new Set();\n      for (const [blockId, result] of zip(blockRequests.keys(), results)) {\n        const { rejected, reason } = result;\n        if (rejected) {\n          // push some blocks back to the to-fetch list if they were\n          // aborted, but only when a different signal was used\n          if (reason.name === 'AbortError' && reason.signal !== signal) {\n            this.blockIdsToFetch.add(blockId);\n            retriedBlockRequests.add(blockId);\n          }\n        }\n      }\n\n      // start the retry of some blocks if required\n      if (this.blockIdsToFetch.length > 0) {\n        this.fetchBlocks(signal);\n        for (const blockId of retriedBlockRequests) {\n          const block = this.blockRequests.get(blockId);\n          if (!block) {\n            throw new Error(`Block ${blockId} is not in the block requests`);\n          }\n          blockRequests.set(blockId, block);\n        }\n        results = await Promise.allSettled(Array.from(blockRequests.values()));\n      }\n    }\n\n    // throw an error (either abort error or AggregateError if no abort was done)\n    if (results.some((result) => result.status === 'rejected')) {\n      if (signal && signal.aborted) {\n        throw new AbortError('Request was aborted');\n      }\n      throw new AggregateError(\n        results.filter((result) => result.status === 'rejected').map((result) => result.reason),\n        'Request failed',\n      );\n    }\n\n    // extract the actual block responses\n    const values = results.map((result) => result.value);\n\n    // create a final Map, with all required blocks for this request to satisfy\n    const requiredBlocks = new Map(zip(Array.from(blockRequests.keys()), values));\n    for (const [blockId, block] of cachedBlocks) {\n      requiredBlocks.set(blockId, block);\n    }\n\n    // TODO: satisfy each slice\n    return this.readSliceData(slices, requiredBlocks);\n  }\n\n  /**\n   *\n   * @param {AbortSignal} signal\n   */\n  fetchBlocks(signal) {\n    // check if we still need to\n    if (this.blockIdsToFetch.size > 0) {\n      const groups = this.groupBlocks(this.blockIdsToFetch);\n\n      // start requesting slices of data\n      const groupRequests = this.source.fetch(groups, signal);\n\n      for (let groupIndex = 0; groupIndex < groups.length; ++groupIndex) {\n        const group = groups[groupIndex];\n\n        for (const blockId of group.blockIds) {\n          // make an async IIFE for each block\n          const blockRequest = (async () => {\n            try {\n              const response = (await groupRequests)[groupIndex];\n              const blockOffset = blockId * this.blockSize;\n              const o = blockOffset - response.offset;\n              const t = Math.min(o + this.blockSize, response.data.byteLength);\n              const data = response.data.slice(o, t);\n              const block = new Block(\n                blockOffset,\n                data.byteLength,\n                data,\n              );\n              this.blockCache.set(blockId, block);\n              return block;\n            } catch (err) {\n              if (err.name === 'AbortError') {\n                // store the signal here, we need it to determine later if an\n                // error was caused by this signal\n                err.signal = signal;\n              }\n              throw err;\n            } finally {\n              this.blockRequests.delete(blockId);\n            }\n          })();\n          this.blockRequests.set(blockId, blockRequest);\n        }\n      }\n      this.blockIdsToFetch.clear();\n    }\n  }\n\n  /**\n   *\n   * @param {Set} blockIds\n   * @returns {BlockGroup[]}\n   */\n  groupBlocks(blockIds) {\n    const sortedBlockIds = Array.from(blockIds).sort((a, b) => a - b);\n    if (sortedBlockIds.length === 0) {\n      return [];\n    }\n    let current = [];\n    let lastBlockId = null;\n    const groups = [];\n\n    for (const blockId of sortedBlockIds) {\n      if (lastBlockId === null || lastBlockId + 1 === blockId) {\n        current.push(blockId);\n        lastBlockId = blockId;\n      } else {\n        groups.push(new BlockGroup(\n          current[0] * this.blockSize,\n          current.length * this.blockSize,\n          current,\n        ));\n        current = [blockId];\n        lastBlockId = blockId;\n      }\n    }\n\n    groups.push(new BlockGroup(\n      current[0] * this.blockSize,\n      current.length * this.blockSize,\n      current,\n    ));\n\n    return groups;\n  }\n\n  /**\n   *\n   * @param {Slice[]} slices\n   * @param {Map} blocks\n   */\n  readSliceData(slices, blocks) {\n    return slices.map((slice) => {\n      const top = slice.offset + slice.length;\n      const blockIdLow = Math.floor(slice.offset / this.blockSize);\n      const blockIdHigh = Math.floor((slice.offset + slice.length) / this.blockSize);\n      const sliceData = new ArrayBuffer(slice.length);\n      const sliceView = new Uint8Array(sliceData);\n\n      for (let blockId = blockIdLow; blockId <= blockIdHigh; ++blockId) {\n        const block = blocks.get(blockId);\n        const delta = block.offset - slice.offset;\n        const topDelta = block.top - top;\n        let blockInnerOffset = 0;\n        let rangeInnerOffset = 0;\n        let usedBlockLength;\n\n        if (delta < 0) {\n          blockInnerOffset = -delta;\n        } else if (delta > 0) {\n          rangeInnerOffset = delta;\n        }\n\n        if (topDelta < 0) {\n          usedBlockLength = block.length - blockInnerOffset;\n        } else {\n          usedBlockLength = top - block.offset - blockInnerOffset;\n        }\n\n        const blockView = new Uint8Array(block.data, blockInnerOffset, usedBlockLength);\n        sliceView.set(blockView, rangeInnerOffset);\n      }\n\n      return sliceData;\n    });\n  }\n}\n","export class BaseResponse {\n  /**\n   * Returns whether the response has an ok'ish status code\n   */\n  get ok() {\n    return this.status >= 200 && this.status <= 299;\n  }\n\n  /**\n   * Returns the status code of the response\n   */\n  get status() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * Returns the value of the specified header\n   * @param {string} headerName the header name\n   * @returns {string} the header value\n   */\n  getHeader(headerName) { // eslint-disable-line no-unused-vars\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @returns {ArrayBuffer} the response data of the request\n   */\n  async getData() {\n    throw new Error('not implemented');\n  }\n}\n\nexport class BaseClient {\n  constructor(url) {\n    this.url = url;\n  }\n\n  /**\n   * Send a request with the options\n   * @param {object} [options]\n   */\n  async request({ headers, credentials, signal } = {}) { // eslint-disable-line no-unused-vars\n    throw new Error('request is not implemented');\n  }\n}\n","import { BaseClient, BaseResponse } from './base.js';\n\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n\n  get status() {\n    return this.response.status;\n  }\n\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n\n  async getData() {\n    const data = this.response.arrayBuffer\n      ? await this.response.arrayBuffer()\n      : (await this.response.buffer()).buffer;\n    return data;\n  }\n}\n\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n\n  async request({ headers, credentials, signal } = {}) {\n    const response = await fetch(this.url, {\n      headers, credentials, signal,\n    });\n    return new FetchResponse(response);\n  }\n}\n","import { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass XHRResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for XMLHttpRequest\n   * @param {XMLHttpRequest} xhr\n   * @param {ArrayBuffer} data\n   */\n  constructor(xhr, data) {\n    super();\n    this.xhr = xhr;\n    this.data = data;\n  }\n\n  get status() {\n    return this.xhr.status;\n  }\n\n  getHeader(name) {\n    return this.xhr.getResponseHeader(name);\n  }\n\n  async getData() {\n    return this.data;\n  }\n}\n\nexport class XHRClient extends BaseClient {\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', this.url);\n      xhr.responseType = 'arraybuffer';\n      for (const [key, value] of Object.entries(headers)) {\n        xhr.setRequestHeader(key, value);\n      }\n\n      // hook signals\n      xhr.onload = () => {\n        const data = xhr.response;\n        resolve(new XHRResponse(xhr, data));\n      };\n      xhr.onerror = reject;\n      xhr.onabort = () => reject(new AbortError('Request aborted'));\n      xhr.send();\n\n      if (signal) {\n        if (signal.aborted) {\n          xhr.abort();\n        }\n        signal.addEventListener('abort', () => xhr.abort());\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","import http from 'http';\nimport https from 'https';\nimport urlMod from 'url';\n\nimport { BaseClient, BaseResponse } from './base.js';\nimport { AbortError } from '../../utils.js';\n\nclass HttpResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for node HTTP/HTTPS API Response\n   * @param {http.ServerResponse} response\n   */\n  constructor(response, dataPromise) {\n    super();\n    this.response = response;\n    this.dataPromise = dataPromise;\n  }\n\n  get status() {\n    return this.response.statusCode;\n  }\n\n  getHeader(name) {\n    return this.response.headers[name];\n  }\n\n  async getData() {\n    const data = await this.dataPromise;\n    return data;\n  }\n}\n\nexport class HttpClient extends BaseClient {\n  constructor(url) {\n    super(url);\n    this.parsedUrl = urlMod.parse(this.url);\n    this.httpApi = (this.parsedUrl.protocol === 'http:' ? http : https);\n  }\n\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const request = this.httpApi.get(\n        {\n          ...this.parsedUrl,\n          headers,\n        },\n        (response) => {\n          const dataPromise = new Promise((resolveData) => {\n            const chunks = [];\n\n            // collect chunks\n            response.on('data', (chunk) => {\n              chunks.push(chunk);\n            });\n\n            // concatenate all chunks and resolve the promise with the resulting buffer\n            response.on('end', () => {\n              const data = Buffer.concat(chunks).buffer;\n              resolveData(data);\n            });\n            response.on('error', reject);\n          });\n          resolve(new HttpResponse(response, dataPromise));\n        },\n      );\n      request.on('error', reject);\n\n      if (signal) {\n        if (signal.aborted) {\n          request.destroy(new AbortError('Request aborted'));\n        }\n        signal.addEventListener('abort', () => request.destroy(new AbortError('Request aborted')));\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n","import { parseByteRanges, parseContentRange, parseContentType } from './httputils.js';\nimport { BaseSource } from './basesource.js';\nimport { BlockedSource } from './blockedsource.js';\n\nimport { FetchClient } from './client/fetch.js';\nimport { XHRClient } from './client/xhr.js';\nimport { HttpClient } from './client/http.js';\n\nclass RemoteSource extends BaseSource {\n  /**\n   *\n   * @param {BaseClient} client\n   * @param {object} headers\n   * @param {numbers} maxRanges\n   * @param {boolean} allowFullFile\n   */\n  constructor(client, headers, maxRanges, allowFullFile) {\n    super();\n    this.client = client;\n    this.headers = headers;\n    this.maxRanges = maxRanges;\n    this.allowFullFile = allowFullFile;\n    this._fileSize = null;\n  }\n\n  /**\n   *\n   * @param {Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    // if we allow multi-ranges, split the incoming request into that many sub-requests\n    // and join them afterwards\n    if (this.maxRanges >= slices.length) {\n      return this.fetchSlices(slices, signal);\n    } else if (this.maxRanges > 0 && slices.length > 1) {\n      // TODO: split into multiple multi-range requests\n\n      // const subSlicesRequests = [];\n      // for (let i = 0; i < slices.length; i += this.maxRanges) {\n      //   subSlicesRequests.push(\n      //     this.fetchSlices(slices.slice(i, i + this.maxRanges), signal),\n      //   );\n      // }\n      // return (await Promise.all(subSlicesRequests)).flat();\n    }\n\n    // otherwise make a single request for each slice\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  async fetchSlices(slices, signal) {\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${slices\n          .map(({ offset, length }) => `${offset}-${offset + length}`)\n          .join(',')\n        }`,\n      },\n      signal,\n    });\n\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const { type, params } = parseContentType(response.getHeader('content-type'));\n      if (type === 'multipart/byteranges') {\n        const byteRanges = parseByteRanges(await response.getData(), params.boundary);\n        this._fileSize = byteRanges[0].fileSize || null;\n        return byteRanges;\n      }\n\n      const data = await response.getData();\n\n      const { start, end, total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      const first = [{\n        data,\n        offset: start,\n        length: end - start,\n      }];\n\n      if (slices.length > 1) {\n        // we requested more than one slice, but got only the first\n        // unfortunately, some HTTP Servers don't support multi-ranges\n        // and return onyl the first\n\n        // get the rest of the slices and fetch them iteratetively\n        const others = await Promise.all(slices.slice(1).map((slice) => this.fetchSlice(slice, signal)));\n        return first.concat(others);\n      }\n      return first;\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n      const data = await response.getData();\n      this._fileSize = data.byteLength;\n      return [{\n        data,\n        offset: 0,\n        length: data.byteLength,\n      }];\n    }\n  }\n\n  async fetchSlice(slice, signal) {\n    const { offset, length } = slice;\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${offset}-${offset + length}`,\n      },\n      signal,\n    });\n\n    // check the response was okay and if the server actually understands range requests\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const data = await response.getData();\n\n      const { total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      return {\n        data,\n        offset,\n        length,\n      };\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n\n      const data = await response.getData();\n\n      this._fileSize = data.byteLength;\n      return {\n        data,\n        offset: 0,\n        length: data.byteLength,\n      };\n    }\n  }\n\n  get fileSize() {\n    return this._fileSize;\n  }\n}\n\nfunction maybeWrapInBlockedSource(source, { blockSize, cacheSize }) {\n  if (blockSize === null) {\n    return source;\n  }\n  return new BlockedSource(source, blockSize, cacheSize);\n}\n\nexport function makeFetchSource(url, { headers = {}, credentials, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new FetchClient(url, credentials);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeXHRSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new XHRClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeHttpSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new HttpClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\n/**\n *\n * @param {string} url\n * @param {object} options\n */\nexport function makeRemoteSource(url, { forceXHR = false, ...clientOptions } = {}) {\n  if (typeof fetch === 'function' && !forceXHR) {\n    return makeFetchSource(url, clientOptions);\n  }\n  if (typeof XMLHttpRequest !== 'undefined') {\n    return makeXHRSource(url, clientOptions);\n  }\n  return makeHttpSource(url, clientOptions);\n}\n","import { BaseSource } from './basesource.js';\nimport { AbortError } from '../utils.js';\n\nclass ArrayBufferSource extends BaseSource {\n  constructor(arrayBuffer) {\n    super();\n    this.arrayBuffer = arrayBuffer;\n  }\n\n  fetchSlice(slice, signal) {\n    if (signal && signal.aborted) {\n      throw new AbortError('Request aborted');\n    }\n    return this.arrayBuffer.slice(slice.offset, slice.offset + slice.length);\n  }\n}\n\nexport function makeBufferSource(arrayBuffer) {\n  return new ArrayBufferSource(arrayBuffer);\n}\n","import { BaseSource } from './basesource.js';\n\nclass FileReaderSource extends BaseSource {\n  constructor(file) {\n    super();\n    this.file = file;\n  }\n\n  async fetchSlice(slice, signal) {\n    return new Promise((resolve, reject) => {\n      const blob = this.file.slice(slice.offset, slice.offset + slice.length);\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = reject;\n      reader.onabort = reject;\n      reader.readAsArrayBuffer(blob);\n\n      if (signal) {\n        signal.addEventListener('abort', () => reader.abort());\n      }\n    });\n  }\n}\n\n/**\n * Create a new source from a given file/blob.\n * @param {Blob} file The file or blob to read from.\n * @returns The constructed source\n */\nexport function makeFileReaderSource(file) {\n  return new FileReaderSource(file);\n}\n","import fs from 'fs';\nimport { BaseSource } from './basesource.js';\n\nfunction closeAsync(fd) {\n  return new Promise((resolve, reject) => {\n    fs.close(fd, (err) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nfunction openAsync(path, flags, mode = undefined) {\n  return new Promise((resolve, reject) => {\n    fs.open(path, flags, mode, (err, fd) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(fd);\n      }\n    });\n  });\n}\n\nfunction readAsync(...args) {\n  return new Promise((resolve, reject) => {\n    fs.read(...args, (err, bytesRead, buffer) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({ bytesRead, buffer });\n      }\n    });\n  });\n}\n\nclass FileSource extends BaseSource {\n  constructor(path) {\n    super();\n    this.path = path;\n    this.openRequest = openAsync(path, 'r');\n  }\n\n  async fetchSlice(slice) {\n    // TODO: use `signal`\n    const fd = await this.openRequest;\n    const { buffer } = await readAsync(\n      fd,\n      Buffer.alloc(slice.length),\n      0,\n      slice.length,\n      slice.offset,\n    );\n    return buffer.buffer;\n  }\n\n  async close() {\n    const fd = await this.openRequest;\n    await closeAsync(fd);\n  }\n}\n\nexport function makeFileSource(path) {\n  return new FileSource(path);\n}\n","/*\n  Some parts of this file are based on UTIF.js,\n  which was released under the MIT License.\n  You can view that here:\n  https://github.com/photopea/UTIF.js/blob/master/LICENSE\n*/\nimport { fieldTagNames, fieldTagTypes, fieldTypeNames, geoKeyNames } from './globals.js';\nimport { assign, endsWith, forEach, invert, times } from './utils.js';\n\nconst tagName2Code = invert(fieldTagNames);\nconst geoKeyName2Code = invert(geoKeyNames);\nconst name2code = {};\nassign(name2code, tagName2Code);\nassign(name2code, geoKeyName2Code);\nconst typeName2byte = invert(fieldTypeNames);\n\n// config variables\nconst numBytesInIfd = 1000;\n\nconst _binBE = {\n  nextZero: (data, o) => {\n    let oincr = o;\n    while (data[oincr] !== 0) {\n      oincr++;\n    }\n    return oincr;\n  },\n  readUshort: (buff, p) => {\n    return (buff[p] << 8) | buff[p + 1];\n  },\n  readShort: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 1];\n    a[1] = buff[p + 0];\n    return _binBE.i16[0];\n  },\n  readInt: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return _binBE.i32[0];\n  },\n  readUint: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return _binBE.ui32[0];\n  },\n  readASCII: (buff, p, l) => {\n    return l.map((i) => String.fromCharCode(buff[p + i])).join('');\n  },\n  readFloat: (buff, p) => {\n    const a = _binBE.ui8;\n    times(4, (i) => {\n      a[i] = buff[p + 3 - i];\n    });\n    return _binBE.fl32[0];\n  },\n  readDouble: (buff, p) => {\n    const a = _binBE.ui8;\n    times(8, (i) => {\n      a[i] = buff[p + 7 - i];\n    });\n    return _binBE.fl64[0];\n  },\n  writeUshort: (buff, p, n) => {\n    buff[p] = (n >> 8) & 255;\n    buff[p + 1] = n & 255;\n  },\n  writeUint: (buff, p, n) => {\n    buff[p] = (n >> 24) & 255;\n    buff[p + 1] = (n >> 16) & 255;\n    buff[p + 2] = (n >> 8) & 255;\n    buff[p + 3] = (n >> 0) & 255;\n  },\n  writeASCII: (buff, p, s) => {\n    times(s.length, (i) => {\n      buff[p + i] = s.charCodeAt(i);\n    });\n  },\n  ui8: new Uint8Array(8),\n};\n\n_binBE.fl64 = new Float64Array(_binBE.ui8.buffer);\n\n_binBE.writeDouble = (buff, p, n) => {\n  _binBE.fl64[0] = n;\n  times(8, (i) => {\n    buff[p + i] = _binBE.ui8[7 - i];\n  });\n};\n\nconst _writeIFD = (bin, data, _offset, ifd) => {\n  let offset = _offset;\n\n  const keys = Object.keys(ifd).filter((key) => {\n    return key !== undefined && key !== null && key !== 'undefined';\n  });\n\n  bin.writeUshort(data, offset, keys.length);\n  offset += 2;\n\n  let eoff = offset + (12 * keys.length) + 4;\n\n  for (const key of keys) {\n    let tag = null;\n    if (typeof key === 'number') {\n      tag = key;\n    } else if (typeof key === 'string') {\n      tag = parseInt(key, 10);\n    }\n\n    const typeName = fieldTagTypes[tag];\n    const typeNum = typeName2byte[typeName];\n\n    if (typeName == null || typeName === undefined || typeof typeName === 'undefined') {\n      throw new Error(`unknown type of tag: ${tag}`);\n    }\n\n    let val = ifd[key];\n\n    if (val === undefined) {\n      throw new Error(`failed to get value for key ${key}`);\n    }\n\n    // ASCIIZ format with trailing 0 character\n    // http://www.fileformat.info/format/tiff/corion.htm\n    // https://stackoverflow.com/questions/7783044/whats-the-difference-between-asciiz-vs-ascii\n    if (typeName === 'ASCII' && typeof val === 'string' && endsWith(val, '\\u0000') === false) {\n      val += '\\u0000';\n    }\n\n    const num = val.length;\n\n    bin.writeUshort(data, offset, tag);\n    offset += 2;\n\n    bin.writeUshort(data, offset, typeNum);\n    offset += 2;\n\n    bin.writeUint(data, offset, num);\n    offset += 4;\n\n    let dlen = [-1, 1, 1, 2, 4, 8, 0, 0, 0, 0, 0, 0, 8][typeNum] * num;\n    let toff = offset;\n\n    if (dlen > 4) {\n      bin.writeUint(data, offset, eoff);\n      toff = eoff;\n    }\n\n    if (typeName === 'ASCII') {\n      bin.writeASCII(data, toff, val);\n    } else if (typeName === 'SHORT') {\n      times(num, (i) => {\n        bin.writeUshort(data, toff + (2 * i), val[i]);\n      });\n    } else if (typeName === 'LONG') {\n      times(num, (i) => {\n        bin.writeUint(data, toff + (4 * i), val[i]);\n      });\n    } else if (typeName === 'RATIONAL') {\n      times(num, (i) => {\n        bin.writeUint(data, toff + (8 * i), Math.round(val[i] * 10000));\n        bin.writeUint(data, toff + (8 * i) + 4, 10000);\n      });\n    } else if (typeName === 'DOUBLE') {\n      times(num, (i) => {\n        bin.writeDouble(data, toff + (8 * i), val[i]);\n      });\n    }\n\n    if (dlen > 4) {\n      dlen += (dlen & 1);\n      eoff += dlen;\n    }\n\n    offset += 4;\n  }\n\n  return [offset, eoff];\n};\n\nconst encodeIfds = (ifds) => {\n  const data = new Uint8Array(numBytesInIfd);\n  let offset = 4;\n  const bin = _binBE;\n\n  // set big-endian byte-order\n  // https://en.wikipedia.org/wiki/TIFF#Byte_order\n  data[0] = 77;\n  data[1] = 77;\n\n  // set format-version number\n  // https://en.wikipedia.org/wiki/TIFF#Byte_order\n  data[3] = 42;\n\n  let ifdo = 8;\n\n  bin.writeUint(data, offset, ifdo);\n\n  offset += 4;\n\n  ifds.forEach((ifd, i) => {\n    const noffs = _writeIFD(bin, data, ifdo, ifd);\n    ifdo = noffs[1];\n    if (i < ifds.length - 1) {\n      bin.writeUint(data, noffs[0], ifdo);\n    }\n  });\n\n  if (data.slice) {\n    return data.slice(0, ifdo).buffer;\n  }\n\n  // node hasn't implemented slice on Uint8Array yet\n  const result = new Uint8Array(ifdo);\n  for (let i = 0; i < ifdo; i++) {\n    result[i] = data[i];\n  }\n  return result.buffer;\n};\n\nconst encodeImage = (values, width, height, metadata) => {\n  if (height === undefined || height === null) {\n    throw new Error(`you passed into encodeImage a width of type ${height}`);\n  }\n\n  if (width === undefined || width === null) {\n    throw new Error(`you passed into encodeImage a width of type ${width}`);\n  }\n\n  const ifd = {\n    256: [width], // ImageWidth\n    257: [height], // ImageLength\n    273: [numBytesInIfd], // strips offset\n    278: [height], // RowsPerStrip\n    305: 'geotiff.js', // no array for ASCII(Z)\n  };\n\n  if (metadata) {\n    for (const i in metadata) {\n      if (metadata.hasOwnProperty(i)) {\n        ifd[i] = metadata[i];\n      }\n    }\n  }\n\n  const prfx = new Uint8Array(encodeIfds([ifd]));\n\n  const img = new Uint8Array(values);\n\n  const samplesPerPixel = ifd[277];\n\n  const data = new Uint8Array(numBytesInIfd + (width * height * samplesPerPixel));\n  times(prfx.length, (i) => {\n    data[i] = prfx[i];\n  });\n  forEach(img, (value, i) => {\n    data[numBytesInIfd + i] = value;\n  });\n\n  return data.buffer;\n};\n\nconst convertToTids = (input) => {\n  const result = {};\n  for (const key in input) {\n    if (key !== 'StripOffsets') {\n      if (!name2code[key]) {\n        console.error(key, 'not in name2code:', Object.keys(name2code));\n      }\n      result[name2code[key]] = input[key];\n    }\n  }\n  return result;\n};\n\nconst toArray = (input) => {\n  if (Array.isArray(input)) {\n    return input;\n  }\n  return [input];\n};\n\nconst metadataDefaults = [\n  ['Compression', 1], // no compression\n  ['PlanarConfiguration', 1],\n  ['ExtraSamples', 0],\n];\n\nexport function writeGeotiff(data, metadata) {\n  const isFlattened = typeof data[0] === 'number';\n\n  let height;\n  let numBands;\n  let width;\n  let flattenedValues;\n\n  if (isFlattened) {\n    height = metadata.height || metadata.ImageLength;\n    width = metadata.width || metadata.ImageWidth;\n    numBands = data.length / (height * width);\n    flattenedValues = data;\n  } else {\n    numBands = data.length;\n    height = data[0].length;\n    width = data[0][0].length;\n    flattenedValues = [];\n    times(height, (rowIndex) => {\n      times(width, (columnIndex) => {\n        times(numBands, (bandIndex) => {\n          flattenedValues.push(data[bandIndex][rowIndex][columnIndex]);\n        });\n      });\n    });\n  }\n\n  metadata.ImageLength = height;\n  delete metadata.height;\n  metadata.ImageWidth = width;\n  delete metadata.width;\n\n  // consult https://www.loc.gov/preservation/digital/formats/content/tiff_tags.shtml\n\n  if (!metadata.BitsPerSample) {\n    metadata.BitsPerSample = times(numBands, () => 8);\n  }\n\n  metadataDefaults.forEach((tag) => {\n    const key = tag[0];\n    if (!metadata[key]) {\n      const value = tag[1];\n      metadata[key] = value;\n    }\n  });\n\n  // The color space of the image data.\n  // 1=black is zero and 2=RGB.\n  if (!metadata.PhotometricInterpretation) {\n    metadata.PhotometricInterpretation = metadata.BitsPerSample.length === 3 ? 2 : 1;\n  }\n\n  // The number of components per pixel.\n  if (!metadata.SamplesPerPixel) {\n    metadata.SamplesPerPixel = [numBands];\n  }\n\n  if (!metadata.StripByteCounts) {\n    // we are only writing one strip\n    metadata.StripByteCounts = [numBands * height * width];\n  }\n\n  if (!metadata.ModelPixelScale) {\n    // assumes raster takes up exactly the whole globe\n    metadata.ModelPixelScale = [360 / width, 180 / height, 0];\n  }\n\n  if (!metadata.SampleFormat) {\n    metadata.SampleFormat = times(numBands, () => 1);\n  }\n\n  // if didn't pass in projection information, assume the popular 4326 \"geographic projection\"\n  if (!metadata.hasOwnProperty('GeographicTypeGeoKey') && !metadata.hasOwnProperty('ProjectedCSTypeGeoKey')) {\n    metadata.GeographicTypeGeoKey = 4326;\n    metadata.ModelTiepoint = [0, 0, 0, -180, 90, 0]; // raster fits whole globe\n    metadata.GeogCitationGeoKey = 'WGS 84';\n    metadata.GTModelTypeGeoKey = 2;\n  }\n\n  const geoKeys = Object.keys(metadata)\n    .filter((key) => endsWith(key, 'GeoKey'))\n    .sort((a, b) => name2code[a] - name2code[b]);\n\n  if (!metadata.GeoAsciiParams) {\n    let geoAsciiParams = '';\n    geoKeys.forEach((name) => {\n      const code = Number(name2code[name]);\n      const tagType = fieldTagTypes[code];\n      if (tagType === 'ASCII') {\n        geoAsciiParams += `${metadata[name].toString()}\\u0000`;\n      }\n    });\n    if (geoAsciiParams.length > 0) {\n      metadata.GeoAsciiParams = geoAsciiParams;\n    }\n  }\n\n  if (!metadata.GeoKeyDirectory) {\n    const NumberOfKeys = geoKeys.length;\n\n    const GeoKeyDirectory = [1, 1, 0, NumberOfKeys];\n    geoKeys.forEach((geoKey) => {\n      const KeyID = Number(name2code[geoKey]);\n      GeoKeyDirectory.push(KeyID);\n\n      let Count;\n      let TIFFTagLocation;\n      let valueOffset;\n      if (fieldTagTypes[KeyID] === 'SHORT') {\n        Count = 1;\n        TIFFTagLocation = 0;\n        valueOffset = metadata[geoKey];\n      } else if (geoKey === 'GeogCitationGeoKey') {\n        Count = metadata.GeoAsciiParams.length;\n        TIFFTagLocation = Number(name2code.GeoAsciiParams);\n        valueOffset = 0;\n      } else {\n        console.log(`[geotiff.js] couldn't get TIFFTagLocation for ${geoKey}`);\n      }\n      GeoKeyDirectory.push(TIFFTagLocation);\n      GeoKeyDirectory.push(Count);\n      GeoKeyDirectory.push(valueOffset);\n    });\n    metadata.GeoKeyDirectory = GeoKeyDirectory;\n  }\n\n  // delete GeoKeys from metadata, because stored in GeoKeyDirectory tag\n  for (const geoKey in geoKeys) {\n    if (geoKeys.hasOwnProperty(geoKey)) {\n      delete metadata[geoKey];\n    }\n  }\n\n  [\n    'Compression',\n    'ExtraSamples',\n    'GeographicTypeGeoKey',\n    'GTModelTypeGeoKey',\n    'GTRasterTypeGeoKey',\n    'ImageLength', // synonym of ImageHeight\n    'ImageWidth',\n    'Orientation',\n    'PhotometricInterpretation',\n    'ProjectedCSTypeGeoKey',\n    'PlanarConfiguration',\n    'ResolutionUnit',\n    'SamplesPerPixel',\n    'XPosition',\n    'YPosition',\n  ].forEach((name) => {\n    if (metadata[name]) {\n      metadata[name] = toArray(metadata[name]);\n    }\n  });\n\n  const encodedMetadata = convertToTids(metadata);\n\n  const outputImage = encodeImage(flattenedValues, width, height, encodedMetadata);\n\n  return outputImage;\n}\n","/**\n * A no-op logger\n */\nclass DummyLogger {\n  log() {}\n\n  debug() {}\n\n  info() {}\n\n  warn() {}\n\n  error() {}\n\n  time() {}\n\n  timeEnd() {}\n}\n\nlet LOGGER = new DummyLogger();\n\n/**\n *\n * @param {object} logger the new logger. e.g `console`\n */\nexport function setLogger(logger = new DummyLogger()) {\n  LOGGER = logger;\n}\n\nexport function debug(...args) {\n  return LOGGER.debug(...args);\n}\n\nexport function log(...args) {\n  return LOGGER.log(...args);\n}\n\nexport function info(...args) {\n  return LOGGER.info(...args);\n}\n\nexport function warn(...args) {\n  return LOGGER.warn(...args);\n}\n\nexport function error(...args) {\n  return LOGGER.error(...args);\n}\n\nexport function time(...args) {\n  return LOGGER.time(...args);\n}\n\nexport function timeEnd(...args) {\n  return LOGGER.timeEnd(...args);\n}\n","/** @module geotiff */\nimport GeoTIFFImage from './geotiffimage.js';\nimport DataView64 from './dataview64.js';\nimport DataSlice from './dataslice.js';\nimport Pool from './pool.js';\n\nimport { makeRemoteSource } from './source/remote.js';\nimport { makeBufferSource } from './source/arraybuffer.js';\nimport { makeFileReaderSource } from './source/filereader.js';\nimport { makeFileSource } from './source/file.js';\n\nimport { fieldTypes, fieldTagNames, arrayFields, geoKeyNames } from './globals.js';\nimport { writeGeotiff } from './geotiffwriter.js';\nimport * as globals from './globals.js';\nimport * as rgb from './rgb.js';\nimport { getDecoder, addDecoder } from './compression/index.js';\nimport { setLogger } from './logging.js';\n\nexport { globals };\nexport { rgb };\nexport { getDecoder, addDecoder };\nexport { setLogger };\n\n/**\n * @typedef {Uint8Array | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array}\n * TypedArray\n */\n\nfunction getFieldTypeLength(fieldType) {\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.SBYTE: case fieldTypes.UNDEFINED:\n      return 1;\n    case fieldTypes.SHORT: case fieldTypes.SSHORT:\n      return 2;\n    case fieldTypes.LONG: case fieldTypes.SLONG: case fieldTypes.FLOAT: case fieldTypes.IFD:\n      return 4;\n    case fieldTypes.RATIONAL: case fieldTypes.SRATIONAL: case fieldTypes.DOUBLE:\n    case fieldTypes.LONG8: case fieldTypes.SLONG8: case fieldTypes.IFD8:\n      return 8;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n}\n\nfunction parseGeoKeyDirectory(fileDirectory) {\n  const rawGeoKeyDirectory = fileDirectory.GeoKeyDirectory;\n  if (!rawGeoKeyDirectory) {\n    return null;\n  }\n\n  const geoKeyDirectory = {};\n  for (let i = 4; i <= rawGeoKeyDirectory[3] * 4; i += 4) {\n    const key = geoKeyNames[rawGeoKeyDirectory[i]];\n    const location = (rawGeoKeyDirectory[i + 1])\n      ? (fieldTagNames[rawGeoKeyDirectory[i + 1]]) : null;\n    const count = rawGeoKeyDirectory[i + 2];\n    const offset = rawGeoKeyDirectory[i + 3];\n\n    let value = null;\n    if (!location) {\n      value = offset;\n    } else {\n      value = fileDirectory[location];\n      if (typeof value === 'undefined' || value === null) {\n        throw new Error(`Could not get value of geoKey '${key}'.`);\n      } else if (typeof value === 'string') {\n        value = value.substring(offset, offset + count - 1);\n      } else if (value.subarray) {\n        value = value.subarray(offset, offset + count);\n        if (count === 1) {\n          value = value[0];\n        }\n      }\n    }\n    geoKeyDirectory[key] = value;\n  }\n  return geoKeyDirectory;\n}\n\nfunction getValues(dataSlice, fieldType, count, offset) {\n  let values = null;\n  let readMethod = null;\n  const fieldTypeLength = getFieldTypeLength(fieldType);\n\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.UNDEFINED:\n      values = new Uint8Array(count); readMethod = dataSlice.readUint8;\n      break;\n    case fieldTypes.SBYTE:\n      values = new Int8Array(count); readMethod = dataSlice.readInt8;\n      break;\n    case fieldTypes.SHORT:\n      values = new Uint16Array(count); readMethod = dataSlice.readUint16;\n      break;\n    case fieldTypes.SSHORT:\n      values = new Int16Array(count); readMethod = dataSlice.readInt16;\n      break;\n    case fieldTypes.LONG: case fieldTypes.IFD:\n      values = new Uint32Array(count); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SLONG:\n      values = new Int32Array(count); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.LONG8: case fieldTypes.IFD8:\n      values = new Array(count); readMethod = dataSlice.readUint64;\n      break;\n    case fieldTypes.SLONG8:\n      values = new Array(count); readMethod = dataSlice.readInt64;\n      break;\n    case fieldTypes.RATIONAL:\n      values = new Uint32Array(count * 2); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SRATIONAL:\n      values = new Int32Array(count * 2); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.FLOAT:\n      values = new Float32Array(count); readMethod = dataSlice.readFloat32;\n      break;\n    case fieldTypes.DOUBLE:\n      values = new Float64Array(count); readMethod = dataSlice.readFloat64;\n      break;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n\n  // normal fields\n  if (!(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n    for (let i = 0; i < count; ++i) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n    }\n  } else { // RATIONAL or SRATIONAL\n    for (let i = 0; i < count; i += 2) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n      values[i + 1] = readMethod.call(\n        dataSlice, offset + ((i * fieldTypeLength) + 4),\n      );\n    }\n  }\n\n  if (fieldType === fieldTypes.ASCII) {\n    return new TextDecoder('utf-8').decode(values);\n  }\n  return values;\n}\n\n/**\n * Data class to store the parsed file directory, geo key directory and\n * offset to the next IFD\n */\nclass ImageFileDirectory {\n  constructor(fileDirectory, geoKeyDirectory, nextIFDByteOffset) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeyDirectory = geoKeyDirectory;\n    this.nextIFDByteOffset = nextIFDByteOffset;\n  }\n}\n\n/**\n * Error class for cases when an IFD index was requested, that does not exist\n * in the file.\n */\nclass GeoTIFFImageIndexError extends Error {\n  constructor(index) {\n    super(`No image at index ${index}`);\n    this.index = index;\n  }\n}\n\nclass GeoTIFFBase {\n  /**\n   * (experimental) Reads raster data from the best fitting image. This function uses\n   * the image with the lowest resolution that is still a higher resolution than the\n   * requested resolution.\n   * When specified, the `bbox` option is translated to the `window` option and the\n   * `resX` and `resY` to `width` and `height` respectively.\n   * Then, the [readRasters]{@link GeoTIFFImage#readRasters} method of the selected\n   * image is called and the result returned.\n   * @see GeoTIFFImage.readRasters\n   * @param {import('./geotiffimage').ReadRasterOptions} [options={}] optional parameters\n   * @returns {Promise<(TypedArray|TypedArray[])>} the decoded arrays as a promise\n   */\n  async readRasters(options = {}) {\n    const { window: imageWindow, width, height } = options;\n    let { resX, resY, bbox } = options;\n\n    const firstImage = await this.getImage();\n    let usedImage = firstImage;\n    const imageCount = await this.getImageCount();\n    const imgBBox = firstImage.getBoundingBox();\n\n    if (imageWindow && bbox) {\n      throw new Error('Both \"bbox\" and \"window\" passed.');\n    }\n\n    // if width/height is passed, transform it to resolution\n    if (width || height) {\n      // if we have an image window (pixel coordinates), transform it to a BBox\n      // using the origin/resolution of the first image.\n      if (imageWindow) {\n        const [oX, oY] = firstImage.getOrigin();\n        const [rX, rY] = firstImage.getResolution();\n\n        bbox = [\n          oX + (imageWindow[0] * rX),\n          oY + (imageWindow[1] * rY),\n          oX + (imageWindow[2] * rX),\n          oY + (imageWindow[3] * rY),\n        ];\n      }\n\n      // if we have a bbox (or calculated one)\n\n      const usedBBox = bbox || imgBBox;\n\n      if (width) {\n        if (resX) {\n          throw new Error('Both width and resX passed');\n        }\n        resX = (usedBBox[2] - usedBBox[0]) / width;\n      }\n      if (height) {\n        if (resY) {\n          throw new Error('Both width and resY passed');\n        }\n        resY = (usedBBox[3] - usedBBox[1]) / height;\n      }\n    }\n\n    // if resolution is set or calculated, try to get the image with the worst acceptable resolution\n    if (resX || resY) {\n      const allImages = [];\n      for (let i = 0; i < imageCount; ++i) {\n        const image = await this.getImage(i);\n        const { SubfileType: subfileType, NewSubfileType: newSubfileType } = image.fileDirectory;\n        if (i === 0 || subfileType === 2 || newSubfileType & 1) {\n          allImages.push(image);\n        }\n      }\n\n      allImages.sort((a, b) => a.getWidth() - b.getWidth());\n      for (let i = 0; i < allImages.length; ++i) {\n        const image = allImages[i];\n        const imgResX = (imgBBox[2] - imgBBox[0]) / image.getWidth();\n        const imgResY = (imgBBox[3] - imgBBox[1]) / image.getHeight();\n\n        usedImage = image;\n        if ((resX && resX > imgResX) || (resY && resY > imgResY)) {\n          break;\n        }\n      }\n    }\n\n    let wnd = imageWindow;\n    if (bbox) {\n      const [oX, oY] = firstImage.getOrigin();\n      const [imageResX, imageResY] = usedImage.getResolution(firstImage);\n\n      wnd = [\n        Math.round((bbox[0] - oX) / imageResX),\n        Math.round((bbox[1] - oY) / imageResY),\n        Math.round((bbox[2] - oX) / imageResX),\n        Math.round((bbox[3] - oY) / imageResY),\n      ];\n      wnd = [\n        Math.min(wnd[0], wnd[2]),\n        Math.min(wnd[1], wnd[3]),\n        Math.max(wnd[0], wnd[2]),\n        Math.max(wnd[1], wnd[3]),\n      ];\n    }\n\n    return usedImage.readRasters({ ...options, window: wnd });\n  }\n}\n\n/**\n * @typedef {Object} GeoTIFFOptions\n * @property {boolean} [cache=false] whether or not decoded tiles shall be cached.\n */\n\n/**\n * The abstraction for a whole GeoTIFF file.\n * @augments GeoTIFFBase\n */\nclass GeoTIFF extends GeoTIFFBase {\n  /**\n   * @constructor\n   * @param {*} source The datasource to read from.\n   * @param {boolean} littleEndian Whether the image uses little endian.\n   * @param {boolean} bigTiff Whether the image uses bigTIFF conventions.\n   * @param {number} firstIFDOffset The numeric byte-offset from the start of the image\n   *                                to the first IFD.\n   * @param {GeoTIFFOptions} [options] further options.\n   */\n  constructor(source, littleEndian, bigTiff, firstIFDOffset, options = {}) {\n    super();\n    this.source = source;\n    this.littleEndian = littleEndian;\n    this.bigTiff = bigTiff;\n    this.firstIFDOffset = firstIFDOffset;\n    this.cache = options.cache || false;\n    this.ifdRequests = [];\n    this.ghostValues = null;\n  }\n\n  async getSlice(offset, size) {\n    const fallbackSize = this.bigTiff ? 4048 : 1024;\n    return new DataSlice(\n      (await this.source.fetch([{\n        offset,\n        length: typeof size !== 'undefined' ? size : fallbackSize,\n      }]))[0],\n      offset,\n      this.littleEndian,\n      this.bigTiff,\n    );\n  }\n\n  /**\n   * Instructs to parse an image file directory at the given file offset.\n   * As there is no way to ensure that a location is indeed the start of an IFD,\n   * this function must be called with caution (e.g only using the IFD offsets from\n   * the headers or other IFDs).\n   * @param {number} offset the offset to parse the IFD at\n   * @returns {Promise<ImageFileDirectory>} the parsed IFD\n   */\n  async parseFileDirectoryAt(offset) {\n    const entrySize = this.bigTiff ? 20 : 12;\n    const offsetSize = this.bigTiff ? 8 : 2;\n\n    let dataSlice = await this.getSlice(offset);\n    const numDirEntries = this.bigTiff\n      ? dataSlice.readUint64(offset)\n      : dataSlice.readUint16(offset);\n\n    // if the slice does not cover the whole IFD, request a bigger slice, where the\n    // whole IFD fits: num of entries + n x tag length + offset to next IFD\n    const byteSize = (numDirEntries * entrySize) + (this.bigTiff ? 16 : 6);\n    if (!dataSlice.covers(offset, byteSize)) {\n      dataSlice = await this.getSlice(offset, byteSize);\n    }\n\n    const fileDirectory = {};\n\n    // loop over the IFD and create a file directory object\n    let i = offset + (this.bigTiff ? 8 : 2);\n    for (let entryCount = 0; entryCount < numDirEntries; i += entrySize, ++entryCount) {\n      const fieldTag = dataSlice.readUint16(i);\n      const fieldType = dataSlice.readUint16(i + 2);\n      const typeCount = this.bigTiff\n        ? dataSlice.readUint64(i + 4)\n        : dataSlice.readUint32(i + 4);\n\n      let fieldValues;\n      let value;\n      const fieldTypeLength = getFieldTypeLength(fieldType);\n      const valueOffset = i + (this.bigTiff ? 12 : 8);\n\n      // check whether the value is directly encoded in the tag or refers to a\n      // different external byte range\n      if (fieldTypeLength * typeCount <= (this.bigTiff ? 8 : 4)) {\n        fieldValues = getValues(dataSlice, fieldType, typeCount, valueOffset);\n      } else {\n        // resolve the reference to the actual byte range\n        const actualOffset = dataSlice.readOffset(valueOffset);\n        const length = getFieldTypeLength(fieldType) * typeCount;\n\n        // check, whether we actually cover the referenced byte range; if not,\n        // request a new slice of bytes to read from it\n        if (dataSlice.covers(actualOffset, length)) {\n          fieldValues = getValues(dataSlice, fieldType, typeCount, actualOffset);\n        } else {\n          const fieldDataSlice = await this.getSlice(actualOffset, length);\n          fieldValues = getValues(fieldDataSlice, fieldType, typeCount, actualOffset);\n        }\n      }\n\n      // unpack single values from the array\n      if (typeCount === 1 && arrayFields.indexOf(fieldTag) === -1\n        && !(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n        value = fieldValues[0];\n      } else {\n        value = fieldValues;\n      }\n\n      // write the tags value to the file directly\n      fileDirectory[fieldTagNames[fieldTag]] = value;\n    }\n    const geoKeyDirectory = parseGeoKeyDirectory(fileDirectory);\n    const nextIFDByteOffset = dataSlice.readOffset(\n      offset + offsetSize + (entrySize * numDirEntries),\n    );\n\n    return new ImageFileDirectory(\n      fileDirectory,\n      geoKeyDirectory,\n      nextIFDByteOffset,\n    );\n  }\n\n  async requestIFD(index) {\n    // see if we already have that IFD index requested.\n    if (this.ifdRequests[index]) {\n      // attach to an already requested IFD\n      return this.ifdRequests[index];\n    } else if (index === 0) {\n      // special case for index 0\n      this.ifdRequests[index] = this.parseFileDirectoryAt(this.firstIFDOffset);\n      return this.ifdRequests[index];\n    } else if (!this.ifdRequests[index - 1]) {\n      // if the previous IFD was not yet loaded, load that one first\n      // this is the recursive call.\n      try {\n        this.ifdRequests[index - 1] = this.requestIFD(index - 1);\n      } catch (e) {\n        // if the previous one already was an index error, rethrow\n        // with the current index\n        if (e instanceof GeoTIFFImageIndexError) {\n          throw new GeoTIFFImageIndexError(index);\n        }\n        // rethrow anything else\n        throw e;\n      }\n    }\n    // if the previous IFD was loaded, we can finally fetch the one we are interested in.\n    // we need to wrap this in an IIFE, otherwise this.ifdRequests[index] would be delayed\n    this.ifdRequests[index] = (async () => {\n      const previousIfd = await this.ifdRequests[index - 1];\n      if (previousIfd.nextIFDByteOffset === 0) {\n        throw new GeoTIFFImageIndexError(index);\n      }\n      return this.parseFileDirectoryAt(previousIfd.nextIFDByteOffset);\n    })();\n    return this.ifdRequests[index];\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    const ifd = await this.requestIFD(index);\n    return new GeoTIFFImage(\n      ifd.fileDirectory, ifd.geoKeyDirectory,\n      this.dataView, this.littleEndian, this.cache, this.source,\n    );\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    let index = 0;\n    // loop until we run out of IFDs\n    let hasNext = true;\n    while (hasNext) {\n      try {\n        await this.requestIFD(index);\n        ++index;\n      } catch (e) {\n        if (e instanceof GeoTIFFImageIndexError) {\n          hasNext = false;\n        } else {\n          throw e;\n        }\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Get the values of the COG ghost area as a parsed map.\n   * See https://gdal.org/drivers/raster/cog.html#header-ghost-area for reference\n   * @returns {Promise<Object>} the parsed ghost area or null, if no such area was found\n   */\n  async getGhostValues() {\n    const offset = this.bigTiff ? 16 : 8;\n    if (this.ghostValues) {\n      return this.ghostValues;\n    }\n    const detectionString = 'GDAL_STRUCTURAL_METADATA_SIZE=';\n    const heuristicAreaSize = detectionString.length + 100;\n    let slice = await this.getSlice(offset, heuristicAreaSize);\n    if (detectionString === getValues(slice, fieldTypes.ASCII, detectionString.length, offset)) {\n      const valuesString = getValues(slice, fieldTypes.ASCII, heuristicAreaSize, offset);\n      const firstLine = valuesString.split('\\n')[0];\n      const metadataSize = Number(firstLine.split('=')[1].split(' ')[0]) + firstLine.length;\n      if (metadataSize > heuristicAreaSize) {\n        slice = await this.getSlice(offset, metadataSize);\n      }\n      const fullString = getValues(slice, fieldTypes.ASCII, metadataSize, offset);\n      this.ghostValues = {};\n      fullString\n        .split('\\n')\n        .filter((line) => line.length > 0)\n        .map((line) => line.split('='))\n        .forEach(([key, value]) => {\n          this.ghostValues[key] = value;\n        });\n    }\n    return this.ghostValues;\n  }\n\n  /**\n   * Parse a (Geo)TIFF file from the given source.\n   *\n   * @param {*} source The source of data to parse from.\n   * @param {GeoTIFFOptions} [options] Additional options.\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   */\n  static async fromSource(source, options, signal) {\n    const headerData = (await source.fetch([{ offset: 0, length: 1024 }], signal))[0];\n    const dataView = new DataView64(headerData);\n\n    const BOM = dataView.getUint16(0, 0);\n    let littleEndian;\n    if (BOM === 0x4949) {\n      littleEndian = true;\n    } else if (BOM === 0x4D4D) {\n      littleEndian = false;\n    } else {\n      throw new TypeError('Invalid byte order value.');\n    }\n\n    const magicNumber = dataView.getUint16(2, littleEndian);\n    let bigTiff;\n    if (magicNumber === 42) {\n      bigTiff = false;\n    } else if (magicNumber === 43) {\n      bigTiff = true;\n      const offsetByteSize = dataView.getUint16(4, littleEndian);\n      if (offsetByteSize !== 8) {\n        throw new Error('Unsupported offset byte-size.');\n      }\n    } else {\n      throw new TypeError('Invalid magic number.');\n    }\n\n    const firstIFDOffset = bigTiff\n      ? dataView.getUint64(8, littleEndian)\n      : dataView.getUint32(4, littleEndian);\n    return new GeoTIFF(source, littleEndian, bigTiff, firstIFDOffset, options);\n  }\n\n  /**\n   * Closes the underlying file buffer\n   * N.B. After the GeoTIFF has been completely processed it needs\n   * to be closed but only if it has been constructed from a file.\n   */\n  close() {\n    if (typeof this.source.close === 'function') {\n      return this.source.close();\n    }\n    return false;\n  }\n}\n\nexport { GeoTIFF };\nexport default GeoTIFF;\n\n/**\n * Wrapper for GeoTIFF files that have external overviews.\n * @augments GeoTIFFBase\n */\nclass MultiGeoTIFF extends GeoTIFFBase {\n  /**\n   * Construct a new MultiGeoTIFF from a main and several overview files.\n   * @param {GeoTIFF} mainFile The main GeoTIFF file.\n   * @param {GeoTIFF[]} overviewFiles An array of overview files.\n   */\n  constructor(mainFile, overviewFiles) {\n    super();\n    this.mainFile = mainFile;\n    this.overviewFiles = overviewFiles;\n    this.imageFiles = [mainFile].concat(overviewFiles);\n\n    this.fileDirectoriesPerFile = null;\n    this.fileDirectoriesPerFileParsing = null;\n    this.imageCount = null;\n  }\n\n  async parseFileDirectoriesPerFile() {\n    const requests = [this.mainFile.parseFileDirectoryAt(this.mainFile.firstIFDOffset)]\n      .concat(this.overviewFiles.map((file) => file.parseFileDirectoryAt(file.firstIFDOffset)));\n\n    this.fileDirectoriesPerFile = await Promise.all(requests);\n    return this.fileDirectoriesPerFile;\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {number} [index=0] the index of the image to return.\n   * @returns {Promise<GeoTIFFImage>} the image at the given index\n   */\n  async getImage(index = 0) {\n    await this.getImageCount();\n    await this.parseFileDirectoriesPerFile();\n    let visited = 0;\n    let relativeIndex = 0;\n    for (let i = 0; i < this.imageFiles.length; i++) {\n      const imageFile = this.imageFiles[i];\n      for (let ii = 0; ii < this.imageCounts[i]; ii++) {\n        if (index === visited) {\n          const ifd = await imageFile.requestIFD(relativeIndex);\n          return new GeoTIFFImage(\n            ifd.fileDirectory, ifd.geoKeyDirectory,\n            imageFile.dataView, imageFile.littleEndian, imageFile.cache, imageFile.source,\n          );\n        }\n        visited++;\n        relativeIndex++;\n      }\n      relativeIndex = 0;\n    }\n\n    throw new RangeError('Invalid image index');\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Promise<number>} the number of internal subfile images\n   */\n  async getImageCount() {\n    if (this.imageCount !== null) {\n      return this.imageCount;\n    }\n    const requests = [this.mainFile.getImageCount()]\n      .concat(this.overviewFiles.map((file) => file.getImageCount()));\n    this.imageCounts = await Promise.all(requests);\n    this.imageCount = this.imageCounts.reduce((count, ifds) => count + ifds, 0);\n    return this.imageCount;\n  }\n}\n\nexport { MultiGeoTIFF };\n\n/**\n * Creates a new GeoTIFF from a remote URL.\n * @param {string} url The URL to access the image from\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromUrl(url, options = {}, signal) {\n  return GeoTIFF.fromSource(makeRemoteSource(url, options), signal);\n}\n\n/**\n * Construct a new GeoTIFF from an\n * [ArrayBuffer]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer}.\n * @param {ArrayBuffer} arrayBuffer The data to read the file from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromArrayBuffer(arrayBuffer, signal) {\n  return GeoTIFF.fromSource(makeBufferSource(arrayBuffer), signal);\n}\n\n/**\n * Construct a GeoTIFF from a local file path. This uses the node\n * [filesystem API]{@link https://nodejs.org/api/fs.html} and is\n * not available on browsers.\n *\n * N.B. After the GeoTIFF has been completely processed it needs\n * to be closed but only if it has been constructed from a file.\n * @param {string} path The file path to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromFile(path, signal) {\n  return GeoTIFF.fromSource(makeFileSource(path), signal);\n}\n\n/**\n * Construct a GeoTIFF from an HTML\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob} or\n * [File]{@link https://developer.mozilla.org/en-US/docs/Web/API/File}\n * object.\n * @param {Blob|File} blob The Blob or File object to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromBlob(blob, signal) {\n  return GeoTIFF.fromSource(makeFileReaderSource(blob), signal);\n}\n\n/**\n * Construct a MultiGeoTIFF from the given URLs.\n * @param {string} mainUrl The URL for the main file.\n * @param {string[]} overviewUrls An array of URLs for the overview images.\n * @param {Object} [options] Additional options to pass to the source.\n *                           See [makeRemoteSource]{@link module:source.makeRemoteSource}\n *                           for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise<MultiGeoTIFF>} The resulting MultiGeoTIFF file.\n */\nexport async function fromUrls(mainUrl, overviewUrls = [], options = {}, signal) {\n  const mainFile = await GeoTIFF.fromSource(makeRemoteSource(mainUrl, options), signal);\n  const overviewFiles = await Promise.all(\n    overviewUrls.map((url) => GeoTIFF.fromSource(makeRemoteSource(url, options))),\n  );\n\n  return new MultiGeoTIFF(mainFile, overviewFiles);\n}\n\n/**\n * Main creating function for GeoTIFF files.\n * @param {(Array)} array of pixel values\n * @returns {metadata} metadata\n */\nexport function writeArrayBuffer(values, metadata) {\n  return writeGeotiff(values, metadata);\n}\n\nexport { Pool };\nexport { GeoTIFFImage };\n","/**\n * @module ol/source/GeoTIFF\n */\nimport DataTile from './DataTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport {\n  Pool,\n  globals as geotiffGlobals,\n  fromBlob as tiffFromBlob,\n  fromUrl as tiffFromUrl,\n  fromUrls as tiffFromUrls,\n} from 'geotiff';\nimport {\n  Projection,\n  get as getCachedProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from '../proj.js';\nimport {clamp} from '../math.js';\nimport {getCenter, getIntersection} from '../extent.js';\nimport {fromCode as unitsFromCode} from '../proj/Units.js';\n\n/**\n * Determine if an image type is a mask.\n * See https://www.awaresystems.be/imaging/tiff/tifftags/newsubfiletype.html\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} The image is a mask.\n */\nfunction isMask(image) {\n  const fileDirectory = image.fileDirectory;\n  const type = fileDirectory.NewSubfileType || 0;\n  return (type & 4) === 4;\n}\n\n/**\n * @param {true|false|'auto'} preference The convertToRGB option.\n * @param {GeoTIFFImage} image The image.\n * @return {boolean} Use the `image.readRGB()` method.\n */\nfunction readRGB(preference, image) {\n  if (!preference) {\n    return false;\n  }\n  if (preference === true) {\n    return true;\n  }\n  if (image.getSamplesPerPixel() !== 3) {\n    return false;\n  }\n  const interpretation = image.fileDirectory.PhotometricInterpretation;\n  const interpretations = geotiffGlobals.photometricInterpretations;\n  return (\n    interpretation === interpretations.CMYK ||\n    interpretation === interpretations.YCbCr ||\n    interpretation === interpretations.CIELab ||\n    interpretation === interpretations.ICCLab\n  );\n}\n\n/**\n * @typedef {Object} SourceInfo\n * @property {string} [url] URL for the source GeoTIFF.\n * @property {Array<string>} [overviews] List of any overview URLs, only applies if the url parameter is given.\n * @property {Blob} [blob] Blob containing the source GeoTIFF. `blob` and `url` are mutually exclusive.\n * @property {number} [min=0] The minimum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the minimum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [max] The maximum source data value.  Rendered values are scaled from 0 to 1 based on\n * the configured min and max.  If not provided and raster statistics are available, those will be used instead.\n * If neither are available, the maximum for the data type will be used.  To disable this behavior, set\n * the `normalize` option to `false` in the constructor.\n * @property {number} [nodata] Values to discard (overriding any nodata values in the metadata).\n * When provided, an additional alpha band will be added to the data.  Often the GeoTIFF metadata\n * will include information about nodata values, so you should only need to set this property if\n * you find that it is not already extracted from the metadata.\n * @property {Array<number>} [bands] Band numbers to be read from (where the first band is `1`). If not provided, all bands will\n * be read. For example, if a GeoTIFF has blue (1), green (2), red (3), and near-infrared (4) bands, and you only need the\n * near-infrared band, configure `bands: [4]`.\n */\n\n/**\n * @typedef {Object} GeoKeys\n * @property {number} GTModelTypeGeoKey Model type.\n * @property {number} GTRasterTypeGeoKey Raster type.\n * @property {number} GeogAngularUnitsGeoKey Angular units.\n * @property {number} GeogInvFlatteningGeoKey Inverse flattening.\n * @property {number} GeogSemiMajorAxisGeoKey Semi-major axis.\n * @property {number} GeographicTypeGeoKey Geographic coordinate system code.\n * @property {number} ProjLinearUnitsGeoKey Projected linear unit code.\n * @property {number} ProjectedCSTypeGeoKey Projected coordinate system code.\n */\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFF} GeoTIFF\n */\n\n/**\n * @typedef {import(\"geotiff\").MultiGeoTIFF} MultiGeoTIFF\n */\n\n/**\n * @typedef {Object} GDALMetadata\n * @property {string} STATISTICS_MINIMUM The minimum value (as a string).\n * @property {string} STATISTICS_MAXIMUM The maximum value (as a string).\n */\n\nconst STATISTICS_MAXIMUM = 'STATISTICS_MAXIMUM';\nconst STATISTICS_MINIMUM = 'STATISTICS_MINIMUM';\n\n/**\n * @typedef {import(\"geotiff\").GeoTIFFImage} GeoTIFFImage\n */\n\nlet workerPool;\nfunction getWorkerPool() {\n  if (!workerPool) {\n    workerPool = new Pool();\n  }\n  return workerPool;\n}\n\n/**\n * Get the bounding box of an image.  If the image does not have an affine transform,\n * the pixel bounds are returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image bounding box.\n */\nfunction getBoundingBox(image) {\n  try {\n    return image.getBoundingBox();\n  } catch (_) {\n    const fileDirectory = image.fileDirectory;\n    return [0, 0, fileDirectory.ImageWidth, fileDirectory.ImageLength];\n  }\n}\n\n/**\n * Get the origin of an image.  If the image does not have an affine transform,\n * the top-left corner of the pixel bounds is returned.\n * @param {GeoTIFFImage} image The image.\n * @return {Array<number>} The image origin.\n */\nfunction getOrigin(image) {\n  try {\n    return image.getOrigin().slice(0, 2);\n  } catch (_) {\n    return [0, image.fileDirectory.ImageLength];\n  }\n}\n\n/**\n * Get the resolution of an image.  If the image does not have an affine transform,\n * the width of the image is compared with the reference image.\n * @param {GeoTIFFImage} image The image.\n * @param {GeoTIFFImage} referenceImage The reference image.\n * @return {Array<number>} The map x and y units per pixel.\n */\nfunction getResolutions(image, referenceImage) {\n  try {\n    return image.getResolution(referenceImage);\n  } catch (_) {\n    return [\n      referenceImage.fileDirectory.ImageWidth / image.fileDirectory.ImageWidth,\n      referenceImage.fileDirectory.ImageHeight /\n        image.fileDirectory.ImageHeight,\n    ];\n  }\n}\n\n/**\n * @param {GeoTIFFImage} image A GeoTIFF.\n * @return {import(\"../proj/Projection.js\").default} The image projection.\n */\nfunction getProjection(image) {\n  const geoKeys = image.geoKeys;\n  if (!geoKeys) {\n    return null;\n  }\n\n  if (geoKeys.ProjectedCSTypeGeoKey) {\n    const code = 'EPSG:' + geoKeys.ProjectedCSTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.ProjLinearUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  if (geoKeys.GeographicTypeGeoKey) {\n    const code = 'EPSG:' + geoKeys.GeographicTypeGeoKey;\n    let projection = getCachedProjection(code);\n    if (!projection) {\n      const units = unitsFromCode(geoKeys.GeogAngularUnitsGeoKey);\n      if (units) {\n        projection = new Projection({\n          code: code,\n          units: units,\n        });\n      }\n    }\n    return projection;\n  }\n\n  return null;\n}\n\n/**\n * @param {GeoTIFF|MultiGeoTIFF} tiff A GeoTIFF.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForTIFF(tiff) {\n  return tiff.getImageCount().then(function (count) {\n    const requests = new Array(count);\n    for (let i = 0; i < count; ++i) {\n      requests[i] = tiff.getImage(i);\n    }\n    return Promise.all(requests);\n  });\n}\n\n/**\n * @param {SourceInfo} source The GeoTIFF source.\n * @param {Object} options Options for the GeoTIFF source.\n * @return {Promise<Array<GeoTIFFImage>>} Resolves to a list of images.\n */\nfunction getImagesForSource(source, options) {\n  let request;\n  if (source.blob) {\n    request = tiffFromBlob(source.blob);\n  } else if (source.overviews) {\n    request = tiffFromUrls(source.url, source.overviews, options);\n  } else {\n    request = tiffFromUrl(source.url, options);\n  }\n  return request.then(getImagesForTIFF);\n}\n\n/**\n * @param {number|Array<number>|Array<Array<number>>} expected Expected value.\n * @param {number|Array<number>|Array<Array<number>>} got Actual value.\n * @param {number} tolerance Accepted tolerance in fraction of expected between expected and got.\n * @param {string} message The error message.\n * @param {function(Error):void} rejector A function to be called with any error.\n */\nfunction assertEqual(expected, got, tolerance, message, rejector) {\n  if (Array.isArray(expected)) {\n    const length = expected.length;\n    if (!Array.isArray(got) || length != got.length) {\n      const error = new Error(message);\n      rejector(error);\n      throw error;\n    }\n    for (let i = 0; i < length; ++i) {\n      assertEqual(expected[i], got[i], tolerance, message, rejector);\n    }\n    return;\n  }\n\n  got = /** @type {number} */ (got);\n  if (Math.abs(expected - got) > tolerance * expected) {\n    throw new Error(message);\n  }\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The minimum value.\n */\nfunction getMinForDataType(array) {\n  if (array instanceof Int8Array) {\n    return -128;\n  }\n  if (array instanceof Int16Array) {\n    return -32768;\n  }\n  if (array instanceof Int32Array) {\n    return -2147483648;\n  }\n  if (array instanceof Float32Array) {\n    return 1.2e-38;\n  }\n  return 0;\n}\n\n/**\n * @param {Array} array The data array.\n * @return {number} The maximum value.\n */\nfunction getMaxForDataType(array) {\n  if (array instanceof Int8Array) {\n    return 127;\n  }\n  if (array instanceof Uint8Array) {\n    return 255;\n  }\n  if (array instanceof Uint8ClampedArray) {\n    return 255;\n  }\n  if (array instanceof Int16Array) {\n    return 32767;\n  }\n  if (array instanceof Uint16Array) {\n    return 65535;\n  }\n  if (array instanceof Int32Array) {\n    return 2147483647;\n  }\n  if (array instanceof Uint32Array) {\n    return 4294967295;\n  }\n  if (array instanceof Float32Array) {\n    return 3.4e38;\n  }\n  return 255;\n}\n\n/**\n * @typedef {Object} GeoTIFFSourceOptions\n * @property {boolean} [forceXHR=false] Whether to force the usage of the browsers XMLHttpRequest API.\n * @property {Object<string, string>} [headers] additional key-value pairs of headers to be passed with each request. Key is the header name, value the header value.\n * @property {string} [credentials] How credentials shall be handled. See\n * https://developer.mozilla.org/en-US/docs/Web/API/fetch for reference and possible values\n * @property {number} [maxRanges] The maximum amount of ranges to request in a single multi-range request.\n * By default only a single range is used.\n * @property {boolean} [allowFullFile=false] Whether or not a full file is accepted when only a portion is\n * requested. Only use this when you know the source image to be small enough to fit in memory.\n * @property {number} [blockSize=65536] The block size to use.\n * @property {number} [cacheSize=100] The number of blocks that shall be held in a LRU cache.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<SourceInfo>} sources List of information about GeoTIFF sources.\n * Multiple sources can be combined when their resolution sets are equal after applying a scale.\n * The list of sources defines a mapping between input bands as they are read from each GeoTIFF and\n * the output bands that are provided by data tiles. To control which bands to read from each GeoTIFF,\n * use the {@link import(\"./GeoTIFF.js\").SourceInfo bands} property. If, for example, you specify two\n * sources, one with 3 bands and {@link import(\"./GeoTIFF.js\").SourceInfo nodata} configured, and\n * another with 1 band, the resulting data tiles will have 5 bands: 3 from the first source, 1 alpha\n * band from the first source, and 1 band from the second source.\n * @property {GeoTIFFSourceOptions} [sourceOptions] Additional options to be passed to [geotiff.js](https://geotiffjs.github.io/geotiff.js/module-geotiff.html)'s `fromUrl` or `fromUrls` methods.\n * @property {true|false|'auto'} [convertToRGB=false] By default, bands from the sources are read as-is. When\n * reading GeoTIFFs with the purpose of displaying them as RGB images, setting this to `true` will\n * convert other color spaces (YCbCr, CMYK) to RGB.  Setting the option to `'auto'` will make it so CMYK, YCbCr,\n * CIELab, and ICCLab images will automatically be converted to RGB.\n * @property {boolean} [normalize=true] By default, the source data is normalized to values between\n * 0 and 1 with scaling factors based on the raster statistics or `min` and `max` properties of each source.\n * If instead you want to work with the raw values in a style expression, set this to `false`.  Setting this option\n * to `false` will make it so any `min` and `max` properties on sources are ignored.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {boolean} [wrapX=false] Render tiles beyond the tile grid extent.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * the linear interpolation is used to resample the data.  If false, nearest neighbor is used.\n */\n\n/**\n * @classdesc\n * A source for working with GeoTIFF data.\n * **Note for users of the full build**: The `GeoTIFF` source requires the\n * [geotiff.js](https://github.com/geotiffjs/geotiff.js) library to be loaded as well.\n *\n * @api\n */\nclass GeoTIFFSource extends DataTile {\n  /**\n   * @param {Options} options Data tile options.\n   */\n  constructor(options) {\n    super({\n      state: 'loading',\n      tileGrid: null,\n      projection: null,\n      opaque: options.opaque,\n      transition: options.transition,\n      interpolate: options.interpolate !== false,\n      wrapX: options.wrapX,\n    });\n\n    /**\n     * @type {Array<SourceInfo>}\n     * @private\n     */\n    this.sourceInfo_ = options.sources;\n\n    const numSources = this.sourceInfo_.length;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.sourceOptions_ = options.sourceOptions;\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceImagery_ = new Array(numSources);\n\n    /**\n     * @type {Array<Array<GeoTIFFImage>>}\n     * @private\n     */\n    this.sourceMasks_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.resolutionFactors_ = new Array(numSources);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.samplesPerPixel_;\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.nodataValues_;\n\n    /**\n     * @type {Array<Array<GDALMetadata>>}\n     * @private\n     */\n    this.metadata_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.normalize_ = options.normalize !== false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.addAlpha_ = false;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {true|false|'auto'}\n     */\n    this.convertToRGB_ = options.convertToRGB || false;\n\n    this.setKey(this.sourceInfo_.map((source) => source.url).join(','));\n\n    const self = this;\n    const requests = new Array(numSources);\n    for (let i = 0; i < numSources; ++i) {\n      requests[i] = getImagesForSource(\n        this.sourceInfo_[i],\n        this.sourceOptions_\n      );\n    }\n    Promise.all(requests)\n      .then(function (sources) {\n        self.configure_(sources);\n      })\n      .catch(function (error) {\n        console.error(error); // eslint-disable-line no-console\n        self.error_ = error;\n        self.setState('error');\n      });\n  }\n\n  /**\n   * @return {Error} A source loading error. When the source state is `error`, use this function\n   * to get more information about the error. To debug a faulty configuration, you may want to use\n   * a listener like\n   * ```js\n   * geotiffSource.on('change', () => {\n   *   if (geotiffSource.getState() === 'error') {\n   *     console.error(geotiffSource.getError());\n   *   }\n   * });\n   * ```\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Configure the tile grid based on images within the source GeoTIFFs.  Each GeoTIFF\n   * must have the same internal tiled structure.\n   * @param {Array<Array<GeoTIFFImage>>} sources Each source is a list of images\n   * from a single GeoTIFF.\n   * @private\n   */\n  configure_(sources) {\n    let extent;\n    let origin;\n    let commonRenderTileSizes;\n    let commonSourceTileSizes;\n    let resolutions;\n    const samplesPerPixel = new Array(sources.length);\n    const nodataValues = new Array(sources.length);\n    const metadata = new Array(sources.length);\n    let minZoom = 0;\n\n    const sourceCount = sources.length;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const images = [];\n      const masks = [];\n      sources[sourceIndex].forEach((item) => {\n        if (isMask(item)) {\n          masks.push(item);\n        } else {\n          images.push(item);\n        }\n      });\n\n      const imageCount = images.length;\n      if (masks.length > 0 && masks.length !== imageCount) {\n        throw new Error(\n          `Expected one mask per image found ${masks.length} masks and ${imageCount} images`\n        );\n      }\n\n      let sourceExtent;\n      let sourceOrigin;\n      const sourceTileSizes = new Array(imageCount);\n      const renderTileSizes = new Array(imageCount);\n      const sourceResolutions = new Array(imageCount);\n\n      nodataValues[sourceIndex] = new Array(imageCount);\n      metadata[sourceIndex] = new Array(imageCount);\n\n      for (let imageIndex = 0; imageIndex < imageCount; ++imageIndex) {\n        const image = images[imageIndex];\n        const nodataValue = image.getGDALNoData();\n        metadata[sourceIndex][imageIndex] = image.getGDALMetadata(0);\n        nodataValues[sourceIndex][imageIndex] = nodataValue;\n\n        const wantedSamples = this.sourceInfo_[sourceIndex].bands;\n        samplesPerPixel[sourceIndex] = wantedSamples\n          ? wantedSamples.length\n          : image.getSamplesPerPixel();\n        const level = imageCount - (imageIndex + 1);\n\n        if (!sourceExtent) {\n          sourceExtent = getBoundingBox(image);\n        }\n\n        if (!sourceOrigin) {\n          sourceOrigin = getOrigin(image);\n        }\n\n        const imageResolutions = getResolutions(image, images[0]);\n        sourceResolutions[level] = imageResolutions[0];\n\n        const sourceTileSize = [image.getTileWidth(), image.getTileHeight()];\n        sourceTileSizes[level] = sourceTileSize;\n\n        const aspectRatio = imageResolutions[0] / Math.abs(imageResolutions[1]);\n        renderTileSizes[level] = [\n          sourceTileSize[0],\n          sourceTileSize[1] / aspectRatio,\n        ];\n      }\n\n      if (!extent) {\n        extent = sourceExtent;\n      } else {\n        getIntersection(extent, sourceExtent, extent);\n      }\n\n      if (!origin) {\n        origin = sourceOrigin;\n      } else {\n        const message = `Origin mismatch for source ${sourceIndex}, got [${sourceOrigin}] but expected [${origin}]`;\n        assertEqual(origin, sourceOrigin, 0, message, this.viewRejector);\n      }\n\n      if (!resolutions) {\n        resolutions = sourceResolutions;\n        this.resolutionFactors_[sourceIndex] = 1;\n      } else {\n        if (resolutions.length - minZoom > sourceResolutions.length) {\n          minZoom = resolutions.length - sourceResolutions.length;\n        }\n        const resolutionFactor =\n          resolutions[resolutions.length - 1] /\n          sourceResolutions[sourceResolutions.length - 1];\n        this.resolutionFactors_[sourceIndex] = resolutionFactor;\n        const scaledSourceResolutions = sourceResolutions.map(\n          (resolution) => (resolution *= resolutionFactor)\n        );\n        const message = `Resolution mismatch for source ${sourceIndex}, got [${scaledSourceResolutions}] but expected [${resolutions}]`;\n        assertEqual(\n          resolutions.slice(minZoom, resolutions.length),\n          scaledSourceResolutions,\n          0.02,\n          message,\n          this.viewRejector\n        );\n      }\n\n      if (!commonRenderTileSizes) {\n        commonRenderTileSizes = renderTileSizes;\n      } else {\n        assertEqual(\n          commonRenderTileSizes.slice(minZoom, commonRenderTileSizes.length),\n          renderTileSizes,\n          0.01,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      if (!commonSourceTileSizes) {\n        commonSourceTileSizes = sourceTileSizes;\n      } else {\n        assertEqual(\n          commonSourceTileSizes.slice(minZoom, commonSourceTileSizes.length),\n          sourceTileSizes,\n          0,\n          `Tile size mismatch for source ${sourceIndex}`,\n          this.viewRejector\n        );\n      }\n\n      this.sourceImagery_[sourceIndex] = images.reverse();\n      this.sourceMasks_[sourceIndex] = masks.reverse();\n    }\n\n    for (let i = 0, ii = this.sourceImagery_.length; i < ii; ++i) {\n      const sourceImagery = this.sourceImagery_[i];\n      while (sourceImagery.length < resolutions.length) {\n        sourceImagery.unshift(undefined);\n      }\n    }\n\n    if (!this.getProjection()) {\n      const firstSource = sources[0];\n      for (let i = firstSource.length - 1; i >= 0; --i) {\n        const image = firstSource[i];\n        const projection = getProjection(image);\n        if (projection) {\n          this.projection = projection;\n          break;\n        }\n      }\n    }\n\n    this.samplesPerPixel_ = samplesPerPixel;\n    this.nodataValues_ = nodataValues;\n    this.metadata_ = metadata;\n\n    // decide if we need to add an alpha band to handle nodata\n    outer: for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      // option 1: source is configured with a nodata value\n      if (this.sourceInfo_[sourceIndex].nodata !== undefined) {\n        this.addAlpha_ = true;\n        break;\n      }\n      if (this.sourceMasks_[sourceIndex].length) {\n        this.addAlpha_ = true;\n        break;\n      }\n\n      const values = nodataValues[sourceIndex];\n\n      // option 2: check image metadata for limited bands\n      const bands = this.sourceInfo_[sourceIndex].bands;\n      if (bands) {\n        for (let i = 0; i < bands.length; ++i) {\n          if (values[bands[i] - 1] !== null) {\n            this.addAlpha_ = true;\n            break outer;\n          }\n        }\n        continue;\n      }\n\n      // option 3: check image metadata for all bands\n      for (let imageIndex = 0; imageIndex < values.length; ++imageIndex) {\n        if (values[imageIndex] !== null) {\n          this.addAlpha_ = true;\n          break outer;\n        }\n      }\n    }\n\n    let bandCount = this.addAlpha_ ? 1 : 0;\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      bandCount += samplesPerPixel[sourceIndex];\n    }\n    this.bandCount = bandCount;\n\n    const tileGrid = new TileGrid({\n      extent: extent,\n      minZoom: minZoom,\n      origin: origin,\n      resolutions: resolutions,\n      tileSizes: commonRenderTileSizes,\n    });\n\n    this.tileGrid = tileGrid;\n    this.setTileSizes(commonSourceTileSizes);\n\n    this.setLoader(this.loadTile_.bind(this));\n    this.setState('ready');\n\n    let zoom = 0;\n    if (resolutions.length === 1) {\n      resolutions = [resolutions[0] * 2, resolutions[0]];\n      zoom = 1;\n    }\n    this.viewResolver({\n      showFullExtent: true,\n      projection: this.projection,\n      resolutions: resolutions,\n      center: toUserCoordinate(getCenter(extent), this.projection),\n      extent: toUserExtent(extent, this.projection),\n      zoom: zoom,\n    });\n  }\n\n  /**\n   * @param {number} z The z tile index.\n   * @param {number} x The x tile index.\n   * @param {number} y The y tile index.\n   * @return {Promise} The composed tile data.\n   * @private\n   */\n  loadTile_(z, x, y) {\n    const sourceTileSize = this.getTileSize(z);\n    const sourceCount = this.sourceImagery_.length;\n    const requests = new Array(sourceCount * 2);\n    const nodataValues = this.nodataValues_;\n    const sourceInfo = this.sourceInfo_;\n    const pool = getWorkerPool();\n    for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n      const source = sourceInfo[sourceIndex];\n      const resolutionFactor = this.resolutionFactors_[sourceIndex];\n      const pixelBounds = [\n        Math.round(x * (sourceTileSize[0] * resolutionFactor)),\n        Math.round(y * (sourceTileSize[1] * resolutionFactor)),\n        Math.round((x + 1) * (sourceTileSize[0] * resolutionFactor)),\n        Math.round((y + 1) * (sourceTileSize[1] * resolutionFactor)),\n      ];\n      const image = this.sourceImagery_[sourceIndex][z];\n      let samples;\n      if (source.bands) {\n        samples = source.bands.map(function (bandNumber) {\n          return bandNumber - 1;\n        });\n      }\n\n      /** @type {number|Array<number>} */\n      let fillValue;\n      if ('nodata' in source && source.nodata !== null) {\n        fillValue = source.nodata;\n      } else {\n        if (!samples) {\n          fillValue = nodataValues[sourceIndex];\n        } else {\n          fillValue = samples.map(function (sampleIndex) {\n            return nodataValues[sourceIndex][sampleIndex];\n          });\n        }\n      }\n\n      const readOptions = {\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: samples,\n        fillValue: fillValue,\n        pool: pool,\n        interleave: false,\n      };\n      if (readRGB(this.convertToRGB_, image)) {\n        requests[sourceIndex] = image.readRGB(readOptions);\n      } else {\n        requests[sourceIndex] = image.readRasters(readOptions);\n      }\n\n      // requests after `sourceCount` are for mask data (if any)\n      const maskIndex = sourceCount + sourceIndex;\n      const mask = this.sourceMasks_[sourceIndex][z];\n      if (!mask) {\n        requests[maskIndex] = Promise.resolve(null);\n        continue;\n      }\n\n      requests[maskIndex] = mask.readRasters({\n        window: pixelBounds,\n        width: sourceTileSize[0],\n        height: sourceTileSize[1],\n        samples: [0],\n        pool: pool,\n        interleave: false,\n      });\n    }\n\n    return Promise.all(requests)\n      .then(this.composeTile_.bind(this, sourceTileSize))\n      .catch(function (error) {\n        console.error(error); // eslint-disable-line no-console\n        throw error;\n      });\n  }\n\n  /**\n   * @param {import(\"../size.js\").Size} sourceTileSize The source tile size.\n   * @param {Array} sourceSamples The source samples.\n   * @return {import(\"../DataTile.js\").Data} The composed tile data.\n   * @private\n   */\n  composeTile_(sourceTileSize, sourceSamples) {\n    const metadata = this.metadata_;\n    const sourceInfo = this.sourceInfo_;\n    const sourceCount = this.sourceImagery_.length;\n    const bandCount = this.bandCount;\n    const samplesPerPixel = this.samplesPerPixel_;\n    const nodataValues = this.nodataValues_;\n    const normalize = this.normalize_;\n    const addAlpha = this.addAlpha_;\n\n    const pixelCount = sourceTileSize[0] * sourceTileSize[1];\n    const dataLength = pixelCount * bandCount;\n\n    /** @type {Uint8Array|Float32Array} */\n    let data;\n    if (normalize) {\n      data = new Uint8Array(dataLength);\n    } else {\n      data = new Float32Array(dataLength);\n    }\n\n    let dataIndex = 0;\n    for (let pixelIndex = 0; pixelIndex < pixelCount; ++pixelIndex) {\n      let transparent = addAlpha;\n      for (let sourceIndex = 0; sourceIndex < sourceCount; ++sourceIndex) {\n        const source = sourceInfo[sourceIndex];\n\n        let min = source.min;\n        let max = source.max;\n        let gain, bias;\n        if (normalize) {\n          const stats = metadata[sourceIndex][0];\n          if (min === undefined) {\n            if (stats && STATISTICS_MINIMUM in stats) {\n              min = parseFloat(stats[STATISTICS_MINIMUM]);\n            } else {\n              min = getMinForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n          if (max === undefined) {\n            if (stats && STATISTICS_MAXIMUM in stats) {\n              max = parseFloat(stats[STATISTICS_MAXIMUM]);\n            } else {\n              max = getMaxForDataType(sourceSamples[sourceIndex][0]);\n            }\n          }\n\n          gain = 255 / (max - min);\n          bias = -min * gain;\n        }\n\n        for (\n          let sampleIndex = 0;\n          sampleIndex < samplesPerPixel[sourceIndex];\n          ++sampleIndex\n        ) {\n          const sourceValue =\n            sourceSamples[sourceIndex][sampleIndex][pixelIndex];\n\n          let value;\n          if (normalize) {\n            value = clamp(gain * sourceValue + bias, 0, 255);\n          } else {\n            value = sourceValue;\n          }\n\n          if (!addAlpha) {\n            data[dataIndex] = value;\n          } else {\n            let nodata = source.nodata;\n            if (nodata === undefined) {\n              let bandIndex;\n              if (source.bands) {\n                bandIndex = source.bands[sampleIndex] - 1;\n              } else {\n                bandIndex = sampleIndex;\n              }\n              nodata = nodataValues[sourceIndex][bandIndex];\n            }\n\n            const nodataIsNaN = isNaN(nodata);\n            if (\n              (!nodataIsNaN && sourceValue !== nodata) ||\n              (nodataIsNaN && !isNaN(sourceValue))\n            ) {\n              transparent = false;\n              data[dataIndex] = value;\n            }\n          }\n          dataIndex++;\n        }\n        if (!transparent) {\n          const maskIndex = sourceCount + sourceIndex;\n          const mask = sourceSamples[maskIndex];\n          if (mask && !mask[0][pixelIndex]) {\n            transparent = true;\n          }\n        }\n      }\n      if (addAlpha) {\n        if (!transparent) {\n          data[dataIndex] = 255;\n        }\n        dataIndex++;\n      }\n    }\n\n    return data;\n  }\n}\n\n/**\n * Get a promise for view properties based on the source.  Use the result of this function\n * as the `view` option in a map constructor.\n *\n *     const source = new GeoTIFF(options);\n *\n *     const map = new Map({\n *       target: 'map',\n *       layers: [\n *         new TileLayer({\n *           source: source,\n *         }),\n *       ],\n *       view: source.getView(),\n *     });\n *\n * @function\n * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n * @api\n *\n */\nGeoTIFFSource.prototype.getView;\n\nexport default GeoTIFFSource;\n","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport TileState from '../TileState.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {getCenter} from '../extent.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'default' | 'truncated'} TierSizeCalculation\n */\n\nexport class CustomTile extends ImageTile {\n  /**\n   * @param {import(\"../size.js\").Size} tileSize Full tile size.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    tileSize,\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    options\n  ) {\n    super(tileCoord, state, src, crossOrigin, tileLoadFunction, options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = tileSize;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    const image = super.getImage();\n    if (this.state == TileState.LOADED) {\n      const tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} url URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {TierSizeCalculation} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} size Size.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nclass Zoomify extends TileImage {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const size = options.size;\n    const tierSizeCalculation =\n      options.tierSizeCalculation !== undefined\n        ? options.tierSizeCalculation\n        : 'default';\n\n    const tilePixelRatio = options.tilePixelRatio || 1;\n    const imageWidth = size[0];\n    const imageHeight = size[1];\n    const tierSizeInTiles = [];\n    const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    let tileSizeForTierSizeCalculation = tileSize * tilePixelRatio;\n\n    switch (tierSizeCalculation) {\n      case 'default':\n        while (\n          imageWidth > tileSizeForTierSizeCalculation ||\n          imageHeight > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation),\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case 'truncated':\n        let width = imageWidth;\n        let height = imageHeight;\n        while (\n          width > tileSizeForTierSizeCalculation ||\n          height > tileSizeForTierSizeCalculation\n        ) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation),\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default: // Unknown `tierSizeCalculation` configured\n        assert(false, 53);\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    const resolutions = [tilePixelRatio];\n    const tileCountUpToTier = [0];\n    for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(tilePixelRatio << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    const tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: options.extent || [0, -imageHeight, imageWidth, 0],\n      resolutions: resolutions,\n    });\n\n    let url = options.url;\n    if (url && !url.includes('{TileGroup}') && !url.includes('{tileIndex}')) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    const urls = expandUrl(url);\n\n    let tileWidth = tileSize * tilePixelRatio;\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            const tileCoordZ = tileCoord[0];\n            const tileCoordX = tileCoord[1];\n            const tileCoordY = tileCoord[2];\n            const tileIndex =\n              tileCoordX + tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            const tileGroup =\n              ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            const localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup,\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    const tileUrlFunction = createFromTileUrlFunctions(\n      urls.map(createFromTemplate)\n    );\n\n    const ZoomifyTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize * tilePixelRatio)\n    );\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      tilePixelRatio: tilePixelRatio,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition,\n    });\n\n    /**\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection;\n\n    // Server retina tile detection (non-standard):\n    // Try loading the center tile for the highest resolution. If it is not\n    // available, we are dealing with retina tiles, and need to adjust the\n    // tile url calculation.\n    const tileUrl = tileGrid.getTileCoordForCoordAndResolution(\n      getCenter(tileGrid.getExtent()),\n      resolutions[resolutions.length - 1]\n    );\n    const testTileUrl = tileUrlFunction(tileUrl, 1, null);\n    const image = new Image();\n    image.addEventListener(\n      'error',\n      function () {\n        tileWidth = tileSize;\n        this.changed();\n      }.bind(this)\n    );\n    image.src = testTileUrl;\n  }\n}\n\nexport default Zoomify;\n","/**\n * @module ol/format/IIIFInfo\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile|Object<string, number>|TileInfo>>}\n *    ImageInformationResponse\n */\n\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nexport const Versions = {\n  VERSION1: 'version1',\n  VERSION2: 'version2',\n  VERSION3: 'version3',\n};\n\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nconst IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n  'level0': {\n    supports: [],\n    formats: [],\n    qualities: ['native'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['native'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['native', 'color', 'grey', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByDistortedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default', 'bitonal'],\n  },\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n  'level0': {\n    supports: [],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level1': {\n    supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n    formats: ['jpg'],\n    qualities: ['default'],\n  },\n  'level2': {\n    supports: [\n      'regionByPx',\n      'regionSquare',\n      'regionByPct',\n      'sizeByW',\n      'sizeByH',\n      'sizeByPct',\n      'sizeByConfinedWh',\n      'sizeByWh',\n    ],\n    formats: ['jpg', 'png'],\n    qualities: ['default'],\n  },\n};\nIIIF_PROFILE_VALUES['none'] = {\n  'none': {\n    supports: [],\n    formats: [],\n    qualities: [],\n  },\n};\n\nconst COMPLIANCE_VERSION1 =\n  /^https?:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(?:1\\.1\\/)?compliance\\.html#level[0-2]$/;\nconst COMPLIANCE_VERSION2 =\n  /^https?:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](?:\\.json)?$/;\nconst COMPLIANCE_VERSION3 =\n  /(^https?:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](?:\\.json)?$)|(^level[0-2]$)/;\n\nfunction generateVersion1Options(iiifInfo) {\n  let levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n  // Version 1.0 and 1.1 do not require a profile.\n  if (levelProfile === undefined) {\n    levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n  }\n  return {\n    url:\n      iiifInfo.imageInfo['@id'] === undefined\n        ? undefined\n        : iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    supports: levelProfile.supports,\n    formats: [\n      ...levelProfile.formats,\n      iiifInfo.imageInfo.formats === undefined\n        ? []\n        : iiifInfo.imageInfo.formats,\n    ],\n    qualities: [\n      ...levelProfile.qualities,\n      iiifInfo.imageInfo.qualities === undefined\n        ? []\n        : iiifInfo.imageInfo.qualities,\n    ],\n    resolutions: iiifInfo.imageInfo.scale_factors,\n    tileSize:\n      iiifInfo.imageInfo.tile_width !== undefined\n        ? iiifInfo.imageInfo.tile_height !== undefined\n          ? [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height]\n          : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]\n        : iiifInfo.imageInfo.tile_height != undefined\n        ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height]\n        : undefined,\n  };\n}\n\nfunction generateVersion2Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    additionalProfile =\n      Array.isArray(iiifInfo.imageInfo.profile) &&\n      iiifInfo.imageInfo.profile.length > 1,\n    profileSupports =\n      additionalProfile && iiifInfo.imageInfo.profile[1].supports\n        ? iiifInfo.imageInfo.profile[1].supports\n        : [],\n    profileFormats =\n      additionalProfile && iiifInfo.imageInfo.profile[1].formats\n        ? iiifInfo.imageInfo.profile[1].formats\n        : [],\n    profileQualities =\n      additionalProfile && iiifInfo.imageInfo.profile[1].qualities\n        ? iiifInfo.imageInfo.profile[1].qualities\n        : [];\n  return {\n    url: iiifInfo.imageInfo['@id'].replace(/\\/?(?:info\\.json)?$/g, ''),\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height === undefined ? tile.width : tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports: [...levelProfile.supports, ...profileSupports],\n    formats: [...levelProfile.formats, ...profileFormats],\n    qualities: [...levelProfile.qualities, ...profileQualities],\n  };\n}\n\nfunction generateVersion3Options(iiifInfo) {\n  const levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(),\n    formats =\n      iiifInfo.imageInfo.extraFormats === undefined\n        ? levelProfile.formats\n        : [...levelProfile.formats, ...iiifInfo.imageInfo.extraFormats],\n    preferredFormat =\n      iiifInfo.imageInfo.preferredFormats !== undefined &&\n      Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n      iiifInfo.imageInfo.preferredFormats.length > 0\n        ? iiifInfo.imageInfo.preferredFormats\n            .filter(function (format) {\n              return ['jpg', 'png', 'gif'].includes(format);\n            })\n            .reduce(function (acc, format) {\n              return acc === undefined && formats.includes(format)\n                ? format\n                : acc;\n            }, undefined)\n        : undefined;\n  return {\n    url: iiifInfo.imageInfo['id'],\n    sizes:\n      iiifInfo.imageInfo.sizes === undefined\n        ? undefined\n        : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n          }),\n    tileSize:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n              return tile.height;\n            })[0],\n          ],\n    resolutions:\n      iiifInfo.imageInfo.tiles === undefined\n        ? undefined\n        : iiifInfo.imageInfo.tiles.map(function (tile) {\n            return tile.scaleFactors;\n          })[0],\n    supports:\n      iiifInfo.imageInfo.extraFeatures === undefined\n        ? levelProfile.supports\n        : [...levelProfile.supports, ...iiifInfo.imageInfo.extraFeatures],\n    formats: formats,\n    qualities:\n      iiifInfo.imageInfo.extraQualities === undefined\n        ? levelProfile.qualities\n        : [...levelProfile.qualities, ...iiifInfo.imageInfo.extraQualities],\n    preferredFormat: preferredFormat,\n  };\n}\n\nconst versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nclass IIIFInfo {\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   */\n  constructor(imageInfo) {\n    this.setImageInfo(imageInfo);\n  }\n\n  /**\n   * @param {string|ImageInformationResponse} imageInfo\n   * Deserialized image information JSON response object or JSON response as string\n   * @api\n   */\n  setImageInfo(imageInfo) {\n    if (typeof imageInfo == 'string') {\n      this.imageInfo = JSON.parse(imageInfo);\n    } else {\n      this.imageInfo = imageInfo;\n    }\n  }\n\n  /**\n   * @return {Versions} Major IIIF version.\n   * @api\n   */\n  getImageApiVersion() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    let context = this.imageInfo['@context'] || 'ol-no-context';\n    if (typeof context == 'string') {\n      context = [context];\n    }\n    for (let i = 0; i < context.length; i++) {\n      switch (context[i]) {\n        case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        case 'http://iiif.io/api/image/1/context.json':\n          return Versions.VERSION1;\n        case 'http://iiif.io/api/image/2/context.json':\n          return Versions.VERSION2;\n        case 'http://iiif.io/api/image/3/context.json':\n          return Versions.VERSION3;\n        case 'ol-no-context':\n          // Image API 1.0 has no '@context'\n          if (\n            this.getComplianceLevelEntryFromProfile(Versions.VERSION1) &&\n            this.imageInfo.identifier\n          ) {\n            return Versions.VERSION1;\n          }\n          break;\n        default:\n      }\n    }\n    assert(false, 61);\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level as it appears in the IIIF image information\n   * response.\n   */\n  getComplianceLevelEntryFromProfile(version) {\n    if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n      return;\n    }\n    if (version === undefined) {\n      version = this.getImageApiVersion();\n    }\n    switch (version) {\n      case Versions.VERSION1:\n        if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION3:\n        if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n          return this.imageInfo.profile;\n        }\n        break;\n      case Versions.VERSION2:\n        if (\n          typeof this.imageInfo.profile === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile)\n        ) {\n          return this.imageInfo.profile;\n        }\n        if (\n          Array.isArray(this.imageInfo.profile) &&\n          this.imageInfo.profile.length > 0 &&\n          typeof this.imageInfo.profile[0] === 'string' &&\n          COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])\n        ) {\n          return this.imageInfo.profile[0];\n        }\n        break;\n      default:\n    }\n  }\n\n  /**\n   * @param {Versions} version Optional IIIF image API version\n   * @return {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n   */\n  getComplianceLevelFromProfile(version) {\n    const complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n    if (complianceLevel === undefined) {\n      return undefined;\n    }\n    const level = complianceLevel.match(/level[0-2](?:\\.json)?$/g);\n    return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n  }\n\n  /**\n   * @return {SupportedFeatures} Image formats, qualities and region / size calculation\n   * methods that are supported by the IIIF service.\n   */\n  getComplianceLevelSupportedFeatures() {\n    if (this.imageInfo === undefined) {\n      return;\n    }\n    const version = this.getImageApiVersion();\n    const level = this.getComplianceLevelFromProfile(version);\n    if (level === undefined) {\n      return IIIF_PROFILE_VALUES['none']['none'];\n    }\n    return IIIF_PROFILE_VALUES[version][level];\n  }\n\n  /**\n   * @param {PreferredOptions} [preferredOptions] Optional options for preferred format and quality.\n   * @return {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n   * @api\n   */\n  getTileSourceOptions(preferredOptions) {\n    const options = preferredOptions || {},\n      version = this.getImageApiVersion();\n    if (version === undefined) {\n      return;\n    }\n    const imageOptions =\n      version === undefined ? undefined : versionFunctions[version](this);\n    if (imageOptions === undefined) {\n      return;\n    }\n    return {\n      url: imageOptions.url,\n      version: version,\n      size: [this.imageInfo.width, this.imageInfo.height],\n      sizes: imageOptions.sizes,\n      format:\n        options.format !== undefined &&\n        imageOptions.formats.includes(options.format)\n          ? options.format\n          : imageOptions.preferredFormat !== undefined\n          ? imageOptions.preferredFormat\n          : 'jpg',\n      supports: imageOptions.supports,\n      quality:\n        options.quality && imageOptions.qualities.includes(options.quality)\n          ? options.quality\n          : imageOptions.qualities.includes('native')\n          ? 'native'\n          : 'default',\n      resolutions: Array.isArray(imageOptions.resolutions)\n        ? imageOptions.resolutions.sort(function (a, b) {\n            return b - a;\n          })\n        : undefined,\n      tileSize: imageOptions.tileSize,\n    };\n  }\n}\n\nexport default IIIFInfo;\n","/**\n * @module ol/source/IIIF\n */\n\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport {CustomTile} from './Zoomify.js';\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\nimport {Versions} from '../format/IIIFInfo.js';\nimport {assert} from '../asserts.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Size of the cache.\n * @property {null|string} [crossOrigin] The value for the crossOrigin option of the request.\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]] The extent.\n * @property {string} [format='jpg'] Requested image format.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Array<number>} [resolutions] Supported resolutions as given in IIIF 'scaleFactors'\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {Array<import(\"../size.js\").Size>} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio] Tile pixel ratio.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition] Transition.\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image ID.\n * @property {import(\"../format/IIIFInfo.js\").Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\nfunction formatPercentage(percentage) {\n  return percentage.toLocaleString('en', {maximumFractionDigits: 10});\n}\n\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nclass IIIF extends TileImage {\n  /**\n   * @param {Options} [options] Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n   * to parse Image API service information responses into constructor options.\n   * @api\n   */\n  constructor(options) {\n    /**\n     * @type {Partial<Options>}\n     */\n    const partialOptions = options || {};\n\n    let baseUrl = partialOptions.url || '';\n    baseUrl =\n      baseUrl +\n      (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === ''\n        ? ''\n        : '/');\n    const version = partialOptions.version || Versions.VERSION2;\n    const sizes = partialOptions.sizes || [];\n    const size = partialOptions.size;\n    assert(\n      size != undefined &&\n        Array.isArray(size) &&\n        size.length == 2 &&\n        !isNaN(size[0]) &&\n        size[0] > 0 &&\n        !isNaN(size[1]) &&\n        size[1] > 0,\n      60\n    );\n    const width = size[0];\n    const height = size[1];\n    const tileSize = partialOptions.tileSize;\n    const tilePixelRatio = partialOptions.tilePixelRatio || 1;\n    const format = partialOptions.format || 'jpg';\n    const quality =\n      partialOptions.quality ||\n      (partialOptions.version == Versions.VERSION1 ? 'native' : 'default');\n    let resolutions = partialOptions.resolutions || [];\n    const supports = partialOptions.supports || [];\n    const extent = partialOptions.extent || [0, -height, width, 0];\n\n    const supportsListedSizes =\n      sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n    const supportsListedTiles =\n      tileSize !== undefined &&\n      ((typeof tileSize === 'number' &&\n        Number.isInteger(tileSize) &&\n        tileSize > 0) ||\n        (Array.isArray(tileSize) && tileSize.length > 0));\n    const supportsArbitraryTiling =\n      supports != undefined &&\n      Array.isArray(supports) &&\n      (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n      (supports.includes('sizeByWh') ||\n        supports.includes('sizeByH') ||\n        supports.includes('sizeByW') ||\n        supports.includes('sizeByPct'));\n\n    let tileWidth, tileHeight, maxZoom;\n\n    resolutions.sort(function (a, b) {\n      return b - a;\n    });\n\n    if (supportsListedTiles || supportsArbitraryTiling) {\n      if (tileSize != undefined) {\n        if (\n          typeof tileSize === 'number' &&\n          Number.isInteger(tileSize) &&\n          tileSize > 0\n        ) {\n          tileWidth = tileSize;\n          tileHeight = tileSize;\n        } else if (Array.isArray(tileSize) && tileSize.length > 0) {\n          if (\n            tileSize.length == 1 ||\n            (tileSize[1] == undefined && Number.isInteger(tileSize[0]))\n          ) {\n            tileWidth = tileSize[0];\n            tileHeight = tileSize[0];\n          }\n          if (tileSize.length == 2) {\n            if (\n              Number.isInteger(tileSize[0]) &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[0];\n              tileHeight = tileSize[1];\n            } else if (\n              tileSize[0] == undefined &&\n              Number.isInteger(tileSize[1])\n            ) {\n              tileWidth = tileSize[1];\n              tileHeight = tileSize[1];\n            }\n          }\n        }\n      }\n      if (tileWidth === undefined || tileHeight === undefined) {\n        tileWidth = DEFAULT_TILE_SIZE;\n        tileHeight = DEFAULT_TILE_SIZE;\n      }\n      if (resolutions.length == 0) {\n        maxZoom = Math.max(\n          Math.ceil(Math.log(width / tileWidth) / Math.LN2),\n          Math.ceil(Math.log(height / tileHeight) / Math.LN2)\n        );\n        for (let i = maxZoom; i >= 0; i--) {\n          resolutions.push(Math.pow(2, i));\n        }\n      } else {\n        const maxScaleFactor = Math.max(...resolutions);\n        // TODO maxScaleFactor might not be a power to 2\n        maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n      }\n    } else {\n      // No tile support.\n      tileWidth = width;\n      tileHeight = height;\n      resolutions = [];\n      if (supportsListedSizes) {\n        /*\n         * 'sizes' provided. Use full region in different resolutions. Every\n         * resolution has only one tile.\n         */\n        sizes.sort(function (a, b) {\n          return a[0] - b[0];\n        });\n        maxZoom = -1;\n        const ignoredSizesIndex = [];\n        for (let i = 0; i < sizes.length; i++) {\n          const resolution = width / sizes[i][0];\n          if (\n            resolutions.length > 0 &&\n            resolutions[resolutions.length - 1] == resolution\n          ) {\n            ignoredSizesIndex.push(i);\n            continue;\n          }\n          resolutions.push(resolution);\n          maxZoom++;\n        }\n        if (ignoredSizesIndex.length > 0) {\n          for (let i = 0; i < ignoredSizesIndex.length; i++) {\n            sizes.splice(ignoredSizesIndex[i] - i, 1);\n          }\n        }\n      } else {\n        // No useful image information at all. Try pseudo tile with full image.\n        resolutions.push(1);\n        sizes.push([width, height]);\n        maxZoom = 0;\n      }\n    }\n\n    const tileGrid = new TileGrid({\n      tileSize: [tileWidth, tileHeight],\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions,\n    });\n\n    const tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n      let regionParam, sizeParam;\n      const zoom = tileCoord[0];\n      if (zoom > maxZoom) {\n        return;\n      }\n      const tileX = tileCoord[1],\n        tileY = tileCoord[2],\n        scale = resolutions[zoom];\n      if (\n        tileX === undefined ||\n        tileY === undefined ||\n        scale === undefined ||\n        tileX < 0 ||\n        Math.ceil(width / scale / tileWidth) <= tileX ||\n        tileY < 0 ||\n        Math.ceil(height / scale / tileHeight) <= tileY\n      ) {\n        return;\n      }\n      if (supportsArbitraryTiling || supportsListedTiles) {\n        const regionX = tileX * tileWidth * scale,\n          regionY = tileY * tileHeight * scale;\n        let regionW = tileWidth * scale,\n          regionH = tileHeight * scale,\n          sizeW = tileWidth,\n          sizeH = tileHeight;\n        if (regionX + regionW > width) {\n          regionW = width - regionX;\n        }\n        if (regionY + regionH > height) {\n          regionH = height - regionY;\n        }\n        if (regionX + tileWidth * scale > width) {\n          sizeW = Math.floor((width - regionX + scale - 1) / scale);\n        }\n        if (regionY + tileHeight * scale > height) {\n          sizeH = Math.floor((height - regionY + scale - 1) / scale);\n        }\n        if (\n          regionX == 0 &&\n          regionW == width &&\n          regionY == 0 &&\n          regionH == height\n        ) {\n          // canonical full image region parameter is 'full', not 'x,y,w,h'\n          regionParam = 'full';\n        } else if (\n          !supportsArbitraryTiling ||\n          supports.includes('regionByPx')\n        ) {\n          regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n        } else if (supports.includes('regionByPct')) {\n          const pctX = formatPercentage((regionX / width) * 100),\n            pctY = formatPercentage((regionY / height) * 100),\n            pctW = formatPercentage((regionW / width) * 100),\n            pctH = formatPercentage((regionH / height) * 100);\n          regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n        }\n        if (\n          version == Versions.VERSION3 &&\n          (!supportsArbitraryTiling || supports.includes('sizeByWh'))\n        ) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n          sizeParam = sizeW + ',';\n        } else if (supports.includes('sizeByH')) {\n          sizeParam = ',' + sizeH;\n        } else if (supports.includes('sizeByWh')) {\n          sizeParam = sizeW + ',' + sizeH;\n        } else if (supports.includes('sizeByPct')) {\n          sizeParam = 'pct:' + formatPercentage(100 / scale);\n        }\n      } else {\n        regionParam = 'full';\n        if (supportsListedSizes) {\n          const regionWidth = sizes[zoom][0],\n            regionHeight = sizes[zoom][1];\n          if (version == Versions.VERSION3) {\n            if (regionWidth == width && regionHeight == height) {\n              sizeParam = 'max';\n            } else {\n              sizeParam = regionWidth + ',' + regionHeight;\n            }\n          } else {\n            if (regionWidth == width) {\n              sizeParam = 'full';\n            } else {\n              sizeParam = regionWidth + ',';\n            }\n          }\n        } else {\n          sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n        }\n      }\n      return (\n        baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format\n      );\n    };\n\n    const IiifTileClass = CustomTile.bind(\n      null,\n      toSize(tileSize || 256).map(function (size) {\n        return size * tilePixelRatio;\n      })\n    );\n\n    super({\n      attributions: partialOptions.attributions,\n      attributionsCollapsible: partialOptions.attributionsCollapsible,\n      cacheSize: partialOptions.cacheSize,\n      crossOrigin: partialOptions.crossOrigin,\n      interpolate: partialOptions.interpolate,\n      projection: partialOptions.projection,\n      reprojectionErrorThreshold: partialOptions.reprojectionErrorThreshold,\n      state: partialOptions.state,\n      tileClass: IiifTileClass,\n      tileGrid: tileGrid,\n      tilePixelRatio: partialOptions.tilePixelRatio,\n      tileUrlFunction: tileUrlFunction,\n      transition: partialOptions.transition,\n    });\n\n    /**\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = partialOptions.zDirection;\n  }\n}\n\nexport default IIIF;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (\n          this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)\n        ) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection,\n        projection,\n        extent,\n        resolution,\n        pixelRatio,\n        function (extent, resolution, pixelRatio) {\n          return this.getImageInternal(\n            extent,\n            resolution,\n            pixelRatio,\n            sourceProjection\n          );\n        }.bind(this),\n        this.getInterpolate()\n      );\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    extent = extent.slice();\n    const centerX = (extent[0] + extent[2]) / 2;\n    const centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      const halfWidth = (this.ratio_ * getWidth(extent)) / 2;\n      const halfHeight = (this.ratio_ * getHeight(extent)) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    const width = Math.ceil(getWidth(extent) / imageResolution);\n    const height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - (imageResolution * width) / 2;\n    extent[2] = centerX + (imageResolution * width) / 2;\n    extent[1] = centerY - (imageResolution * height) / 2;\n    extent[3] = centerY + (imageResolution * height) / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    const url = this.getRequestUrl_(\n      extent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      extent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    const url = this.url_;\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\nclass ImageCanvas extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {HTMLCanvasElement} canvas Canvas.\n   * @param {Loader} [loader] Optional loader function to\n   *     support asynchronous canvas drawing.\n   */\n  constructor(extent, resolution, pixelRatio, canvas, loader) {\n    const state = loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    super(extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = loader !== undefined ? loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {?Error}\n     */\n    this.error_ = null;\n  }\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {?Error} Any error that occurred during rendering.\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} [err] Any error during drawing.\n   * @private\n   */\n  handleLoad_(err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n}\n\nexport default ImageCanvas;\n","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageSource from './Image.js';\nimport {\n  containsExtent,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the pixel ratio of the map, {@link module:ol/size~Size} the image size,\n * and {@link module:ol/proj/Projection~Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas~ImageCanvasSource}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: {@link import(\"../extent.js\").Extent} the\n * image extent, `{number}` the image resolution, `{number}` the pixel ratio of the map,\n * {@link import(\"../size.js\").Size} the image size, and {@link import(\"../proj/Projection.js\").default} the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./Source.js\").State} [state] Source state.\n */\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nclass ImageCanvasSource extends ImageSource {\n  /**\n   * @param {Options} [options] ImageCanvas options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state,\n    });\n\n    /**\n     * @private\n     * @type {FunctionType}\n     */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n     * @private\n     * @type {import(\"../ImageCanvas.js\").default}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    let canvas = this.canvas_;\n    if (\n      canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)\n    ) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    const canvasElement = this.canvasFunction_.call(\n      this,\n      extent,\n      resolution,\n      pixelRatio,\n      size,\n      projection\n    );\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  }\n}\n\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {appendParams} from '../uri.js';\nimport {\n  containsExtent,\n  getCenter,\n  getHeight,\n  getWidth,\n  scaleFromCenter,\n} from '../extent.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object} [params] Additional parameters.\n */\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageMapGuide extends ImageSource {\n  /**\n   * @param {Options} options ImageMapGuide options.\n   */\n  constructor(options) {\n    super({\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ =\n      options.displayDpi !== undefined ? options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ =\n      options.metersPerUnit !== undefined ? options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ =\n      options.useOverlay !== undefined ? options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    let image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)\n    ) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    const width = getWidth(extent) / resolution;\n    const height = getHeight(extent) / resolution;\n    const size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      const imageUrl = this.getUrl(\n        this.url_,\n        this.params_,\n        extent,\n        size,\n        projection\n      );\n      image = new ImageWrapper(\n        extent,\n        resolution,\n        pixelRatio,\n        imageUrl,\n        this.crossOrigin_,\n        this.imageLoadFunction_\n      );\n      image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this)\n      );\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  getUrl(baseUrl, params, extent, size, projection) {\n    const scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n    const center = getCenter(extent);\n    const baseParams = {\n      'OPERATION': this.useOverlay_\n        ? 'GETDYNAMICMAPOVERLAYIMAGE'\n        : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1],\n    };\n    Object.assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  }\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return (mcsW * metersPerUnit) / (devW * mpp); // width limited\n  } else {\n    return (mcsH * metersPerUnit) / (devH * mpp); // height limited\n  }\n}\n\nexport default ImageMapGuide;\n","/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const extentWidth = getWidth(imageExtent);\n      const extentHeight = getHeight(imageExtent);\n      const xResolution = extentWidth / imageWidth;\n      const yResolution = extentHeight / imageHeight;\n      let targetWidth = imageWidth;\n      let targetHeight = imageHeight;\n      if (xResolution > yResolution) {\n        targetWidth = Math.round(extentWidth / yResolution);\n      } else {\n        targetHeight = Math.round(extentHeight / xResolution);\n      }\n      if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n        const context = createCanvasContext2D(targetWidth, targetHeight);\n        if (!this.getInterpolate()) {\n          context.imageSmoothingEnabled = false;\n        }\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n","/**\n * @module ol/source/wms\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestHeight = ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 8);\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    const extent = frameState.extent;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/source/Raster\n */\nimport Disposable from '../Disposable.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport ImageLayer from '../layer/Image.js';\nimport ImageSource from './Image.js';\nimport Source from './Source.js';\nimport TileLayer from '../layer/Tile.js';\nimport TileQueue from '../TileQueue.js';\nimport TileSource from './Tile.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {create as createTransform} from '../transform.js';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport {getUid} from '../util.js';\n\nlet hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet context;\n\n/**\n * @param {Uint8ClampedArray} data Image data.\n * @param {number} width Number of columns.\n * @param {number} height Number of rows.\n * @return {ImageData} Image data.\n */\nexport function newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  }\n\n  if (!context) {\n    context = document.createElement('canvas').getContext('2d');\n  }\n  const imageData = context.createImageData(width, height);\n  imageData.data.set(data);\n  return imageData;\n}\n\n/**\n * @typedef {Object} MinionData\n * @property {Array<ArrayBuffer>} buffers Array of buffers.\n * @property {Object} meta Operation metadata.\n * @property {boolean} imageOps The operation is an image operation.\n * @property {number} width The width of the image.\n * @property {number} height The height of the image.\n */\n\n/* istanbul ignore next */\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(MinionData):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  let workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function (data) {\n    // bracket notation for minification support\n    const buffers = data['buffers'];\n    const meta = data['meta'];\n    const imageOps = data['imageOps'];\n    const width = data['width'];\n    const height = data['height'];\n\n    const numBuffers = buffers.length;\n    const numBytes = buffers[0].byteLength;\n\n    if (imageOps) {\n      const images = new Array(numBuffers);\n      for (let b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n          new Uint8ClampedArray(buffers[b]),\n          width,\n          height\n        );\n      }\n      const output = operation(images, meta).data;\n      return output.buffer;\n    }\n\n    const output = new Uint8ClampedArray(numBytes);\n    const arrays = new Array(numBuffers);\n    const pixels = new Array(numBuffers);\n    for (let b = 0; b < numBuffers; ++b) {\n      arrays[b] = new Uint8ClampedArray(buffers[b]);\n      pixels[b] = [0, 0, 0, 0];\n    }\n    for (let i = 0; i < numBytes; i += 4) {\n      for (let j = 0; j < numBuffers; ++j) {\n        const array = arrays[j];\n        pixels[j][0] = array[i];\n        pixels[j][1] = array[i + 1];\n        pixels[j][2] = array[i + 2];\n        pixels[j][3] = array[i + 3];\n      }\n      const pixel = operation(pixels, meta);\n      output[i] = pixel[0];\n      output[i + 1] = pixel[1];\n      output[i + 2] = pixel[2];\n      output[i + 3] = pixel[3];\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {ProcessorOptions} config Processor options.\n * @param {function(MessageEvent): void} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  const lib = Object.keys(config.lib || {}).map(function (name) {\n    return 'const ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  const lines = lib.concat([\n    'const __minion__ = (' + createMinion.toString() + ')(',\n    config.operation.toString(),\n    ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  const buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});',\n  ]);\n\n  const worker = new Worker(\n    typeof Blob === 'undefined'\n      ? 'data:text/javascript;base64,' +\n        Buffer.from(lines.join('\\n'), 'binary').toString('base64')\n      : URL.createObjectURL(new Blob(lines, {type: 'text/javascript'}))\n  );\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * @typedef {Object} FauxMessageEvent\n * @property {Object} data Message data.\n */\n\n/**\n * Create a faux worker for running operations.\n * @param {ProcessorOptions} config Configuration.\n * @param {function(FauxMessageEvent): void} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  const minion = createMinion(config.operation);\n  let terminated = false;\n  return {\n    postMessage: function (data) {\n      setTimeout(function () {\n        if (terminated) {\n          return;\n        }\n        onMessage({data: {buffer: minion(data), meta: data['meta']}});\n      }, 0);\n    },\n    terminate: function () {\n      terminated = true;\n    },\n  };\n}\n\n/**\n * @typedef {function(Error, ImageData, (Object|Array<Object>)): void} JobCallback\n */\n\n/**\n * @typedef {Object} Job\n * @property {Object} meta Job metadata.\n * @property {Array<ImageData>} inputs Array of input data.\n * @property {JobCallback} callback Called when the job is complete.\n */\n\n/**\n * @typedef {Object} ProcessorOptions\n * @property {number} threads Number of workers to spawn.\n * @property {Operation} operation The operation.\n * @property {Object<string, Function>} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} queue The number of queued jobs to allow.\n * @property {boolean} [imageOps=false] Pass all the image data to the operation instead of a single pixel.\n */\n\n/**\n * @classdesc\n * A processor runs pixel or image operations in workers.\n */\nexport class Processor extends Disposable {\n  /**\n   * @param {ProcessorOptions} config Configuration.\n   */\n  constructor(config) {\n    super();\n\n    this._imageOps = !!config.imageOps;\n    let threads;\n    if (config.threads === 0) {\n      threads = 0;\n    } else if (this._imageOps) {\n      threads = 1;\n    } else {\n      threads = config.threads || 1;\n    }\n\n    /**\n     * @type {Array<Worker>}\n     */\n    const workers = new Array(threads);\n    if (threads) {\n      for (let i = 0; i < threads; ++i) {\n        workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n      }\n    } else {\n      workers[0] = createFauxWorker(\n        config,\n        this._onWorkerMessage.bind(this, 0)\n      );\n    }\n    this._workers = workers;\n\n    /**\n     * @type {Array<Job>}\n     * @private\n     */\n    this._queue = [];\n\n    this._maxQueueLength = config.queue || Infinity;\n    this._running = 0;\n\n    /**\n     * @type {Object<number, any>}\n     * @private\n     */\n    this._dataLookup = {};\n\n    /**\n     * @type {Job}\n     * @private\n     */\n    this._job = null;\n  }\n\n  /**\n   * Run operation on input data.\n   * @param {Array<ImageData>} inputs Array of image data.\n   * @param {Object} meta A user data object.  This is passed to all operations\n   *     and must be serializable.\n   * @param {function(Error, ImageData, Object): void} callback Called when work\n   *     completes.  The first argument is any error.  The second is the ImageData\n   *     generated by operations.  The third is the user data object.\n   */\n  process(inputs, meta, callback) {\n    this._enqueue({\n      inputs: inputs,\n      meta: meta,\n      callback: callback,\n    });\n    this._dispatch();\n  }\n\n  /**\n   * Add a job to the queue.\n   * @param {Job} job The job.\n   */\n  _enqueue(job) {\n    this._queue.push(job);\n    while (this._queue.length > this._maxQueueLength) {\n      this._queue.shift().callback(null, null);\n    }\n  }\n\n  /**\n   * Dispatch a job.\n   */\n  _dispatch() {\n    if (this._running || this._queue.length === 0) {\n      return;\n    }\n\n    const job = this._queue.shift();\n    this._job = job;\n    const width = job.inputs[0].width;\n    const height = job.inputs[0].height;\n    const buffers = job.inputs.map(function (input) {\n      return input.data.buffer;\n    });\n    const threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage(\n        {\n          buffers: buffers,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        buffers\n      );\n      return;\n    }\n\n    const length = job.inputs[0].data.length;\n    const segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (let i = 0; i < threads; ++i) {\n      const offset = i * segmentLength;\n      const slices = [];\n      for (let j = 0, jj = buffers.length; j < jj; ++j) {\n        slices.push(buffers[j].slice(offset, offset + segmentLength));\n      }\n      this._workers[i].postMessage(\n        {\n          buffers: slices,\n          meta: job.meta,\n          imageOps: this._imageOps,\n          width: width,\n          height: height,\n        },\n        slices\n      );\n    }\n  }\n\n  /**\n   * Handle messages from the worker.\n   * @param {number} index The worker index.\n   * @param {MessageEvent} event The message event.\n   */\n  _onWorkerMessage(index, event) {\n    if (this.disposed) {\n      return;\n    }\n    this._dataLookup[index] = event.data;\n    --this._running;\n    if (this._running === 0) {\n      this._resolveJob();\n    }\n  }\n\n  /**\n   * Resolve a job.  If there are no more worker threads, the processor callback\n   * will be called.\n   */\n  _resolveJob() {\n    const job = this._job;\n    const threads = this._workers.length;\n    let data, meta;\n    if (threads === 1) {\n      data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n      meta = this._dataLookup[0]['meta'];\n    } else {\n      const length = job.inputs[0].data.length;\n      data = new Uint8ClampedArray(length);\n      meta = new Array(threads);\n      const segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (let i = 0; i < threads; ++i) {\n        const buffer = this._dataLookup[i]['buffer'];\n        const offset = i * segmentLength;\n        data.set(new Uint8ClampedArray(buffer), offset);\n        meta[i] = this._dataLookup[i]['meta'];\n      }\n    }\n    this._job = null;\n    this._dataLookup = {};\n    job.callback(\n      null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height),\n      meta\n    );\n    this._dispatch();\n  }\n\n  /**\n   * Terminate all workers associated with the processor.\n   */\n  disposeInternal() {\n    for (let i = 0; i < this._workers.length; ++i) {\n      this._workers[i].terminate();\n    }\n    this._workers.length = 0;\n  }\n}\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData)\n * and should return a single\n * [ImageData](https://developer.mozilla.org/en-US/docs/Web/API/ImageData).\n * The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.  Listeners will receive an event object with\n   * a `data` property that can be used to make data available to operations.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.  Listeners will receive an event object with\n   * a `data` property.  If more than one thread is used, `data` will be an array of\n   * objects.  If a single thread is used, `data` will be a single object.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations',\n};\n\n/**\n * @typedef {'pixel' | 'image'} RasterOperationType\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n */\n\n/**\n * @typedef {import(\"./Image.js\").ImageSourceEventTypes|'beforeoperations'|'afteroperations'} RasterSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster~RasterSource} instances are instances of this\n * type.\n */\nexport class RasterSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Object|Array<Object>} data An object made available to operations.  For \"afteroperations\" evenets\n   * this will be an array of objects if more than one thread is used.\n   */\n  constructor(type, frameState, data) {\n    super(type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Image.js\").ImageSourceEventTypes, import(\"./Image.js\").ImageSourceEvent, Return> &\n *   import(\"../Observable\").OnSignature<RasterSourceEventTypes, RasterSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |RasterSourceEventTypes, Return>} RasterSourceOnSignature\n */\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nclass RasterSource extends ImageSource {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      projection: null,\n    });\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {RasterSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {RasterSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Processor}\n     */\n    this.processor_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ =\n      options.operationType !== undefined ? options.operationType : 'pixel';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    const changed = this.changed.bind(this);\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      this.layers_[i].addEventListener(EventType.CHANGE, changed);\n    }\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function () {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../Map.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      declutterTree: null,\n      extent: null,\n      index: 0,\n      layerIndex: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0,\n      }),\n      viewHints: [],\n      wantedTiles: {},\n      mapId: getUid(this),\n      renderTargets: {},\n    };\n\n    this.setAttributions(function (frameState) {\n      const attributions = [];\n      for (\n        let index = 0, iMax = options.sources.length;\n        index < iMax;\n        ++index\n      ) {\n        const sourceOrLayer = options.sources[index];\n        const source =\n          sourceOrLayer instanceof Source\n            ? sourceOrLayer\n            : sourceOrLayer.getSource();\n        const attributionGetter = source.getAttributions();\n        if (typeof attributionGetter === 'function') {\n          const sourceAttribution = attributionGetter(frameState);\n          attributions.push.apply(attributions, sourceAttribution);\n        }\n      }\n      return attributions.length !== 0 ? attributions : null;\n    });\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n  }\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object} [lib] Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  setOperation(operation, lib) {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n\n    this.processor_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === 'image',\n      queue: 1,\n      lib: lib,\n      threads: this.threads_,\n    });\n    this.changed();\n  }\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../Map.js\").FrameState} The updated frame state.\n   * @private\n   */\n  updateFrameState_(extent, resolution, projection) {\n    const frameState = /** @type {import(\"../Map.js\").FrameState} */ (\n      Object.assign({}, this.frameState_)\n    );\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (\n      Object.assign({}, frameState.viewState)\n    );\n\n    const center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n\n    const viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  }\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  allSourcesReady_() {\n    let ready = true;\n    let source;\n    for (let i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (source.getState() !== 'ready') {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageCanvas.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    const frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      const renderedResolution = this.renderedImageCanvas_.getResolution();\n      const renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (\n        resolution !== renderedResolution ||\n        !equals(extent, renderedExtent)\n      ) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (\n      !this.renderedImageCanvas_ ||\n      this.getRevision() !== this.renderedRevision_\n    ) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  }\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  processSources_() {\n    const frameState = this.requestedFrameState_;\n    const len = this.layers_.length;\n    const imageDatas = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      frameState.layerIndex = i;\n      const imageData = getImageData(this.layers_[i], frameState);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    const data = {};\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data)\n    );\n    this.processor_.process(\n      imageDatas,\n      data,\n      this.onWorkerComplete_.bind(this, frameState)\n    );\n  }\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object|Array<Object>} data The user data (or an array if more than one thread).\n   * @private\n   */\n  onWorkerComplete_(frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    if (\n      resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)\n    ) {\n      return;\n    }\n\n    let context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      const width = Math.round(getWidth(extent) / resolution);\n      const height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(\n        extent,\n        resolution,\n        1,\n        context.canvas\n      );\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(\n      new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data)\n    );\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n  }\n\n  disposeInternal() {\n    if (this.processor_) {\n      this.processor_.dispose();\n    }\n    super.disposeInternal();\n  }\n}\n\n/**\n * Clean up and unregister the worker.\n * @function\n * @api\n */\nRasterSource.prototype.dispose;\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../Map.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n  const renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (width === 0 || height === 0) {\n    return null;\n  }\n  const container = renderer.renderFrame(frameState, null);\n  let element;\n  if (container instanceof HTMLCanvasElement) {\n    element = container;\n  } else {\n    if (container) {\n      element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n      throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n      const context = element.getContext('2d');\n      return context.getImageData(0, 0, width, height);\n    }\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function (layer) {\n    return layer.getLayerState();\n  });\n}\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  const len = sources.length;\n  const layers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  let layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\nexport default RasterSource;\n","/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default Stamen;\n","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nclass TileArcGISRest extends TileImage {\n  /**\n   * @param {Options} [options] Tile ArcGIS Rest options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    // (if there is no numeric portion the entire projection code must\n    // form a valid ArcGIS SpatialReference definition).\n    const srid = projection\n      .getCode()\n      .split(/:(?=\\d+$)/)\n      .pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    const modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.hidpi_ ? pixelRatio : 1;\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && !this.hidpi_) {\n      pixelRatio = 1;\n    }\n\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    // Apply default params and override with user specified values.\n    const baseParams = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See https://mapbox.com/developers/api/.\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nclass TileJSON extends TileImage {\n  /**\n   * @param {Options} options TileJSON options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     * @private\n     */\n    this.tileSize_ = options.tileSize;\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {Config} */ (JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  getTileJSON() {\n    return this.tileJSON_;\n  }\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      tileSize: this.tileSize_,\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] && !this.getAttributions()) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState('ready');\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n}\n\nexport default TileJSON;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION} from './wms.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {buffer as bufferSize, scale as scaleSize, toSize} from '../size.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {modulo} from '../math.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    const z = tileGrid.getZForResolution(resolution, this.zDirection);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        tileResolution\n      );\n      tileExtent = transformExtent(\n        tileExtent,\n        projectionObj,\n        sourceProjectionObj\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(\n    tileCoord,\n    tileSize,\n    tileExtent,\n    pixelRatio,\n    projection,\n    params\n  ) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case 'geoserver':\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case 'mapserver':\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case 'carmentaserver':\n        case 'qgis':\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default: // Unknown `serverType` configured\n          assert(false, 52);\n          break;\n      }\n    }\n\n    const axisOrientation = projection.getAxisOrientation();\n    const bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      let tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (pixelRatio != 1) {\n      tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    Object.assign(baseParams, this.params_);\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileSize,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/source/UTFGrid\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileSource from './Tile.js';\nimport TileState from '../TileState.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {assert} from '../asserts.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport {listenOnce} from '../events.js';\nimport {jsonp as requestJSONP} from '../net.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\nexport class CustomTile extends Tile {\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n  }\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  getImage() {\n    return null;\n  }\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  getData(coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    const xRelative =\n      (coordinate[0] - this.extent_[0]) / (this.extent_[2] - this.extent_[0]);\n    const yRelative =\n      (coordinate[1] - this.extent_[1]) / (this.extent_[3] - this.extent_[1]);\n\n    const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    let code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    let data = null;\n    if (code in this.keys_) {\n      const id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   */\n  forDataAtCoordinate(coordinate, callback, request) {\n    if (this.state == TileState.EMPTY && request === true) {\n      this.state = TileState.IDLE;\n      listenOnce(\n        this,\n        EventType.CHANGE,\n        function (e) {\n          callback(this.getData(coordinate));\n        },\n        this\n      );\n      this.loadInternal_();\n    } else {\n      if (request === true) {\n        setTimeout(\n          function () {\n            callback(this.getData(coordinate));\n          }.bind(this),\n          0\n        );\n      } else {\n        callback(this.getData(coordinate));\n      }\n    }\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * @private\n   */\n  handleError_() {\n    this.state = TileState.ERROR;\n    this.changed();\n  }\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  handleLoad_(json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  loadInternal_() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(\n          this.src_,\n          this.handleLoad_.bind(this),\n          this.handleError_.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {!UTFGridJSON} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleError_();\n  }\n\n  /**\n   */\n  load() {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    } else {\n      this.setState(TileState.EMPTY);\n    }\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: 'loading',\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ =\n      options.preemptive !== undefined ? options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(\n          options.url,\n          this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this)\n        );\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  onXHRLoad_(event) {\n    const client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || (client.status >= 200 && client.status < 300)) {\n      let response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */ (\n          JSON.parse(client.responseText)\n        );\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  onXHRError_(event) {\n    this.handleTileJSONError();\n  }\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  getTemplate() {\n    return this.template_;\n  }\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean} [request] If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  forDataAtCoordinateAndResolution(coordinate, resolution, callback, request) {\n    if (this.tileGrid) {\n      const z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n      const tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = /** @type {!CustomTile} */ (\n        this.getTile(\n          tileCoord[0],\n          tileCoord[1],\n          tileCoord[2],\n          1,\n          this.getProjection()\n        )\n      );\n      tile.forDataAtCoordinate(coordinate, callback, request);\n    } else {\n      if (request === true) {\n        setTimeout(function () {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleTileJSONError() {\n    this.setState('error');\n  }\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  handleTileJSONResponse(tileJSON) {\n    const epsg4326Projection = getProjection('EPSG:4326');\n\n    const sourceProjection = this.getProjection();\n    let extent;\n    if (tileJSON['bounds'] !== undefined) {\n      const transform = getTransformFromProjections(\n        epsg4326Projection,\n        sourceProjection\n      );\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    const gridExtent = extentFromProjection(sourceProjection);\n    const minZoom = tileJSON['minzoom'] || 0;\n    const maxZoom = tileJSON['maxzoom'] || 22;\n    const tileGrid = createXYZ({\n      extent: gridExtent,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    const grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState('error');\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      const attributionExtent = extent !== undefined ? extent : gridExtent;\n      this.setAttributions(function (frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState('ready');\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!CustomTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return this.tileCache.get(tileCoordKey);\n    } else {\n      const tileCoord = [z, x, y];\n      const urlTileCoord = this.getTileCoordForTileUrlFunction(\n        tileCoord,\n        projection\n      );\n      const tileUrl = this.tileUrlFunction_(\n        urlTileCoord,\n        pixelRatio,\n        projection\n      );\n      const tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_\n      );\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UTFGrid;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(\n        extent,\n        sourceZ,\n        function (sourceTileCoord) {\n          empty =\n            empty &&\n            !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n        }.bind(this)\n      );\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport TileGrid from './TileGrid.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight]\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport TileImage from './TileImage.js';\nimport {appendParams} from '../uri.js';\nimport {containsExtent} from '../extent.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions, expandUrl} from '../tileurlfunction.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this))\n      ),\n      key\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': tileCoord[2],\n          };\n          Object.assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == 'KVP') {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        } else {\n          return supportedCRS == config['projection'];\n        }\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326'\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/source\n */\n\nimport LRUCache from './structs/LRUCache.js';\nimport {getIntersection} from './extent.js';\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as DataTile} from './source/DataTile.js';\nexport {default as GeoTIFF} from './source/GeoTIFF.js';\nexport {default as IIIF} from './source/IIIF.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as VectorTile} from './source/VectorTile.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n\n/**\n * Creates a sources function from a tile grid. This function can be used as value for the\n * `sources` property of the {@link module:ol/layer/Layer~Layer} subclasses that support it.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @param {function(import(\"./tilecoord.js\").TileCoord): import(\"./source/Source.js\").default} factory Source factory.\n * This function takes a {@link module:ol/tilecoord~TileCoord} as argument and is expected to return a\n * {@link module:ol/source/Source~Source}. **Note**: The returned sources should have a tile grid with\n * a limited set of resolutions, matching the resolution range of a single zoom level of the pyramid\n * `tileGrid` that `sourcesFromTileGrid` was called with.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./source/Source.js\").default>} Sources function.\n * @api\n */\nexport function sourcesFromTileGrid(tileGrid, factory) {\n  const sourceCache = new LRUCache(32);\n  const tileGridExtent = tileGrid.getExtent();\n  return function (extent, resolution) {\n    sourceCache.expireCache();\n    if (tileGridExtent) {\n      extent = getIntersection(tileGridExtent, extent);\n    }\n    const z = tileGrid.getZForResolution(resolution);\n    const wantedSources = [];\n    tileGrid.forEachTileCoord(extent, z, (tileCoord) => {\n      const key = tileCoord.toString();\n      if (!sourceCache.containsKey(key)) {\n        const source = factory(tileCoord);\n        sourceCache.set(key, source);\n      }\n      wantedSources.push(sourceCache.get(key));\n    });\n    return wantedSources;\n  };\n}\n","//\n// Our custom intro provides a specialized \"define()\" function, called by the\n// AMD modules below, that sets up the worker blob URL and then executes the\n// main module, storing its exported value as 'maplibregl'\n\n// The three \"chunks\" imported here are produced by a first Rollup pass,\n// which outputs them as AMD modules.\n\n// Shared dependencies, i.e.:\n/*\ndefine(['exports'], function (exports) {\n    // Code for all common dependencies\n    // Each module's exports are attached attached to 'exports' (with\n    // names rewritten to avoid collisions, etc.)\n})\n*/\nimport './build/maplibregl/shared';\n\n// Worker and its unique dependencies, i.e.:\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for worker script and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n});\n*/\n// When this wrapper function is passed to our custom define() above,\n// it gets stringified, together with the shared wrapper (using\n// Function.toString()), and the resulting string of code is made into a\n// Blob URL that gets used by the main module to create the web workers.\nimport './build/maplibregl/worker';\n\n// Main module and its unique dependencies\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for main GL JS module and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n    //\n    //  Returns the actual maplibregl (i.e. src/index.js)\n});\n*/\nimport './build/maplibregl/index';\n\nexport default maplibregl;\n","import Layer from 'ol/layer/Layer';\nimport {toDegrees} from 'ol/math';\nimport {toLonLat} from 'ol/proj';\n\nimport maplibregl from 'maplibre-gl';\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, *>} maplibreOptions\n */\n\nexport default class MapLibreLayer extends Layer {\n  /**\n   * @param {Options} options\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.maplibreOptions;\n\n    super(baseOptions);\n\n    const container = document.createElement('div');\n    container.style.position = 'absolute';\n    container.style.width = '100%';\n    container.style.height = '100%';\n\n    this.maplibreMap = new maplibregl.Map(\n      Object.assign({}, options.maplibreOptions, {\n        container: container,\n        attributionControl: false,\n        interactive: false,\n        trackResize: false,\n      })\n    );\n\n    this.applyOpacity_();\n  }\n\n  /**\n   * @param {number} opacity\n   */\n  setOpacity(opacity) {\n    super.setOpacity(opacity);\n    this.applyOpacity_();\n  }\n\n  applyOpacity_() {\n    const canvas = this.maplibreMap.getCanvas();\n    const opacity = this.getOpacity().toString();\n    if (opacity !== canvas.style.opacity) {\n      canvas.style.opacity = opacity;\n    }\n  }\n\n  /**\n   * @param {import('ol/Map').FrameState} frameState\n   * @return {HTMLCanvasElement} canvas\n   */\n  render(frameState) {\n    const viewState = frameState.viewState;\n\n    // adjust view parameters in maplibre\n    this.maplibreMap.jumpTo({\n      center: toLonLat(viewState.center),\n      zoom: viewState.zoom - 1,\n      bearing: toDegrees(-viewState.rotation),\n      animate: false,\n    });\n\n    const maplibreCanvas = this.maplibreMap.getCanvas();\n    if (!maplibreCanvas.isConnected) {\n      // The canvas is not connected to the DOM, request a map rendering at the next animation frame\n      // to set the canvas size.\n      this.getMapInternal().render();\n    } else if (!sameSize(maplibreCanvas, frameState)) {\n      this.maplibreMap.resize();\n    }\n\n    this.maplibreMap.redraw();\n\n    return this.maplibreMap.getContainer();\n  }\n}\n\n/**\n *\n * @param {HTMLCanvasElement} canvas\n * @param {import('ol/Map').FrameState} frameState\n * @return boolean\n */\nfunction sameSize(canvas, frameState) {\n  return (\n    canvas.width === Math.floor(frameState.size[0] * frameState.pixelRatio) ||\n    canvas.height === Math.floor(frameState.size[1] * frameState.pixelRatio)\n  );\n}\n","import 'ol/ol.css';\nimport './style.css';\n\nimport Map from 'ol/Map';\nimport Source from 'ol/source/Source';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport {TileDebug} from 'ol/source';\n\nimport MapLibreLayer from '../src/MapLibreLayer';\n\nwindow.map = new Map({\n  layers: [\n    new MapLibreLayer({\n      maplibreOptions: {\n        style:\n          'https://vectortiles.geo.admin.ch/styles/ch.swisstopo.leichte-basiskarte_world.vt/style.json',\n      },\n      source: new Source({\n        attributions: [\n          '<a href=\"https://www.geo.admin.ch/en/geo-services/geo-services/portrayal-services-web-mapping/vector_tiles_service.html\" target=\"_blank\">© swisstopo</a>',\n        ],\n      }),\n    }),\n    new TileLayer({\n      source: new TileDebug(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [924582, 5950164],\n    zoom: 8,\n  }),\n});\n","function decodeRowAcc(row, stride) {\n  let length = row.length - stride;\n  let offset = 0;\n  do {\n    for (let i = stride; i > 0; i--) {\n      row[offset + stride] += row[offset];\n      offset++;\n    }\n\n    length -= stride;\n  } while (length > 0);\n}\n\nfunction decodeRowFloatingPoint(row, stride, bytesPerSample) {\n  let index = 0;\n  let count = row.length;\n  const wc = count / bytesPerSample;\n\n  while (count > stride) {\n    for (let i = stride; i > 0; --i) {\n      row[index + stride] += row[index];\n      ++index;\n    }\n    count -= stride;\n  }\n\n  const copy = row.slice();\n  for (let i = 0; i < wc; ++i) {\n    for (let b = 0; b < bytesPerSample; ++b) {\n      row[(bytesPerSample * i) + b] = copy[((bytesPerSample - b - 1) * wc) + i];\n    }\n  }\n}\n\nexport function applyPredictor(block, predictor, width, height, bitsPerSample,\n  planarConfiguration) {\n  if (!predictor || predictor === 1) {\n    return block;\n  }\n\n  for (let i = 0; i < bitsPerSample.length; ++i) {\n    if (bitsPerSample[i] % 8 !== 0) {\n      throw new Error('When decoding with predictor, only multiple of 8 bits are supported.');\n    }\n    if (bitsPerSample[i] !== bitsPerSample[0]) {\n      throw new Error('When decoding with predictor, all samples must have the same size.');\n    }\n  }\n\n  const bytesPerSample = bitsPerSample[0] / 8;\n  const stride = planarConfiguration === 2 ? 1 : bitsPerSample.length;\n\n  for (let i = 0; i < height; ++i) {\n    // Last strip will be truncated if height % stripHeight != 0\n    if (i * stride * width * bytesPerSample >= block.byteLength) {\n      break;\n    }\n    let row;\n    if (predictor === 2) { // horizontal prediction\n      switch (bitsPerSample[0]) {\n        case 8:\n          row = new Uint8Array(\n            block, i * stride * width * bytesPerSample, stride * width * bytesPerSample,\n          );\n          break;\n        case 16:\n          row = new Uint16Array(\n            block, i * stride * width * bytesPerSample, stride * width * bytesPerSample / 2,\n          );\n          break;\n        case 32:\n          row = new Uint32Array(\n            block, i * stride * width * bytesPerSample, stride * width * bytesPerSample / 4,\n          );\n          break;\n        default:\n          throw new Error(`Predictor 2 not allowed with ${bitsPerSample[0]} bits per sample.`);\n      }\n      decodeRowAcc(row, stride, bytesPerSample);\n    } else if (predictor === 3) { // horizontal floating point\n      row = new Uint8Array(\n        block, i * stride * width * bytesPerSample, stride * width * bytesPerSample,\n      );\n      decodeRowFloatingPoint(row, stride, bytesPerSample);\n    }\n  }\n  return block;\n}\n","import { applyPredictor } from '../predictor.js';\n\nexport default class BaseDecoder {\n  async decode(fileDirectory, buffer) {\n    const decoded = await this.decodeBlock(buffer);\n    const predictor = fileDirectory.Predictor || 1;\n    if (predictor !== 1) {\n      const isTiled = !fileDirectory.StripOffsets;\n      const tileWidth = isTiled ? fileDirectory.TileWidth : fileDirectory.ImageWidth;\n      const tileHeight = isTiled ? fileDirectory.TileLength : (\n        fileDirectory.RowsPerStrip || fileDirectory.ImageLength\n      );\n      return applyPredictor(\n        decoded, predictor, tileWidth, tileHeight, fileDirectory.BitsPerSample,\n        fileDirectory.PlanarConfiguration,\n      );\n    }\n    return decoded;\n  }\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}