{"mappings":"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","sources":["node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/AssertionError.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/has.js","node_modules/ol/asserts.js","node_modules/ol/transform.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/math.js","node_modules/ol/color.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/render/EventType.js","node_modules/ol/ViewHint.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/View.js","node_modules/ol/layer/Layer.js","node_modules/ol/renderer/Map.js","node_modules/ol/render/Event.js","node_modules/ol/css.js","node_modules/ol/dom.js","node_modules/ol/render/canvas.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileState.js","node_modules/ol/TileQueue.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/KeyCode.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/Kinetic.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/interaction/defaults.js","node_modules/ol/size.js","node_modules/ol/Map.js","node_modules/ol/source/Source.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/ImageState.js","node_modules/ol/renderer/Layer.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/Tile.js","node_modules/ol/Image.js","node_modules/ol/ImageTile.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj.js","node_modules/ol/reproj/Tile.js","node_modules/ol/reproj/common.js","node_modules/ol/TileRange.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/layer/Tile.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/source/TileEventType.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/source/TileDebug.js","node_modules/maplibre-gl/rollup/maplibregl.js","examples/demo.js","src/MapLibreLayer.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.3.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateAndExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateAndExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible in the given view, i.e. within its min/max resolution or zoom and\n   * extent, and `getVisible()` is `true`.\n   * @param {View|import(\"../View.js\").ViewStateAndExtent} view View or {@link import(\"../Map.js\").FrameState}.\n   * @return {boolean} The layer is visible in the current view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    const layerExtent = this.getExtent();\n    return (\n      this.getVisible() &&\n      inView(this.getLayerState(), frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateAndExtent} view View or  {@link import(\"../Map.js\").FrameState}.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateAndExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateAndExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/TileDebug\n */\n\nimport XYZ from './XYZ.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Set to `1` when debugging `VectorTile` sources with a default configuration.\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {string} [template='z:{z} x:{x} y:{y}'] Template for labeling the tiles.\n * Should include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n */\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n * @api\n */\nclass TileDebug extends XYZ {\n  /**\n   * @param {Options} [options] Debug tile options.\n   */\n  constructor(options) {\n    /**\n     * @type {Options}\n     */\n    options = options || {};\n\n    super({\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      zDirection: options.zDirection,\n      url: options.template || 'z:{z} x:{x} y:{y}',\n      tileLoadFunction: (tile, text) => {\n        const z = tile.getTileCoord()[0];\n        const tileSize = toSize(this.tileGrid.getTileSize(z));\n        const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n        context.strokeStyle = 'grey';\n        context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n        context.fillStyle = 'grey';\n        context.strokeStyle = 'white';\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.font = '24px sans-serif';\n        context.lineWidth = 4;\n        context.strokeText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n        context.fillText(text, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n\n        /** @type {import(\"../ImageTile.js\").default} */ (tile).setImage(\n          context.canvas\n        );\n      },\n    });\n  }\n}\n\nexport default TileDebug;\n","//\n// Our custom intro provides a specialized \"define()\" function, called by the\n// AMD modules below, that sets up the worker blob URL and then executes the\n// main module, storing its exported value as 'maplibregl'\n\n// The three \"chunks\" imported here are produced by a first Rollup pass,\n// which outputs them as AMD modules.\n\n// Shared dependencies, i.e.:\n/*\ndefine(['exports'], function (exports) {\n    // Code for all common dependencies\n    // Each module's exports are attached attached to 'exports' (with\n    // names rewritten to avoid collisions, etc.)\n})\n*/\nimport './build/maplibregl/shared';\n\n// Worker and its unique dependencies, i.e.:\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for worker script and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n});\n*/\n// When this wrapper function is passed to our custom define() above,\n// it gets stringified, together with the shared wrapper (using\n// Function.toString()), and the resulting string of code is made into a\n// Blob URL that gets used by the main module to create the web workers.\nimport './build/maplibregl/worker';\n\n// Main module and its unique dependencies\n/*\ndefine(['./shared.js'], function (__shared__js) {\n    //  Code for main GL JS module and its unique dependencies.\n    //  Expects the output of 'shared' module to be passed in as an argument,\n    //  since all references to common deps look like, e.g.,\n    //  __shared__js.shapeText().\n    //\n    //  Returns the actual maplibregl (i.e. src/index.js)\n});\n*/\nimport './build/maplibregl/index';\n\nexport default maplibregl;\n","import 'ol/ol.css';\nimport './style.css';\n\nimport Map from 'ol/Map';\nimport Source from 'ol/source/Source';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport {TileDebug} from 'ol/source';\n\nimport MapLibreLayer from '../src/MapLibreLayer';\n\nwindow.map = new Map({\n  layers: [\n    new MapLibreLayer({\n      maplibreOptions: {\n        style:\n          'https://vectortiles.geo.admin.ch/styles/ch.swisstopo.leichte-basiskarte_world.vt/style.json',\n      },\n      source: new Source({\n        attributions: [\n          '<a href=\"https://www.geo.admin.ch/en/geo-services/geo-services/portrayal-services-web-mapping/vector_tiles_service.html\" target=\"_blank\">© swisstopo</a>',\n        ],\n      }),\n    }),\n    new TileLayer({\n      source: new TileDebug(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [924582, 5950164],\n    zoom: 8,\n  }),\n});\n","import Layer from 'ol/layer/Layer';\nimport {toDegrees} from 'ol/math';\nimport {toLonLat} from 'ol/proj';\n\nimport maplibregl from 'maplibre-gl';\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, *>} maplibreOptions\n */\n\nexport default class MapLibreLayer extends Layer {\n  /**\n   * @param {Options} options\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.maplibreOptions;\n\n    super(baseOptions);\n\n    const container = document.createElement('div');\n    container.style.position = 'absolute';\n    container.style.width = '100%';\n    container.style.height = '100%';\n\n    this.maplibreMap = new maplibregl.Map(\n      Object.assign({}, options.maplibreOptions, {\n        container: container,\n        attributionControl: false,\n        interactive: false,\n        trackResize: false,\n      })\n    );\n\n    this.applyOpacity_();\n  }\n\n  /**\n   * @param {number} opacity\n   */\n  setOpacity(opacity) {\n    super.setOpacity(opacity);\n    this.applyOpacity_();\n  }\n\n  applyOpacity_() {\n    const canvas = this.maplibreMap.getCanvas();\n    const opacity = this.getOpacity().toString();\n    if (opacity !== canvas.style.opacity) {\n      canvas.style.opacity = opacity;\n    }\n  }\n\n  /**\n   * @param {import('ol/Map').FrameState} frameState\n   * @return {HTMLCanvasElement} canvas\n   */\n  render(frameState) {\n    const viewState = frameState.viewState;\n\n    // adjust view parameters in maplibre\n    this.maplibreMap.jumpTo({\n      center: toLonLat(viewState.center),\n      zoom: viewState.zoom - 1,\n      bearing: toDegrees(-viewState.rotation),\n      animate: false,\n    });\n\n    const maplibreCanvas = this.maplibreMap.getCanvas();\n    if (!maplibreCanvas.isConnected) {\n      // The canvas is not connected to the DOM, request a map rendering at the next animation frame\n      // to set the canvas size.\n      this.getMapInternal().render();\n    } else if (!sameSize(maplibreCanvas, frameState)) {\n      this.maplibreMap.resize();\n    }\n\n    this.maplibreMap.redraw();\n\n    return this.maplibreMap.getContainer();\n  }\n}\n\n/**\n *\n * @param {HTMLCanvasElement} canvas\n * @param {import('ol/Map').FrameState} frameState\n * @return boolean\n */\nfunction sameSize(canvas, frameState) {\n  return (\n    canvas.width === Math.floor(frameState.size[0] * frameState.pixelRatio) &&\n    canvas.height === Math.floor(frameState.size[1] * frameState.pixelRatio)\n  );\n}\n"],"names":["$4cea324b0723c9cd$export$2e2bcd8739ae039","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","$9f01d65c1dda3f93$export$2e2bcd8739ae039","PROPERTYCHANGE","$ef5e1f3657a83227$export$2e2bcd8739ae039","disposed","dispose","disposeInternal","$1df1dd3903fcbb54$export$fcb633242ef15540","a","b","$1df1dd3903fcbb54$export$8a3786cc03fdb777","arr","direction","n","length","i","$1df1dd3903fcbb54$export$8b58be045bf06082","data","extension","Array","isArray","$1df1dd3903fcbb54$export$e9bab7fafb253603","arr1","arr2","len1","$1df1dd3903fcbb54$export$efa610630f9e181","func","strict","compare","every","currentVal","index","res","$53963a2347cac215$export$22e23a2304399231","$53963a2347cac215$export$8f11cee4bdc7e668","$53963a2347cac215$export$1cd1943b3a73bbe8","$53963a2347cac215$export$ff83df6f9971435f","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","apply","$23a76d6ace6e2137$export$42ffd38884aecdac","object","property","$23a76d6ace6e2137$export$dd1bc94b04021eeb","$9ec557a58c56a8be$export$2e2bcd8739ae039","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","indexOf","splice","$a3952729b137df84$export$2e2bcd8739ae039","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$3abaddefde16057f$export$63174c828edd6ff8","thisArg","once","bind","originalListener","eventsKey","$3abaddefde16057f$export$8d2a95bc11b44725","$3abaddefde16057f$export$b0a21c8b3c1c921","key","$45c1d02776d412a0$var$Observable","on","onInternal","onceInternal","un","unInternal","revision_","changed","getRevision","len","ol_key","$45c1d02776d412a0$export$b7ef3f8527533384","$45c1d02776d412a0$export$2e2bcd8739ae039","$9e27098ea8c10672$export$817eb92a8194bab0","Error","$9e27098ea8c10672$var$uidCounter_","$9e27098ea8c10672$export$5e82334337e0f204","obj","ol_uid","String","$a3b06908a786060b$export$cf395d7c4a2d5a17","oldValue","$a3b06908a786060b$export$2e2bcd8739ae039","values","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","$c83c101d9203d3d0$var$messages","$c83c101d9203d3d0$var$AssertionError","code","message","name","$c83c101d9203d3d0$export$2e2bcd8739ae039","$97b3cd49b63197b5$export$2e2bcd8739ae039","ADD","REMOVE","$58b02e0cb56a6c79$var$Property","$58b02e0cb56a6c79$export$a87ae6eb2761ec6d","element","$58b02e0cb56a6c79$export$2e2bcd8739ae039","array","options","unique_","unique","array_","assertUnique_","updateLength_","clear","getLength","pop","extend","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","$4e84f99e59630d83$var$ua","navigator","userAgent","toLowerCase","$4e84f99e59630d83$export$8442bdfd18b7b8a6","$4e84f99e59630d83$export$39dfd62a25e0fe93","test","$4e84f99e59630d83$export$76c0a3b101d93136","$4e84f99e59630d83$export$6b83a0446fc26f94","devicePixelRatio","$4e84f99e59630d83$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$4e84f99e59630d83$export$716f8695eedb9bad","Image","decode","$4e84f99e59630d83$export$f751ce96c6c4e4fc","passive","defineProperty","window","error","$0ce7c96f58019e13$export$a7a9523472993e97","assertion","errorCode","$1e4e8ba9fff06d76$export$5635d7ef4b8fee1c","transform","coordinate","x","y","$1e4e8ba9fff06d76$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$1e4e8ba9fff06d76$export$bd70ea2a93c0fa4","det","mat","c","d","e","$1e4e8ba9fff06d76$var$transformStringDiv","$1e4e8ba9fff06d76$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","style","$3144fca69f28b077$export$2e2bcd8739ae039","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","$60d542486e214d53$export$8aceca7c77505534","coordinates","extent","$60d542486e214d53$export$fe201bb3bbe031e9","$60d542486e214d53$export$1f820e3920fa5715","$60d542486e214d53$export$cbe64c389534206f","dx","dy","$60d542486e214d53$export$ac68c24d37ca240f","$60d542486e214d53$export$805bdfd6d6690e97","$60d542486e214d53$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$60d542486e214d53$export$958e3e1a02eac4b6","dest","$60d542486e214d53$export$3e2152b047719fa1","$60d542486e214d53$export$4838bf78d04a9440","$60d542486e214d53$export$e9bab7fafb253603","extent1","extent2","$60d542486e214d53$export$30570204156ffd18","flatCoordinates","offset","end","stride","$60d542486e214d53$export$f1dab130b92b85a9","min","max","$60d542486e214d53$export$f9ed8a3d123a08e2","callback","val","$60d542486e214d53$export$8d09f5e2e1bf560d","$60d542486e214d53$export$e77c1cf70445e168","$60d542486e214d53$export$b84fa077c8b05295","$60d542486e214d53$export$cb1538b07e6964ff","$60d542486e214d53$export$520c40045967cb15","area","$60d542486e214d53$export$dd1bc94b04021eeb","$60d542486e214d53$export$3c49c185de0c2bfc","$60d542486e214d53$export$c08559766941f856","$60d542486e214d53$export$c91255cadecfe081","$60d542486e214d53$export$a1cfd206661d0801","corner","$60d542486e214d53$export$13ba650faf8308","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","$60d542486e214d53$export$4b7a6fb4002cd6ac","cosRotation","sinRotation","xCos","xSin","yCos","ySin","$60d542486e214d53$export$72209efa88586d42","intersection","$60d542486e214d53$export$7b0a31e10bbff018","$60d542486e214d53$export$6a4fe494c558c238","$60d542486e214d53$export$a6a5a7a461419425","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$60d542486e214d53$export$9f9dcb98c894b623","transformFn","stops","width","height","xs","ys","l","$60d542486e214d53$var$_boundingExtentXYs","$438ea497bc13cc1e$export$7d15b64cf5a3a4c4","$438ea497bc13cc1e$export$251bb0a9cef172e6","t","$438ea497bc13cc1e$export$88e6ebb4fe54f538","$438ea497bc13cc1e$export$8240f01c446270e6","maxRow","maxEl","abs","r","absValue","tmp","j","coef","k","m","$438ea497bc13cc1e$export$56cb859c01fa134d","angleInRadians","PI","$438ea497bc13cc1e$export$cba01ba138429a1d","angleInDegrees","$438ea497bc13cc1e$export$ba467bec01d66def","$438ea497bc13cc1e$export$3a89f8d6f6bf6c9f","$438ea497bc13cc1e$export$a81f732198733497","decimals","factor","pow","round","$438ea497bc13cc1e$export$a3fe094919f356fd","floor","$438ea497bc13cc1e$export$803ce6b71a0a94b2","ceil","$df1a1b6d7b9223c3$var$HEX_COLOR_RE_","$df1a1b6d7b9223c3$var$NAMED_COLOR_RE_","$df1a1b6d7b9223c3$export$590567be997858b6","color","g","$df1a1b6d7b9223c3$export$f84e8e69fd4488a5","$df1a1b6d7b9223c3$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","$df1a1b6d7b9223c3$export$3004f64547af360e","cache","cacheSize","s","exec","hasAlpha","parseInt","substr","startsWith","split","map","Number","$df1a1b6d7b9223c3$export$a3295358bff77e","$df1a1b6d7b9223c3$var$fromStringInternal_","$df1a1b6d7b9223c3$export$75093a47a9fa838d","$cd9d65196d1c1ee2$var$IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","$cd9d65196d1c1ee2$var$getKey","setSize","maxCacheSize","$cd9d65196d1c1ee2$export$747ccdf771a87ab8","$fcca104d4b0d1d08$export$2e2bcd8739ae039","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","$e7223ad9ccec3c6d$export$2e2bcd8739ae039","background_","background","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$03d3694ec02b5fa8$export$2e2bcd8739ae039","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","$63b56e693bdbc147$export$2e2bcd8739ae039","ANIMATING","INTERACTING","$f2c9d3bc93b20a66$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$a834f23712e41c98$export$e98a216cdcc847dc","$a834f23712e41c98$export$6b8cb5cd370bd90c","$d018f684e09fa42b$export$1482081eec883108","radians","degrees","ft","$7f073b90307ff157$export$2e2bcd8739ae039","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","$1af8f159d42a7363$export$2d2c9be8b5b863f","$1af8f159d42a7363$export$f3928063e5e96d35","$1af8f159d42a7363$export$21e6da8a7375dfe8","$1af8f159d42a7363$export$ae9d6ed80df710e5","$1af8f159d42a7363$export$d26945d1ad52feeb","log","tan","$1af8f159d42a7363$var$EPSG3857Projection","point","cosh","$1af8f159d42a7363$export$b508d7ad9a891c1b","$1af8f159d42a7363$export$1ff8bb36c0983070","input","output","dimension","$1af8f159d42a7363$export$8c71322ec28ed6b4","atan","exp","$ab134d74b4ed933f$export$21e6da8a7375dfe8","$ab134d74b4ed933f$export$1482081eec883108","$ab134d74b4ed933f$var$EPSG4326Projection","$ab134d74b4ed933f$export$b508d7ad9a891c1b","$f4be2c7981b0e865$var$cache","$f4be2c7981b0e865$export$e16d8520af44a096","projection","$b90cc87e04c42c15$var$transforms","$b90cc87e04c42c15$export$e16d8520af44a096","destination","sourceCode","destinationCode","$b90cc87e04c42c15$export$3988ae62b71be9a3","$0f9a19f6df542211$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$0f9a19f6df542211$export$bb628a54ab399bc9","cosAngle","sinAngle","$0f9a19f6df542211$export$39a9ce3624977b84","worldWidth","worldsAway","$0f9a19f6df542211$export$24e2b27d1ff0c1d5","sourceExtentWidth","projectionExtent","$a008c03badd3e38c$export$63f2df7bd7371262","$a008c03badd3e38c$export$79376507b09a66f","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$c86a5ae29c093906$var$levels","info","warn","none","$c86a5ae29c093906$var$level","$c86a5ae29c093906$export$c106dd0671a0fc2d","args","console","$7485cecd1db6d1e2$var$showCoordinateWarning","$7485cecd1db6d1e2$export$ed949affbc7c4223","disable","$7485cecd1db6d1e2$export$dd516654c5f598fb","$7485cecd1db6d1e2$export$83e8ab53904f8022","$7485cecd1db6d1e2$export$59ae956cd3e343f7","$7485cecd1db6d1e2$export$3988ae62b71be9a3","projectionLike","replace","$7485cecd1db6d1e2$export$2d8f7b4eec383d44","pointResolution","getter","projUnits","toEPSG4326","$7485cecd1db6d1e2$export$e3c4995a701c26a3","vertices","$7485cecd1db6d1e2$export$eeb8392580a05a37","projections","$7485cecd1db6d1e2$export$638ad73f7aafb913","$7485cecd1db6d1e2$export$549167224996a0fb","defaultCode","$7485cecd1db6d1e2$export$3fb495868742d370","lonLat","$7485cecd1db6d1e2$export$51186ad6e864892a","lon","$7485cecd1db6d1e2$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$7485cecd1db6d1e2$export$fce0c6cfca85ed96","$7485cecd1db6d1e2$export$751c68e0e0efff79","$7485cecd1db6d1e2$var$userProjection","$7485cecd1db6d1e2$export$698f563af1ba02a5","$7485cecd1db6d1e2$export$d4b8ec0b96db1ee2","destProjection","$7485cecd1db6d1e2$export$96bfd09e2cffb006","$7485cecd1db6d1e2$export$494be3a3a25689ca","projections2","forwardTransform","inverseTransform","$85d0509330aeb16b$export$c2f0af2c946f6897","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$85d0509330aeb16b$export$f883a24d5edde77c","$114c40cb560c0f75$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$114c40cb560c0f75$var$getSmoothClampedResolution","result","$114c40cb560c0f75$export$d65a517690fc4385","resolutions","cappedMaxRes","capped","z","$114c40cb560c0f75$export$22ac0f6b219de91a","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","$114c40cb560c0f75$export$1c4e6da9b4b066fe","$26d14c57910fce5d$export$e20fbacbb41798b","$26d14c57910fce5d$export$f883a24d5edde77c","$26d14c57910fce5d$export$9ba78806de831083","theta","$26d14c57910fce5d$export$17a6e6f3448b17e8","$60b73359b7cbea06$export$929e5a82286172a6","$60b73359b7cbea06$export$57636bb43b1ccbb0","$60b73359b7cbea06$export$9b47139b511b56e4","$60b73359b7cbea06$export$45db2fc2f15997e7","$25100f5e6565f571$export$b92b2dedcfff79de","$25100f5e6565f571$export$bb628a54ab399bc9","anchor","anchorX","anchorY","deltaX","deltaY","$25100f5e6565f571$export$dcdf75081b88279d","$25100f5e6565f571$export$d73ee8ef04f5226a","$d304681c5c7155ef$var$tmpTransform","$d304681c5c7155ef$export$2e2bcd8739ae039","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","clone","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","rotate","scale","simplify","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$6fa6976fbdeed1e6$export$6af0c1b4a8549a43","layout","$6fa6976fbdeed1e6$export$2e2bcd8739ae039","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","$6fa6976fbdeed1e6$var$getLayoutForStride","$d8c744f9739a26fd$var$assignClosest","offset1","offset2","$d8c744f9739a26fd$export$bc2eb611ddf80103","squaredDelta","$d8c744f9739a26fd$export$fbf31c8f2668ed5a","ends","$d8c744f9739a26fd$export$4adc8e5135fb44c","maxDelta","isRing","tmpPoint","squaredDistance","$d8c744f9739a26fd$export$5a48a0eefcf14992","$c6aa333bc46dc9db$export$60815ead40ec79ab","$c6aa333bc46dc9db$export$5c4daf67e03c190f","$c6aa333bc46dc9db$export$47c3746a74384d45","coordinatess","jj","$d35d846b0041a8df$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","$d35d846b0041a8df$export$51a0620f7a28532b","$d35d846b0041a8df$export$b84e8d2c4920a0c6","$d35d846b0041a8df$export$60a9904b67f8d51b","simplifiedEnds","$981a585e03d45341$export$9c0934e4e9c3f61e","$981a585e03d45341$export$cbb9596fc0f40db2","$f0e1d465aeaf215e$export$3c5e1905f889266e","twiceArea","$f0e1d465aeaf215e$export$7a8ee541dfdf2ed5","$be42b861d4b26504$var$LinearRing","maxDelta_","maxDeltaRevision_","getArea","$be42b861d4b26504$export$2e2bcd8739ae039","$08d9e7f533fbd918$var$Point","$08d9e7f533fbd918$export$2e2bcd8739ae039","$2ae91a5e51871477$export$cedabedc7ac0e138","$2ae91a5e51871477$export$949a7a3a4b6f34fa","wn","$2ae91a5e51871477$export$ae868c0f6acc3355","$079ee6a994e93495$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","$2dc1e3d05654b707$export$4b80e395e36b5a56","ret","$23b26ca196e52909$export$40d8d71841a3d779","coordinatesExtent","point1","point2","$23b26ca196e52909$export$830a0dafbb2ef1c5","$23b26ca196e52909$export$76dcd8f8f83b6ddb","$19634ae136459fd6$export$741858880c96b18c","$69908d5e6502dc6e$export$318f2842ed17e094","edge","$69908d5e6502dc6e$export$f27cd06e85f4ba28","right","isClockwise","$69908d5e6502dc6e$export$b71b604ddfc778c7","$4f73f49e28337a0b$var$Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","$4f73f49e28337a0b$export$2e2bcd8739ae039","$4f73f49e28337a0b$export$c16b671815801c75","$db4368d88272edb2$var$animationCallback","returnValue","setTimeout","$db4368d88272edb2$export$ee75376562060184","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$db4368d88272edb2$var$calculateCenterOn","position","rotX","rotY","$db4368d88272edb2$export$2e2bcd8739ae039","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","constrainResolution","defaultMaxResolution","defaultMinResolution","constraint","$db4368d88272edb2$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","$db4368d88272edb2$export$964345001ee9ac52","rotationConstraint","enableRotation","constrainRotation","$db4368d88272edb2$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","h","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","$f45887fb7c8d0b37$export$acb1e9cb9ce4ca56","layerState","$f45887fb7c8d0b37$export$2e2bcd8739ae039","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$63afa0721463cc4f$var$expireIconCache","$63afa0721463cc4f$export$2e2bcd8739ae039","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$26e3b937f459ea52$export$2e2bcd8739ae039","inversePixelTransform","context","$6d9ed8668402d155$export$981241db82723ce2","$6d9ed8668402d155$export$1afde3d6e16a7b29","$6d9ed8668402d155$export$4d4f8be70b656192","$6d9ed8668402d155$export$e16017ac68d14492","$6d9ed8668402d155$var$fontRegEx","RegExp","$6d9ed8668402d155$var$fontRegExMatchIndex","$6d9ed8668402d155$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$98630333e805757e$export$9e05d10eae75c464","canvasPool","settings","canvas","shift","getContext","$98630333e805757e$export$e918ac6a1026a12a","clearRect","$98630333e805757e$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$98630333e805757e$export$1d0aa160432dfea5","$98630333e805757e$export$1e1c9bf5a4ffe0d1","lastChild","$98630333e805757e$export$caeacfe04f52533a","children","oldChildren","childNodes","oldChild","newChild","insertBefore","$55e4b931e1294ac3$export$1d36981fcadac93b","$55e4b931e1294ac3$var$measureFont","$55e4b931e1294ac3$var$measureContext","$55e4b931e1294ac3$export$7fdcec604f0b1fa7","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$55e4b931e1294ac3$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","measureElement","$55e4b931e1294ac3$var$measureText","measureText","$a171aa36392e172c$export$2e2bcd8739ae039","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","display","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","$0c7b6315d0fb132a$export$2f5ff21d758d25a7","$0c7b6315d0fb132a$var$Property","$0c7b6315d0fb132a$var$LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$0c7b6315d0fb132a$export$2e2bcd8739ae039","$0b9a0ee3b3be722f$export$2e2bcd8739ae039","$9e6f0cc332ce29c4$export$2e2bcd8739ae039","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","$b334f8af9e0699c9$export$2e2bcd8739ae039","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$7fce9391dab2ed85$export$2e2bcd8739ae039","$230aaf34bc5fc85e$export$2e2bcd8739ae039","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$ba35fa57d0cac5a6$export$2e2bcd8739ae039","MOVESTART","MOVEEND","LOADSTART","LOADEND","$2a0372e712100c91$export$2e2bcd8739ae039","LAYERGROUP","SIZE","TARGET","VIEW","$95bb4118e07c6dec$export$b4af72c40fd57063","$95bb4118e07c6dec$export$2e2bcd8739ae039","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$5628a3bbe24f2ed2$export$2e2bcd8739ae039","IDLE","LOADING","LOADED","EMPTY","$d23bd03bec14aaa1$export$2e2bcd8739ae039","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$d23bd03bec14aaa1$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","$169434e6895a90b5$export$2e2bcd8739ae039","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","$5e0c2b2b46418adb$export$2e2bcd8739ae039","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$0604ed551f73b43a$export$2e2bcd8739ae039","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","getView","contains","$ba926cd35a48df42$export$2e2bcd8739ae039","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$cc62b88d6fdd8666$export$ebe90cb607ad99e","controls","zoomOptions","rotateOptions","attribution","attributionOptions","$db8310c63d8900dd$export$2e2bcd8739ae039","ACTIVE","$0e465fe6e154d5ac$export$4c486572e961a974","$0e465fe6e154d5ac$export$ace321ff2a8016ef","$0e465fe6e154d5ac$export$2e2bcd8739ae039","setActive","getActive","mapBrowserEvent","active","$f38164ea0bad8edd$export$2e2bcd8739ae039","delta_","stopEvent","browserEvent","shiftKey","$b367ad6c88b37277$export$e2a20c553f6c85ce","$b367ad6c88b37277$export$2e2bcd8739ae039","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$d15b20cef6aa17dc$export$84bf76cd7afc7469","conditions","pass","$d15b20cef6aa17dc$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$d15b20cef6aa17dc$export$ae2cdf064e3b0c55","getTargetElement","hasAttribute","targetElement","activeElement","$d15b20cef6aa17dc$export$d7ddd398f22d79ef","$d15b20cef6aa17dc$export$ba9e5d519bc326ca","$d15b20cef6aa17dc$export$1238ad6b5e7fff70","$d15b20cef6aa17dc$export$fdc892d0d8fe3bfb","$d15b20cef6aa17dc$export$5d31fe68a477cfbb","$d15b20cef6aa17dc$export$e5570ca80cd8fd54","tagName","isContentEditable","$d15b20cef6aa17dc$export$abb7acbfa76bf3c4","pointerType","$d15b20cef6aa17dc$export$189f0d593022b199","isPrimary","$c358b38f385165c1$export$2e2bcd8739ae039","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","begin","distance","getDistance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","$f372e19a6f4cc4fa$export$2e2bcd8739ae039","lastAngle_","getSize","$04a285b1c5b19dc4$export$2e2bcd8739ae039","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","getGeometry","$a4c5a4d76aa35195$var$DragBoxEventType","$a4c5a4d76aa35195$export$7053c33c051365ea","$a4c5a4d76aa35195$export$2e2bcd8739ae039","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$6ec2182ad9ecaffe$export$2e2bcd8739ae039","out_","out","$775641f98e9e66c4$export$2e2bcd8739ae039","UP","DOWN","$a125bec615f63d48$export$2e2bcd8739ae039","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","$3df54af67da57c27$export$2e2bcd8739ae039","$eeef6ab178a9541d$export$2e2bcd8739ae039","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$bce15c8a4b0849e6$export$2e2bcd8739ae039","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$6cfb369e4f58bb4d$export$2e2bcd8739ae039","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$1eafb393452078ba$export$2e2bcd8739ae039","lastDistance_","lastScaleDelta_","scaleDelta","$94f7f97ff65dd335$export$ebe90cb607ad99e","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$f4a3c7314b83e8cb$export$622c471beb1693c7","$f4a3c7314b83e8cb$export$a71a825ff42fb8e1","$8d84803fa61d19cc$var$removeLayerMapProperty","$8d84803fa61d19cc$var$setLayerMapProperty","$8d84803fa61d19cc$export$2e2bcd8739ae039","optionsInternal","keyboardEventTarget","layerGroup","overlays","$8d84803fa61d19cc$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","oldSize","$78f154139cdb3fb7$var$adaptAttributions","attributionLike","$78f154139cdb3fb7$export$2e2bcd8739ae039","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","interpolate","viewResolver","viewRejector","viewPromise_","reject","getInterpolate","refresh","setAttributions","setState","$1a15b35aeafa90b6$export$2e2bcd8739ae039","PRELOAD","USE_INTERIM_TILES_ON_ERROR","$dad6fd428a4352d8$export$2e2bcd8739ae039","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$1f0a9ff7b8b04a9b$export$2e2bcd8739ae039","$3a58f7e94526b616$export$2e2bcd8739ae039","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$134104e188490ca8$var$pixelContext","$134104e188490ca8$export$2e2bcd8739ae039","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","row","willReadFrequently","drawImage","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","$a9b0f063511f4372$export$2e2bcd8739ae039","interimTile","transition_","transition","transitionStarts_","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","$57479999e3fea50d$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","listening","decoding","loaded","catch","$9d9c9a03487df0e9$export$2e2bcd8739ae039","tileLoadFunction","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","$9d9c9a03487df0e9$var$getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","$1570ae313379de8f$export$2e2bcd8739ae039","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$8b53b148a1066414$var$brokenDiagonalRendering_","$8b53b148a1066414$export$a166f0857c555517","$8b53b148a1066414$var$drawTestTriangle","u1","v1","u2","v2","closePath","restore","$8b53b148a1066414$var$verifyBrokenDiagonalRendering","$8b53b148a1066414$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$8b53b148a1066414$export$16d356211d01f1cc","$8b53b148a1066414$export$b3890eb0ae9dca99","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","$8b53b148a1066414$var$isBrokenDiagonalRendering","steps","ud","vd","step","strokeStyle","lineWidth","stroke","$e6fe9e66ec2c2716$export$2e2bcd8739ae039","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","$5a52dc63780b31ac$var$TileRange","containsTileRange","getHeight","getWidth","$5a52dc63780b31ac$export$958e3e1a02eac4b6","$5a52dc63780b31ac$export$2e2bcd8739ae039","$04f3b4ed243ed67a$export$2e2bcd8739ae039","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","globalAlpha","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$694d286639803e0c$export$2e2bcd8739ae039","$2b2a6675dabbff79$export$2e2bcd8739ae039","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","$8eae42c157d4209d$export$958e3e1a02eac4b6","$8eae42c157d4209d$export$92d0df0f1d25c63c","$8eae42c157d4209d$export$a47fb462a08de82f","$8eae42c157d4209d$export$a807b7874eb66454","$8eae42c157d4209d$export$d6af199866bfb566","$8eae42c157d4209d$export$60bedf8e3e3c3dbe","getFullTileRange","$f9dac0412052ca2c$export$2e2bcd8739ae039","pruneExceptNewestZ","$a893b9ba5bf4b096$export$2e2bcd8739ae039","TILELOADSTART","TILELOADEND","TILELOADERROR","$dde824e491126ba4$var$tmpTileCoord","$dde824e491126ba4$export$2e2bcd8739ae039","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","$cee266ea1cff2f38$export$1f4812384df8a9c5","$cee266ea1cff2f38$export$7b5b6ef8fd55fac4","$cee266ea1cff2f38$var$resolutionsFromExtent","$cee266ea1cff2f38$export$ce88871416242df8","$cee266ea1cff2f38$export$a251b12f5601c16f","$cee266ea1cff2f38$export$39a9ce3624977b84","$cee266ea1cff2f38$export$38500bbeccc864ff","xyzOptions","gridOptions","half","$dbab46b83da283dd$export$c571855c51e6c4b6","$dbab46b83da283dd$export$2e2bcd8739ae039","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","$4a1ad30b99b72311$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$4a1ad30b99b72311$export$436f44dbcc31fea3","templates","tileUrlFunctions","$4a1ad30b99b72311$export$4229b1d9af69b3be","$4a1ad30b99b72311$export$2a1fa079bfd73dde","url","urls","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","$cf1393464c57ab6e$var$UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","$cf1393464c57ab6e$export$2e2bcd8739ae039","$9d3a9ba029333382$var$defaultTileLoadFunction","imageTile","$9d3a9ba029333382$export$2e2bcd8739ae039","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$918df0479e8458a1$export$2e2bcd8739ae039","$919449b34326c72a$export$2e2bcd8739ae039","strokeRect","textAlign","textBaseline","strokeText","fillText","maplibregl","maplibreOptions","maplibreMap","$parcel$interopDefault","$75927c17d6fab688$exports","Map","attributionControl","interactive","trackResize","applyOpacity_","getCanvas","jumpTo","bearing","maplibreCanvas","isConnected","$783b21c686679f5d$var$sameSize","resize","redraw","getContainer"],"version":3,"file":"demo.cb5ab627.js.map"}